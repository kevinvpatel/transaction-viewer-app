{
  "blacklist_regex": "(?i).*\\b(password|otp|verification|thank you|congrats|please|requested|linked|cashback|congratulations|activation|passcode|osp|netsecure)\\b.*",
  "min_app_version": "591",
  "rules": [
    {
      "full_name": "Airtel",
      "name": "Airtel",
      "patterns": [
        {
          "regex": "(?i)(?:due amount:|bill of)\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*due.*(\\d{2}\\-[a-z]{3}-\\d{2})",
          "account_type": "phone",
          "pattern_UID": "60002",
          "sort_UID": "60007",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "group_id": -1
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)bill (?:payment)?\\s*(?:dated|for|details).*(?:broadband|Airtel Xstream Fiber)\\s*(?:a\\/c)? (?:id|no\\.) (\\d+).*(?:due amount:|of|total due\\:) (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{0,2})(?:\\sis|\\,).*? due (?:date:|on) (\\d{2}-[a-z]{3}-\\d{2,4})",
          "account_type": "phone",
          "pattern_UID": "60003",
          "sort_UID": "60003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "internet_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)bill details for (?:airtel a\\/c |your Airtel.* a/c no. |)(\\d*):? .*(?:total|tot.) due: (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) due date: (\\d{2}\\-[a-z]{3}-\\d{4}|immediate)",
          "account_type": "phone",
          "pattern_UID": "60005",
          "sort_UID": "60005",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)bill dated.*for airtel (?:no.|id|A\\/c no.) (\\d*): .*total due: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}), due date: (.*?)\\,",
          "account_type": "phone",
          "pattern_UID": "60006",
          "sort_UID": "60006",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)bill of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\,.*?airtel no[\\s\\.]*(\\d+) is due on (\\d{2}\\-[a-z]{3}-\\d{2})",
          "account_type": "phone",
          "pattern_UID": "60007",
          "sort_UID": "60002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "9000006",
      "senders": [
        "ARWSVC",
        "AIREXP",
        "121",
        "AIROTP",
        "AIRINF",
        "ARWINF",
        "AIRBIL"
      ]
    },
    {
      "full_name": "Airtel DTH",
      "name": "Airtel DTH",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)(?:payment received|recharge of) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for.*?airtel digitaltv id\\s*(\\d{10})\\,?.*current monthly charges - (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\,? next recharge date\\s*(?:is|\\:)\\s*(\\d{2}\\-[a-z]{3}\\-\\d{2,4})",
          "account_type": "prepaid_dth",
          "pattern_UID": "110001",
          "sort_UID": "110001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "create_txn": {
              "amount": {
                "group_id": 1
              }
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)digitaltv id (\\d{10}) .*valid till (\\d{2}-[a-z]{3})",
          "account_type": "prepaid_dth",
          "pattern_UID": "110002",
          "sort_UID": "110002",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "amount",
                    "child_field": "amount"
                  }
                ]
              },
              "parent_nomatch": {
                "child_override": [
                  {
                    "deleted": true
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "value": 0
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)customer id\\s*:\\s*(\\d{10}).*?validity.*?\\:\\s*(\\d{2}-[a-z]{3}-\\d{4}).*?monthly charges\\:?\\((?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\)",
          "account_type": "prepaid_dth",
          "pattern_UID": "110003",
          "sort_UID": "110003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:validity|due date).* (\\d{10}).* rental is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid_dth",
          "pattern_UID": "110004",
          "sort_UID": "110004",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "date",
                    "child_field": "date"
                  }
                ]
              },
              "parent_nomatch": {
                "child_override": [
                  {
                    "deleted": true
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "formats": [
                {
                  "use_sms_time": true,
                  "format": ""
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)customer id\\s*:\\s*(\\d{10}).*?monthly charges\\:?\\((?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\).*?validity.*?\\:\\s*(\\d{2}-[a-z]{3}-\\d{4})",
          "account_type": "prepaid_dth",
          "pattern_UID": "110005",
          "sort_UID": "110005",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 2
            }
          }
        }
      ],
      "sender_UID": "90000011",
      "senders": [
        "AIRDTH",
        "AIRDTV"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "9224150150"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Allahabad Bank",
      "name": "Allahbad Bk",
      "patterns": [
        {
          "regex": "(?i)X+(\\d{4}).*debited.*?(ATM Card|ATM).*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*bal : (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "360001",
          "sort_UID": "360001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "value": "card",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "debit_atm",
                  "value": ""
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)X+(\\d{4}).*debited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*bal.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "360003",
          "sort_UID": "360003",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)neft.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) to (.*) will.*(ref no : (\\w+))",
          "account_type": "bank",
          "pattern_UID": "360004",
          "sort_UID": "360004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_neft": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no. [-\\w]+(\\d{4}).*debited.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) through Internet Banking fund transfer\\. -- (\\d{2}\\/\\d{2}\\/\\d{2} \\d{2}:\\d{2})",
          "account_type": "bank",
          "pattern_UID": "360005",
          "sort_UID": "360005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)account x+(\\d+).*debited.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for (.+) through Internet Banking\\. -- (\\d{2}\\/\\d{2}\\/\\d{2} \\d{2}:\\d{2})",
          "account_type": "debit_card",
          "pattern_UID": "360006",
          "sort_UID": "360006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) is credited .*by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .* clr bal : (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*\\-\\s*(?:ealb|alb)",
          "account_type": "bank",
          "pattern_UID": "360007",
          "sort_UID": "360007",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)account no\\s*:\\s*x*(\\d{4})\\s*balance\\s*:\\s*(?:INR|Rs)[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "360008",
          "sort_UID": "360008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no. x+(\\d{4}) is debited by (?:INR|Rs)[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2}) on .* and credited to (.*)\\(UPI Ref no (.*)\\)",
          "account_type": "bank",
          "pattern_UID": "360009",
          "sort_UID": "360009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*\\d*(\\d{4}) is credited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*? for reversal.*?(upi ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "360010",
          "sort_UID": "360010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited by (?:INR|Rs)?[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) on.*?sent by .*\\-(.*?)\\((upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "360011",
          "sort_UID": "360011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c [\\s\\.]*x*(\\d{4}) is credited by (?:INR|Rs)?[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) on.*\\((imps ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "360012",
          "sort_UID": "360012",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)lpg subsidy of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been credited in your account no[\\s\\.]*x*(\\d{4})\\.",
          "account_type": "bank",
          "pattern_UID": "360013",
          "sort_UID": "360013",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "LPG Subsidy",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000036",
      "senders": [
        "ALBANK",
        "AICSMS",
        "ALBUPI"
      ]
    },
    {
      "full_name": "American Express",
      "name": "AmEx",
      "patterns": [
        {
          "regex": "(?i)(?:A charge of|spent|Txn of) (INR|Rs|[a-z]{3})[\\.,\\s]?([\\d,\\s]*\\.?\\d{0,2}) (?:has|on).*?(?:card No\\.|card|amex)\\s*\\**(\\d{5}) at (\\w+.*) on (.*)\\s*IST",
          "account_type": "credit_card",
          "pattern_UID": "40001",
          "sort_UID": "40001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy' at 'hh:mma"
                },
                {
                  "use_sms_time": false,
                  "format": "ddMMMyy hh:mma"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)Card \\*+(\\d{5}).*total payment (?:of )?(?:INR|Rs)[\\.,\\s]?([\\d,,]*\\.?\\d{2}) is due by ([\\d,\\/]*)",
          "account_type": "credit_card",
          "pattern_UID": "40002",
          "sort_UID": "40003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)Card \\*+(\\d{5}).*min payment (?:INR|Rs)[\\.,\\s]?([\\d,,]*\\.?\\d{2}).*total payment (?:of )?(?:INR|Rs)[\\.,\\s]?([\\d,,]*\\.?\\d{2}) is due by ([\\d,\\/]*)",
          "account_type": "credit_card",
          "pattern_UID": "40003",
          "sort_UID": "40002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "min_due_amount": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)min payment (?:INR|Rs)[\\.,\\s]?([\\d,,]*\\.?\\d{2})\\/total payment (?:INR|Rs)[\\.,\\s]?([\\d,,]*\\.?\\d{2}) for amex card \\*+(\\d{5}).* is due by ([\\d,\\/]*)",
          "account_type": "credit_card",
          "pattern_UID": "40004",
          "sort_UID": "40004",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "min_due_amount": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]?([\\d,,]*\\.?\\d{2}) for amex (?:corporate)?\\s*card \\*+(\\d{5}).* is due by ([\\d,\\/]*)",
          "account_type": "credit_card",
          "pattern_UID": "40005",
          "sort_UID": "40005",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been credited.*american express card \\**(\\d{5}) on",
          "account_type": "credit_card",
          "pattern_UID": "40007",
          "sort_UID": "40007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)balance on american express card ending in (\\d{5}) is (?:INR|Rs)*[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "40008",
          "sort_UID": "40008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        }
      ],
      "sender_UID": "9000004",
      "senders": [
        "MYAMEX",
        "AMEXEP",
        "XXAMEX",
        "56161940",
        "59039000",
        "5757544",
        "57575480",
        "57575701"
      ],
      "sender_regexes": [
        "^5\\d{5}$"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "9223011300"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Andhra Bank",
      "name": "Andhra Bnk",
      "patterns": [
        {
          "regex": "(?i)(Chq.no.\\d+) fvg\\.(.*) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on a\\/c no\\.x+(\\d{4}) is recd in clg",
          "account_type": "bank",
          "pattern_UID": "350014",
          "sort_UID": "350026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{2,4}).*debited.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*[\\s\\S]*(?:balance is|bal)\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350004",
          "sort_UID": "350013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}).*debited.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*thru upi to (\\w*).*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350013",
          "sort_UID": "350004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*debited.*x+(\\d{4}) on (\\d{2}-\\d{2}-\\d{4})(?: towards)?(.*)\\..*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350005",
          "sort_UID": "350005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)balance .* x*(\\d{4}) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350007",
          "sort_UID": "350007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*credited.* x*(\\d{4}).* balance is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350008",
          "sort_UID": "350021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|a\\/c no.) x*(\\d{2,4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*(?:balance is|bal).*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350009",
          "sort_UID": "350022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)deposited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* x*(\\d{4}) .* balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350010",
          "sort_UID": "350010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)credit card.*? \\d*x*(\\d{4}) will be .*total amt due is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2}) and min amt due is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\.]*(?:due|pay by) date (\\d{2}-\\d{2}-\\d{4}|immediate)",
          "account_type": "credit_card",
          "pattern_UID": "350012",
          "sort_UID": "350012",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "immediate"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) was spent .*(?:AB card|credit card) ending \\d*x*(\\d{4}) at (.*) on (\\d{2}\\-[a-z]{3}\\-\\d{2} \\-?\\s*\\d{2}\\:\\d{2}\\:\\d{2})\\. Avail Limit is [\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "350015",
          "sort_UID": "350015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy - HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) withdrawn from a\\/c x*(\\d{4}) on .*at (.*?atm).*avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "350016",
          "sort_UID": "350016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)amount of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*is reversed (?:through|thru) ATM.*a\\/c balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "350017",
          "sort_UID": "350017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) txn done on card x*(\\d{4}) on .* at (.*) pos\\/ecom.*avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "350018",
          "sort_UID": "350018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(pos tran|imps).*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?is reversed.*?(?:a\\/c no\\.|card) x+(\\d{3,4}) on.*A\\/c Bal.*?(?:is)?\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "350019",
          "sort_UID": "350019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "acc_type_override": "bank",
                  "txn_type": "credit",
                  "value": "imps"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 1
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c x*(\\d{3,4}) is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?(?:sent by|from) (.*?)\\s*(?:thru|\\.).*?bal.*?is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350020",
          "sort_UID": "350020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(.*?interest) of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*credited.* x*(\\d{4}).* balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*\\-\\s*andhra",
          "account_type": "bank",
          "pattern_UID": "350021",
          "sort_UID": "350008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_interest",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|a\\/c no.) x*(\\d{2,4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?upi from (.*)\\..*?(?:balance is|bal) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350022",
          "sort_UID": "350009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}) .*credited to your credit card.*?(\\d{4}).*?Avl Bal[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "350023",
          "sort_UID": "350023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}) credited to loan a\\/c x*(\\d{3,4}) on.*?bal is (?:INR|Rs)?[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})[\\s\\-]*andhra",
          "account_type": "loan",
          "pattern_UID": "350024",
          "sort_UID": "350024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(cheque no[\\s\\.]*\\d+) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) lodged in.*?for credit of ac x*(\\d{4}) is credited[\\s\\.]*andhra",
          "account_type": "bank",
          "pattern_UID": "350025",
          "sort_UID": "350025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "note": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000035",
      "senders": [
        "ANDBNK",
        "ANDHBK",
        "ANKBNK",
        "ANDHRA"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "5676782",
                  "+919717000002"
                ],
                "format": "BAL"
              },
              {
                "type": "voice",
                "numbers": [
                  "18004195959"
                ]
              }
            ]
          },
          {
            "account_type": "credit_card",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "5676782"
                ],
                "format": "CARDBAL XXXX"
              }
            ]
          }
        ]
      },
      "full_name": "Axis Bank",
      "name": "Axis",
      "patterns": [
        {
          "regex": "(?i)Your a\\/c(?: no.?|) \\d*(\\d{6}) .* debited.* (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*(?:balance is|bal\\:) (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\s|\\.)\\s*Info: INB\\/(.*?)\\/([^\\/ ]*)\\/?",
          "account_type": "bank",
          "pattern_UID": "30000",
          "sort_UID": "30000",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 5
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)Your a\\/c \\d*(\\d{6}) is debited.*(INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on ([\\d,-]* (?:[\\d,:]*)?) Info: ([^\\/,\\n]*)\\/([^\\/,\\n]*)\\/?([^\\/,\\n]*)\\/?",
          "account_type": "bank",
          "pattern_UID": "30001",
          "sort_UID": "30001",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 1
            },
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MM-yy HH:mm:ss"
                },
                {
                  "use_sms_time": true,
                  "format": "yy-MM-dd"
                }
              ]
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "cash-atm"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "ignore",
                  "value": "ecom"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "value": "pur"
                },
                {
                  "txn_type": "ecs",
                  "value": "ecs"
                },
                {
                  "txn_type": "default",
                  "value": ""
                }
              ],
              "group_id": 5
            },
            "pos": {
              "group_id": 6
            },
            "location": {
              "group_id": 7
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs|[a-z]{3} )[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*spent on your Credit Card X+([\\d]{4}) on (.*) at (.*)\\. Avbl.*?(?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "30002",
          "sort_UID": "30002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "pos": {
              "group_id": 5
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)Your Credit card.*?x*(\\d{4}) (?:payment|statement) of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*? (?:is due on|with due date) ([a-z:0-9:-]*).? .*min (?:due payment of|amt due) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "30004",
          "sort_UID": "30004",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)Your a\\/c(?: no.?|) \\d*(\\d{6}) .*debited.*(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*(?:balance is|bal\\:) (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\s|\\.\\s*)\\s*Info: ((?:.*(?=\\scall)|.*))",
          "account_type": "bank",
          "pattern_UID": "30005",
          "sort_UID": "30007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "pos_override": "Cheque",
                  "value": "-chq"
                },
                {
                  "txn_type": "debit_card",
                  "value": "ecom"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c(?: no.?|) \\d*(\\d{6}) .* debited.*(INR|Rs.\\s*Rs|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*) (?:a\\/c bal|avbl bal).*(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\.|\\s)\\s*Info[\\s\\:\\.]*([^\\/, ]*)\\/([^\\/, \\.?]*)\\/?([^\\/, ]*)\\/?",
          "account_type": "bank",
          "pattern_UID": "30006",
          "sort_UID": "30006",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 1
            },
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                },
                {
                  "use_sms_time": true,
                  "format": "yy-MM-dd"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "pos_override": "ATM",
                  "value": "cash-atm"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "ignore",
                  "value": "ecom"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "value": "pur"
                },
                {
                  "txn_type": "ecs",
                  "pos_override": "ECS",
                  "value": "ecs"
                },
                {
                  "txn_type": "net_banking",
                  "pos_override": "Debit",
                  "value": ""
                }
              ],
              "group_id": 6
            },
            "pos": {
              "group_id": 7
            }
          }
        },
        {
          "regex": "(?i)(?:your balance for account no.|\\||a\\/c no[\\s\\.]*|bal for your a\\/c no\\.) x*(\\d{3,6}) (?:balance)?\\s*(?:is|\\-) (?:INR|Rs)[\\.:,\\s|]*([\\d,\\-]+\\.?\\d{0,2})[\\s\\.]",
          "account_type": "bank",
          "pattern_UID": "30007",
          "sort_UID": "30008",
          "reparse": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)your (?:account|a\\/c) (?:number |)\\**x*(\\d{3,6}) has (?:a|clear) balance of (?:INR|Rs|)[\\.:,\\s|]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30008",
          "sort_UID": "30009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)balance.*axis bank credit card \\d+\\**(\\d{4}).*is (?:INR|Rs)[\\.:,\\s|]*(-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "30009",
          "sort_UID": "30010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "outstanding_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)balance in (?:savings a\\/c|.*?a\\/c no) \\d*(\\d{6}).*(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30010",
          "sort_UID": "30011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)Your a\\/c(?: no.?|) \\d*(\\d{6}) .*credited.* (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* (?:a\\/c|avbl) bal.*?(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\.|\\s)",
          "account_type": "bank",
          "pattern_UID": "30012",
          "sort_UID": "30037",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)Your a\\/c(?: no.?|) \\d*(\\d{6}) .*debited.* (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* (?:a\\/c|avbl) bal.*?(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\.|\\s)\\s*Info: upi\\/p2a\\/\\d*\\/([\\w\\s]*)",
          "account_type": "bank",
          "pattern_UID": "30014",
          "sort_UID": "30005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)Your a\\/c(?: no.?|) \\d*(\\d{6}) .*debited.* (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* (?:a\\/c bal|avbl bal).*?(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\.|\\s)\\s*Info: upi\\/p2m\\/\\d*\\/([\\w\\s]*)",
          "account_type": "bank",
          "pattern_UID": "30015",
          "sort_UID": "30005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c \\d*(\\d{6}) debited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\;baL:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})(?:\\[I|\\?)NB\\/([^\\/]*)\\/([^\\/]*?)(?:\\/|\\])",
          "account_type": "bank",
          "pattern_UID": "30016",
          "sort_UID": "30016",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c \\d*(\\d{6}) debited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\;baL:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\[(UPI)\\/(p2m)\\/(.*?)\\/(.*?)\\/?\\]",
          "account_type": "bank",
          "pattern_UID": "30017",
          "sort_UID": "30059",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 7
            }
          }
        },
        {
          "regex": "(?i)a\\/c \\d*(\\d{6}) debited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\;bal:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})(?:\\[[a-z]{1}|\\?)(.*?)\\/(.*?)\\/(.*?)\\/(\\w*\\s?\\w*)",
          "account_type": "bank",
          "pattern_UID": "30018",
          "sort_UID": "30018",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "pi"
                },
                {
                  "txn_type": "net_banking",
                  "value": "eft"
                },
                {
                  "txn_type": "net_banking",
                  "pos_override": "Net Banking",
                  "value": "mps"
                },
                {
                  "txn_type": "net_banking",
                  "pos_override": "Debit",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "note": {
              "group_id": 6
            },
            "network_reference_id": {
              "group_id": 6
            },
            "pos": {
              "group_id": 7,
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c \\d*(\\d{6}) debited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2})\\;bAL:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2})(?:\\?|\\[)(\\w*[\\s-]*\\w*\\s*\\w*)",
          "account_type": "bank",
          "pattern_UID": "30019",
          "sort_UID": "30019",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4,
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "chq"
                },
                {
                  "txn_type": "default",
                  "value": ""
                }
              ],
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) credited to a\\/c \\d*(\\d{6})\\;baL:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30020",
          "sort_UID": "30020",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)emi of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*for axis bank loan a\\/c\\s?([a-z0-9]*)\\s*is due on\\s*(\\d{2}(?:-|\\.)(?:\\d{2}|[a-z]{3})(?:-|\\.)\\d{2,4})",
          "account_type": "loan",
          "account_name_override": "Axis Loan",
          "pattern_UID": "30021",
          "sort_UID": "30021",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)a\\/c no\\. \\s*x*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*(IMPS ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "30022",
          "sort_UID": "30022",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)Your a\\/c(?: no.?|) \\d*(\\d{6}) .* debited.*(INR|Rs.\\s*Rs|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*) at ([^\\/, ]*)\\/([^\\/\\?]*)\\/([^\\/,]*).*?(?:a\\/c bal|avbl bal).*(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30023",
          "sort_UID": "30023",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 1
            },
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                },
                {
                  "use_sms_time": true,
                  "format": "yy-MM-dd"
                }
              ]
            },
            "account_balance": {
              "group_id": 8
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "pos_override": "ATM",
                  "value": "cash-atm"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "ignore",
                  "value": "ecom"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "value": "pur"
                },
                {
                  "txn_type": "ecs",
                  "pos_override": "ECS",
                  "value": "ecs"
                },
                {
                  "txn_type": "net_banking",
                  "pos_override": "Debit",
                  "value": ""
                }
              ],
              "group_id": 5
            },
            "pos": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited from (?:your|axis bank) a\\/c (?:no\\.)?\\s*x*(\\d+) on (.*)\\. a\\/c bal[\\:\\-]* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30024",
          "sort_UID": "30024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)ending with (\\d{4}).*debited with (INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*at.*) at (.*?)\\.",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Axis Forex Card",
          "pattern_UID": "30025",
          "sort_UID": "30025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 5
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy' at 'hh:mm a"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)fastag.*?successfully recharged for (?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2}).*?bal.*? is (?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "pattern_UID": "30026",
          "sort_UID": "30026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "FASTag"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "FasTag Recharge",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)fastag.*?has been debited (?:with)?\\s*(?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2}).*? (vehicle (?:no\\.)?\\s*\\w+) at (.*) on (.*?)\\.\\s*bal.*? is (?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "pattern_UID": "30027",
          "sort_UID": "30027",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd'T'HH:mm:ss"
                }
              ]
            },
            "pan": {
              "value": "FASTag"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "note": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2}) received for.*?credit card x*(\\d{4}).*?available limit[\\s\\:]*(?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "30028",
          "sort_UID": "30028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)Your a\\/c(?: no.?)? \\d*(\\d{6}) .*credited.* (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* (?:a\\/c|avbl) bal.*?(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\.|\\s)\\s*info[\\s\\:\\.\\-]*(?:(?:visa|rupay).*?refund|pur rev txn dt)[\\/\\s]\\d{2}[\\.\\-]\\w{2,3}[\\-\\.]\\d{2}\\/?(.*?)(?:$|\\.\\s*call)",
          "account_type": "debit_card",
          "pattern_UID": "30029",
          "sort_UID": "30029",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)Your a\\/c(?: no.?)? \\d*(\\d{6}) .*credited.* (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* (?:a\\/c|avbl) bal.*?(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\.|\\s)\\s*(info.*?(pur rev \\d{2}\\-|emvpos refund|refund|atm\\-revsl|\\:\\s*rev\\/|reversal|pur\\-rev\\/|\\:\\s*txn rev\\/|pur rev txn|\\:\\s*pur\\/rev\\/).*?)(?:$|\\.\\s*call)",
          "account_type": "bank",
          "pattern_UID": "30030",
          "sort_UID": "30030",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "acc_type_override": "debit_card",
                  "value": "atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "acc_type_override": "debit_card",
                  "pos_override": "Debit Card Reversal",
                  "value": "pur"
                },
                {
                  "txn_type": "credit",
                  "acc_type_override": "debit_card",
                  "pos_override": "Debit Card Reversal",
                  "value": "pos"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 5
            },
            "transaction_category": "walnut_refund",
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)Your a\\/c(?: no.?|) \\d*(\\d{6}) .*credited.* (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* (?:a\\/c|avbl) bal.*?(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\.|\\s)\\s*info[\\s\\:\\.]*((?:neft|inb.*?|mob)\\/.*?\\/(?:m\\/s\\.?|\\.\\/|a\\/c|24\\/7|\\d*\\/)?(.*?)(?:\\/|$|\\.\\scall).*?(?:$|\\(if))",
          "account_type": "bank",
          "pattern_UID": "30031",
          "sort_UID": "30031",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)your a\\/c (\\d{6}) is reversed (?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2}) on (.*?) info\\:\\s*(cash\\-atm|pur)",
          "account_type": "debit_card",
          "pattern_UID": "30032",
          "sort_UID": "30032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "cash-atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": "pur"
                }
              ],
              "group_id": 4
            },
            "transaction_category": "walnut_refund",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)Your a\\/c(?: no.?|) \\d*(\\d{6}) .*credited.* (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* (?:a\\/c|avbl) bal.*?(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\.|\\s)\\s*info[\\s\\:\\.]*((?:upi|imps)\\/.*?\\/.*?\\/(?:[a-z]{0,2}\\/)?(.*?)(?:\\/|$|\\.\\s*call).*?(?:$|\\(if))",
          "account_type": "bank",
          "pattern_UID": "30033",
          "sort_UID": "30033",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)Your a\\/c(?: no.?)? \\d*(\\d{6}) .*credited.* (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* (?:a\\/c|avbl) bal.*?(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\.|\\s)\\s*info[\\s\\:\\.]*((?:ecs|trf|rtgs\\/.*?)\\/(?:m\\/s)?([^\\d].*?)(?:\\/|$|\\.\\s*call).*?)(?:$|\\(if)",
          "account_type": "bank",
          "pattern_UID": "30034",
          "sort_UID": "30034",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)Your a\\/c(?: no.?)? \\d*(\\d{6}) .*credited.* (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* (?:a\\/c|avbl) bal.*?(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\.|\\s)\\s*info[\\s\\:\\.\\-]*(.*?(?:salary|sal\\s*(?:for)?\\s*(?:jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)).*?)(?:\\.\\s*call|$)",
          "account_type": "bank",
          "pattern_UID": "30035",
          "sort_UID": "30035",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            },
            "note": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c(?: no.?|) x*\\d*?(\\d{4,6}) .*credited.* (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* (?:a\\/c|avbl|avl) bal.*?(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\.|\\s)\\s*info[\\s\\:\\.]*(.*?)(?:$|\\.\\s*call|\\-\\s*axis bank)",
          "account_type": "bank",
          "pattern_UID": "30036",
          "sort_UID": "30036",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)Your a\\/c(?: no.?)? \\d*(\\d{6}) .*credited.* (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* (?:a\\/c|avbl) bal.*?(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\.|\\s)\\s*info[\\s\\:\\.\\-]*.*?refund\\/(.*?)\\/\\d{2}\\-",
          "account_type": "debit_card",
          "pattern_UID": "30037",
          "sort_UID": "30012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is credited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (\\d{2}\\-\\d{2}\\-\\d{4} \\d{2}\\:\\d{2}\\:\\d{2})",
          "account_type": "bank",
          "pattern_UID": "30038",
          "sort_UID": "30038",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs.\\s*Rs|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) debited from a\\/c no[\\s\\.]*x*(\\d{4,6}) on.*?\\sat (inb(?:\\/neft)?|upi\\/|neft.*?\\/|imps.*?\\/|flexi|trf).*?\\/.*?\\/(.*?)(?:\\/|[\\.\\s]*avl).*? bal[\\s\\-\\:]*(?:INR Rs|INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30039",
          "sort_UID": "30039",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 3
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 6
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs.\\s*Rs|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) debited from a\\/c no[\\s\\.]*x*(\\d{4,6}) on.*?\\sat (pur|cash\\-atm|mob|apy|axisdirect|axmob)\\/.*?avl bal[\\s\\:\\-]*(?:INR Rs|INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30040",
          "sort_UID": "30040",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 3
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 5
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "debit_card",
                  "value": "pur",
                  "pos_override": "Debit",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs.\\s*Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to a\\/c no[\\s\\.]*x*(\\d{4,6}) on.*?\\sinfo[\\s\\:\\.\\-]*((?:inb\\/.*?\\/|upi\\/.*?\\/.*?\\/|neft\\/.*?\\/|imps\\/.*?\\/.*?\\/|mob\\/.*?\\/|rtgs\\/.*?\\/|inb\\-bulk\\-upld\\/.*?\\/|ecs\\/|td\\/.*?\\/.*?\\/)((?:m\\/)?.*?)(?:\\/|\\.\\s*avl ).*?)bal[\\:\\s\\-]*(?:INR Rs|INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30041",
          "sort_UID": "30041",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to a\\/c(?: no.?)? x*(\\d{4,6}) on .*?info[\\s\\:\\.\\-]*(?:(?:visa|rupay).*?refund|pur rev txn dt)[\\/\\s]\\d{2}[\\.\\-]\\w{2,3}[\\.\\-]\\d{2}[\\/\\s](.*?)\\.\\s*avl bal\\:\\s*(?:INR Rs|INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "30042",
          "sort_UID": "30042",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to a\\/c(?: no.?)? x*(\\d{4,6}) on .*?info[\\s\\:\\.\\-]*refund\\/(.*?)\\/(?:dt\\.)?\\d{2}[\\.\\-]\\w{2,3}[\\.\\-]\\d{2}\\.\\s*avl bal\\:\\s*(?:INR Rs|INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30043",
          "sort_UID": "30043",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to (?:axis bank)?\\s*a\\/c(?: no.?)? x*(\\d{4,6}) on .*?info[\\s\\:\\.\\-]*(?:ard|edc|brn\\-flexi|bna|mob|mswipe|ift|to for\\s|axisdirect|sak|nfs|upip2ppay)[\\/\\-\\d+].*?\\.\\s*avl bal[\\:\\s\\-]*(?:INR Rs|INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30044",
          "sort_UID": "30044",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to a\\/c(?: no.?)? x*\\d*?(\\d{4,6}) on .*?info[\\s\\:\\.\\-]*(.*?)\\.\\s*avl bal[\\:\\s\\-]*(?:INR Rs|INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30045",
          "sort_UID": "30045",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs.\\s*Rs|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) debited from a\\/c no[\\s\\.]*x*(\\d{4,6}) on.*?\\sat (.*?)\\.\\s*avl bal[\\s\\-\\:]*(?:INR Rs|INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30046",
          "sort_UID": "30047",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 3
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "cash wdl"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "value": "ecom/"
                },
                {
                  "txn_type": "cheque",
                  "value": "clg-chq"
                },
                {
                  "txn_type": "ecs",
                  "value": "ecs/"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs.\\s*Rs|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) debited from a\\/c no[\\s\\.]*x*(\\d{4,6}) on.*?\\sat (inb(?:\\/neft)?|upi\\/|neft.*?\\/|imps.*?\\/|flexi|trf|mob|axmob).*?\\/.*?\\/(.*?)(?:\\/|[\\.\\s]*avl)",
          "account_type": "bank",
          "pattern_UID": "30047",
          "sort_UID": "30046",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 3
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)just paid (?:Rs\\.INR|INR|Rs)[\\.,\\s\\|]*([\\d\\,]*\\.?\\d{0,2}) to (?:m\\/s\\.)*\\s*(.*?) have a nice day",
          "account_type": "bank",
          "pattern_UID": "30048",
          "sort_UID": "30048",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)payment received for amount of (?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2}) for creditcard number x*(\\d{4}) on",
          "account_type": "credit_card",
          "pattern_UID": "30049",
          "sort_UID": "30049",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)neft txn[\\s\\.]*with ref[\\s\\.]*no (\\w+) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*credited to beneficiary[\\s\\:]*(.*?) on",
          "account_type": "bank",
          "pattern_UID": "30050",
          "sort_UID": "30050",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 1,
              "is_neft": true
            }
          }
        },
        {
          "regex": "(?i)consolidated charges .*?for a\\/c no[\\s\\.\\dx]*(\\d{4})\\:.*?[\\s\\S]*total[\\:\\s]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30052",
          "sort_UID": "30052",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)cashback of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been credited .*?credit card x*(\\d{4}) towards",
          "account_type": "credit_card",
          "pattern_UID": "30053",
          "sort_UID": "30053",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_rewards",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cashback",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)spent[\\s\\S].*?card no[\\s\\.]*x*(\\d{4})[\\s\\S](INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S][\\d\\-]+[\\s\\S](.*?)[\\s\\S]avl lmt (?:INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "30054",
          "sort_UID": "30054",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*(\\d{6})[\\s\\S]debit[\\s\\S](INR|Rs.\\s*Rs|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*(pur|atm-wdl)\\/(.*)[\\s\\S]bal (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "30055",
          "sort_UID": "30055",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 1
            },
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 6
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "pos_override": "ATM",
                  "value": "atm-wdl"
                },
                {
                  "txn_type": "debit_card",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)withdrawn[\\s\\S]card no\\.\\s*x*(\\d{4})[\\s\\S](?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*avl cash (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "30056",
          "sort_UID": "30056",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_atm",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) was reversed.*?a\\/c no[\\s\\.]*x*(\\d{6}) on (.*?)[\\s\\.]+info[\\s\\-]+(pur|atm\\-wdl)\\/(.*?)(?:\\/|\\.$)",
          "account_type": "debit_card",
          "pattern_UID": "30057",
          "sort_UID": "30057",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "atm-wdl",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": "pur"
                }
              ],
              "group_id": 4
            },
            "transaction_category": "walnut_refund",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 5
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) debited from prepaid card no[\\s\\.]*x*(\\d{4})\\..*?avl bal (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "pattern_UID": "30058",
          "sort_UID": "30058",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs.\\s*Rs|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) debited from a\\/c no[\\s\\.]*x*(\\d{4,6}) on.*?\\sat upi\\/\\w+\\/\\d+\\/[x\\d]+\\/.*?\\.\\s*avl bal[\\s\\-\\:]*(?:INR Rs|INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30059",
          "sort_UID": "30017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "currency": {
              "group_id": 1
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)debit[\\s\\S](INR|Rs.\\s*Rs|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]a\\/c no[\\s\\.]*x*(\\d{6})[\\s\\S]([\\d\\-]+ [\\d\\:]+)[\\s\\S](pur|atm-wdl)\\/(.*)[\\s\\S]bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "30060",
          "sort_UID": "30060",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 3
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 7
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "pos_override": "ATM",
                  "value": "atm-wdl"
                },
                {
                  "txn_type": "debit_card",
                  "value": ""
                }
              ],
              "group_id": 5
            },
            "pos": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)debit[\\s\\S](INR|Rs.\\s*Rs|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]a\\/c no[\\s\\.]*x*(\\d{4,6})[\\s\\S]([\\d\\-]+ [\\d\\:]+)[\\s\\S](inb\\/\\d+|upi\\/p2a\\/\\d+|imps\\/.*?\\/\\d+|mob[\\/\\-].*?|axmob|axis\\-ccp|axis\\-trf)\\/(.*?)(?:\\/|\\n).*?[\\s\\S]*bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30061",
          "sort_UID": "30061",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 3
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi/"
                },
                {
                  "txn_type": "net_banking",
                  "value": "axmob",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": "mob-td",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": "axis-trf",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": "axis-ccp",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 5
            },
            "pos": {
              "group_id": 6
            },
            "account_balance": {
              "group_id": 7
            }
          }
        },
        {
          "regex": "(?i)debit[\\s\\S](INR|Rs.\\s*Rs|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]a\\/c no[\\s\\.]*x*(\\d{4,6})[\\s\\S]([\\d\\-]+ [\\d\\:]+)[\\s\\S](.*?)[\\s\\S]bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "30062",
          "sort_UID": "30062",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 5
            },
            "account_balance": {
              "group_id": 6
            }
          }
        }
      ],
      "sender_UID": "9000003",
      "senders": [
        "AXISBK"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "8468001111",
                  "9223011311"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Bank of Baroda",
      "name": "BOB",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) is debited.*\\.*(\\d{4}) on ([\\d\\-]* [\\d\\:]*) .*(?:avlbl|clear) Bal (?:INR|Rs)[\\.,\\s]*([\\d,-]+\\.?\\d{0,2}).*(?:at|by) (atm|pos|ebanking|mbanking|neft|rtgs)",
          "account_type": "debit_card",
          "pattern_UID": "210001",
          "sort_UID": "210002",
          "sms_type": "transaction",
          "data_fields": {
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 5,
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "value": "pos",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": "mbanking",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": "ebanking",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": "neft",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": "rtgs",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": "imps",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": ""
                }
              ],
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i).*cheque.*(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) is debited.*?(\\d{4})\\s*(?:on|\\.).*(?:clear|avlbl) (?:bal|amt)[\\s\\:](?:INR|Rs)[\\.,\\s]*([\\d,-]+\\.?\\d{0,2}).*?(?:at|by|\\()[\\.,\\s]*([\\w\\-: ]*)",
          "account_type": "bank",
          "pattern_UID": "210005",
          "sort_UID": "210001",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "transaction_type": "cheque"
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) is debited.*?(\\d{4}) on ([\\d-]*\\s[\\d\\:]*).*?Bal.*?(?:INR|Rs)[\\.,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "210002",
          "sort_UID": "210003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}) for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*) at (.*) (.* .*) is successful\\.(?:your)?(?: avl)?(?: limit)?(?: is )?(?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "210003",
          "sort_UID": "210004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) has been generated.*min due of (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on or before ([\\d\\.]+)",
          "account_type": "credit_card",
          "pattern_UID": "210008",
          "sort_UID": "210005",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "min_due_amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) due on ([\\d\\.]+)",
          "account_type": "credit_card",
          "pattern_UID": "210004",
          "sort_UID": "210006",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) is credited to a\\/c \\.*(\\d{4}) on ([\\d-]*\\s[\\d:]*).*(?:clear|avlbl|os) bal (?:INR|Rs)[\\.,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "210006",
          "sort_UID": "210007",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "transaction_type": "credit"
          }
        },
        {
          "regex": "(?i)clear bal .* a\\/c no. x*(\\d{4}) is (?:INR|Rs)[\\.,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "210007",
          "sort_UID": "210008",
          "sms_type": "transaction",
          "reparse": true,
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no. x*(\\d{4}) (?:INR|Rs)[\\.,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "210021",
          "sort_UID": "210021",
          "sms_type": "transaction",
          "reparse": true,
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no\\. \\s*x*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:on|and).*credited to (VPA|a\\/c no.) (.*) \\(?(upi ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "210022",
          "sort_UID": "210022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "UPI Funds Transfer",
                  "txn_type": "upi",
                  "value": "a/c no",
                  "set_no_pos": true
                },
                {
                  "txn_type": "upi",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 5
            },
            "network_reference_id": {
              "group_id": 6,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no\\. \\s*x*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*(IMPS ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "210023",
          "sort_UID": "210023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*\\d*(\\d{4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*reversal of transaction (upi ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "210024",
          "sort_UID": "210024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)fund transfer.*successful.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) debited from x+(\\d{4}),\\s*(?:transaction|txn) id[\\s\\:]*(\\d+)",
          "account_type": "bank",
          "pattern_UID": "210025",
          "sort_UID": "210025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "prefix": "Transaction ID:",
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2}).*?spent.*?credit card ending x*(\\d{4}) at (.*?) on .*?available credit limit (?:is)?\\s*(?:INR|Rs)?[\\.,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "210026",
          "sort_UID": "210026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your account is credited (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on date (.*?) by (upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "210027",
          "sort_UID": "210027",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd hh:mm:ss a"
                }
              ]
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "transaction_type": "credit"
          }
        },
        {
          "regex": "(?i)fund transfer from.*?successful\\. (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to your account.*?(transaction id\\:(\\d+))",
          "account_type": "bank",
          "pattern_UID": "210028",
          "sort_UID": "210028",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "transaction_type": "credit"
          }
        },
        {
          "regex": "(?i)credit card x*(\\d{3,4}) for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) is generated.*min due of (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) by (\\d{2}[\\/\\-]\\d{2}[\\-\\/]\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "210029",
          "sort_UID": "210029",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)acct x*(\\d{3,4}) debited with (?:INR|Rs)[\\.,\\s]*([\\d,-]+\\.?\\d{0,2}) on.*?a\\/c.*?credited[\\s\\.]*txn id[\\s\\-]*(\\d+)",
          "account_type": "bank",
          "pattern_UID": "210030",
          "sort_UID": "210030",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "prefix": "Transaction ID:",
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(cheque no \\d+) for (?:INR|Rs)[\\.,\\s]*([\\d,-]+\\.?\\d{0,2}) is credited to a\\/c \\.*(\\d{4}) on .*?\\(current avlbl bal (?:INR|Rs)[\\.,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "210031",
          "sort_UID": "210031",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,]\\s*([\\d,\\.]+\\.?\\d{0,2}) credited to a\\/c \\.*(\\d{4}) (?:thru)?\\s*(?:(?:neft|rtgs) utr \\w+ by|imps\\/\\w+ by|upi\\/\\w+ by|under) (.*?)\\.\\s*total.*?avlbl amt\\:(?:INR|Rs)[\\.,\\s]*([\\d,-]+\\.?\\d{0,2})[\\s\\S]*\\(([\\d\\-]+ [\\d\\:]+)",
          "account_type": "bank",
          "pattern_UID": "210032",
          "sort_UID": "210032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) credited to a\\/c \\.*(\\d{4}) (?:at|from|through|thru)[\\s\\:](.*?)total.*?avlbl amt\\:(?:INR|Rs)[\\.,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "210033",
          "sort_UID": "210033",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) transferred from a\\/c \\.*(\\d{4}) to\\:(.*?)\\.\\s*total.*?\\.\\s*avlbl amt\\:(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*\\(([\\d\\-]+ [\\d\\:]+)\\)",
          "account_type": "bank",
          "pattern_UID": "210034",
          "sort_UID": "210034",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "pos_override": "UPI Funds Transfer",
                  "value": "upi/"
                },
                {
                  "txn_type": "ecs",
                  "value": "ecs/",
                  "pos_override": "ECS"
                },
                {
                  "txn_type": "ecs",
                  "value": "ach debit",
                  "pos_override": "Debit"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) (?:debited to|withdrawn from) a\\/c \\.*(\\d{4}) (?:at|by) (atm|pos|ebanking|mbanking|adc).*?avlbl amt\\:(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "210035",
          "sort_UID": "210035",
          "sms_type": "transaction",
          "data_fields": {
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "value": "pos",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": ""
                }
              ],
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) debited to a\\/c \\.*(\\d{4}) for (neft|rtgs) to (.*?) utr (\\w+)\\..*?avlbl amt\\:(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "210036",
          "sort_UID": "210036",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 5
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 3,
              "type_rules": [
                {
                  "value": "neft",
                  "is_neft": true
                },
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) withdrawn .*?from a\\/c \\.*(\\d{4})(?:\\.\\s*|\\son).*?(?:avlbl|os) (?:amt|bal)[\\:\\s](?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "210037",
          "sort_UID": "210037",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) deposited in .*?to a\\/c[\\s\\.x\\d]*(\\d{4})\\..*?total bal[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,\\-]+\\.?\\d{0,2}).*\\(([\\d\\-]+ [\\d\\:]+)\\)",
          "account_type": "bank",
          "pattern_UID": "210038",
          "sort_UID": "210038",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)payment of emi.*?loan account no (\\d+) due on (\\d{4}\\-\\d{2}\\-\\d{1,2}) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "loan",
          "account_name_override": "BOB Loan",
          "pattern_UID": "210039",
          "sort_UID": "210039",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) received for .*?credit card ending x*(\\d{4})[\\.\\s].*?credit limit is (?:INR|Rs)?[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "210040",
          "sort_UID": "210040",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)account has been debited towards (.*?) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (\\d{4}\\-[\\d\\-]+ [\\d\\:]+ (?:am|pm)) umn\\s",
          "account_type": "bank",
          "pattern_UID": "210041",
          "sort_UID": "210041",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd hh:mm:ss a"
                }
              ]
            },
            "pos": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            }
          }
        }
      ],
      "sender_UID": "90000021",
      "senders": [
        "BOBTXN",
        "BOBCRD",
        "BOBADC",
        "BOBSMS",
        "MCONEC",
        "BOBFSL"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09015135135"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Bank of India",
      "name": "BOI",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*Debited to (?:Your Account |ac-)X*(\\d{4}) from (ATM).*on [\\d\\-]*\\.(?:Available Balance|\\s*Avl[\\.\\s]*Bal) [\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "280001",
          "sort_UID": "280001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been Debited to your (?:account|ac) X*(\\d{4}) from.*[-*](.*) on .*(?:avl bal|Available Balance) [\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "280002",
          "sort_UID": "280002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?Debited.* (?:ac|account) X*(\\d{4}).*(?:IB|NEFT|RTGS|mobile banking|bc).*(?:available|avl) (?:bal|balance) [\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280003",
          "sort_UID": "280003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(Cheque No.? [\\d]*) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*debited.* (?:a\\/c|account|ac) x*(\\d{4}).*(?:Available|avail|avl) (?:bal|balance) [\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280004",
          "sort_UID": "280004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "note": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:balances are|\\*) \\d+x+(\\d{4}):\\s*[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280005",
          "sort_UID": "280023",
          "reparse": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?(?:deposited|credited).* (?:account|a\\/c|ac) x*(\\d{3,4}) .*(?:avail|available|avl) (?:bal|balance) (?:INR|Rs|)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280006",
          "sort_UID": "280022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)credit card \\d*\\**(\\d{4})\\s*dated .* amt due (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\s*and min amt due (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*pay.*?by ([\\d\\/]*)",
          "account_type": "credit_card",
          "pattern_UID": "280008",
          "sort_UID": "280008",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been Debited.* account number X*(\\d{4}) from (pos|atm) on ([\\d\\-]*)",
          "account_type": "debit_card",
          "pattern_UID": "280009",
          "sort_UID": "280009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm"
                },
                {
                  "txn_type": "debit_card",
                  "value": "pos",
                  "pos_override": "Debit Card Purchase"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (pension|salary).*credited.*(?:account|ac) x*(\\d{4}) .*(?:avl bal|bal available) (?:INR|Rs|)?[\\.,\\s Rs]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280010",
          "sort_UID": "280010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "salary",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*debited\\s*\\((.*)\\) .*in your (?:account|a\\/c|ac) x*(\\d{4}).*(?:Available|avail|avl) (?:bal|balance)\\s*(?:INR|Rs|)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280011",
          "sort_UID": "280011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "Cheque",
                  "value": "clg",
                  "txn_type": "cheque"
                },
                {
                  "pos_override": "Net Banking",
                  "txn_type": "net_banking",
                  "value": "trf"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c no. \\**x*\\d*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\s\\:]*) and .*((UPI|IMPS) ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "280012",
          "sort_UID": "280012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": "imps"
                }
              ],
              "group_id": 5
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": true,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 6,
              "type_group_id": 5,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*\\**\\d*(\\d{4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*for reversal of transaction \\((upi ref no.? (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "280013",
          "sort_UID": "280013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no\\.\\s*x*\\d*(\\d{4}).*debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*\\((imps ref no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "280014",
          "sort_UID": "280014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)transfer from a\\/c x*(\\d{4}) to (.*?) for (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) completed successfully.*?((?:utr|txn id) (\\w+)) on.*?bal[\\s\\:]*(?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280015",
          "sort_UID": "280015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\**\\d*(\\d{4}) is credited .*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*? reversal.*?\\(((imps|upi) ref no[\\s\\.]*(\\d*))",
          "account_type": "bank",
          "pattern_UID": "280018",
          "sort_UID": "280018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "upi"
                },
                {
                  "txn_type": "credit",
                  "value": "imps",
                  "pos_override": "Reversal"
                }
              ],
              "group_id": 4
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)transaction of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has .* credit card \\d*\\**(\\d{4}) at (.*?) at [\\d\\:\\.\\s]*available balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "280020",
          "sort_UID": "280020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?(?:deposited|credited).*trf\\)(.*?) in your (?:account|a\\/c|ac) x*(\\d{3,4}) .*(?:avail|available|avl) (?:bal|balance) (?:INR|Rs|)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280021",
          "sort_UID": "280021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": ".*cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": ".*salary",
                  "category": "walnut_salary"
                },
                {
                  "value": ".*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": ".*reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?(?:deposited|credited).* to chq.*?(?:account|a\\/c|ac) x*(\\d{3,4}) .*(?:avail|available|avl) (?:bal|balance) (?:INR|Rs|)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280022",
          "sort_UID": "280006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)received (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from (.*) (?:to|in) your (?:a\\/c|account) x*\\**\\d*(\\d{4}) on",
          "account_type": "bank",
          "pattern_UID": "280016",
          "sort_UID": "280016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*credited (?:to|in) your (?:a\\/c|account|acct) *x*\\d*(\\d{4})",
          "account_type": "bank",
          "pattern_UID": "280017",
          "sort_UID": "280017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\**\\d*(\\d{4})\\s*is credited .*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*\\(((upi|imps)\\s*ref no[\\s\\.]*(\\d*))",
          "account_type": "bank",
          "pattern_UID": "280019",
          "sort_UID": "280019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?(?:deposited|credited).*?(?:refund|\\)\\s*(?:by)?\\s*rev[\\s\\.]of\\s|reversal|[\\-\\_]\\s*rfnd\\s*[\\s\\/]|reversed).*?(?:account|a\\/c|ac) x*(\\d{3,4}) .*(?:avail|available|avl) (?:bal|balance) (?:INR|Rs|)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280023",
          "sort_UID": "280005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)linked to.*?a\\/c no[\\s\\.]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) and credited to (.*?)\\s*\\((upi ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "280024",
          "sort_UID": "280024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:\u0906\u092a\u0915\u0947|\u0906\u092a\u0932\u0947) \u0916\u093e\u0924\u093e (?:\u0938\u0902\u0916\u094d\u200d\u092f\u093e)?\\s*x*(\\d{4}) \u0938\u0947 \u0930\u0941[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?(?:\u092a\u0940\u0913\u090f\u0938|\u0915\u093e\u0930\u0923)\\s*(?:\u0932\u0947\u0928\\-\u0926\u0947\u0928)?[\\-\\s]+(.*?) (?:\u0939\u0947\u0924\u0941|\u0964) .*?(?:INR|Rs|\u0930\u0941)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280025",
          "sort_UID": "280025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs|\u0930\u0942)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?\u0916\u093e\u0924\u0947 \u0938\u0902\u0916\u094d\u200d\u092f\u093e x*(\\d{4}) \u092a\u0940\u0913\u090f\u0938[\\s\\-]*(.*?) \u0926\u093f.*?\u0936\u093f\u0932\u094d\u200d\u0932\u0915[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "280026",
          "sort_UID": "280026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)\u0916\u093e\u0924\u093e x*(\\d{4}) .*?(?:\u092e\u0947\u0902 \u0930\u093e\u0936\u093f|\u0926\u094d\u0935\u093e\u0930\u093e) (?:INR|Rs|\u0930\u0941)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?\u091c\u092e\u093e.*?(?:\u0915\u0940 \u0917\u092f\u0940|\u0915\u093f\u092f\u0947 \u0917\u092f\u0947).*?\u0930\u093e\u0936\u093f[\\.,\\s\\-]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280027",
          "sort_UID": "280027",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)\u0916\u093e\u0924\u093e \u0938\u0902\u0916\u094d\u200d\u092f\u093e x*(\\d{4}) .*\u0915\u094b \u091a\u0947\u0915 .*?(?:INR|Rs|\u0930\u0941)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?\u0936\u0947\u0937 \u0930\u093e\u0936\u093f (?:INR|Rs|\u0930\u0941)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280028",
          "sort_UID": "280028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)\u0916\u093e\u0924\u093e x*(\\d{4}) .*\u0915\u094b\\s*atmid.*?(?:INR|Rs|\u0930\u0941)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?\u0921\u0947\u092c\u093f\u091f \u0915\u093f\u092f\u0947 \u0917\u092f\u0947.*?\u0936\u0947\u0937 \u0930\u093e\u0936\u093f (?:INR|Rs|\u0930\u0941)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "280029",
          "sort_UID": "280029",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs|\u0930\u0941)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) \u0916\u093e\u0924\u0947[\\s\\-]*x*(\\d{4}) atmid.*?\u0932\u093e \u0928\u093e\u0935\u0947\\s*\u091d\u093e\u0932\u0947.*\u0936\u093f\u0932\u094d\u200d\u0932\u0915 (?:INR|Rs|\u0930\u0941)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "280030",
          "sort_UID": "280030",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)\u0916\u093e\u0924\u093e[\\s\\-]*x*(\\d{4}) (?:\u0938\u0947|\u0924\u0941\u0928) (?:INR|Rs|\u0930\u0941|\u0930\u0942)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(?:\u0928\u093f\u0915\u0938\u093f\u0924 \u091d\u093e\u0932\u0947|\u0921\u0947\u092c\u093f\u091f \u0915\u093f\u092f\u093e).*?\u0930\u093e\u0936\u093f (?:INR|Rs|\u0930\u0941|\u0930\u0942)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280031",
          "sort_UID": "280031",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs|\u0930\u0942)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?(?:\u0916\u093e\u0924\u094d\u200d\u092f\u093e\u092e\u0927\u094d\u200d\u092f\u0947 \u091c\u092e\u093e|\u091c\u092e\u093e.*?\u0916\u093e\u0924\u094d\u200d\u092f\u093e\u092e\u0927\u094d\u200d\u092f\u0947)\\s*x*\\s*(\\d{4}) .*?\u0936\u093f\u0932\u094d\u0932\u0915 (?:INR|\\s*Rs|\u0930\u0942)*[\\.:,\\s\\-]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280032",
          "sort_UID": "280032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)\u0935\u0947\u0924\u0928 (?:INR|Rs|\u0930\u0942)[\\s\\.]*([\\d,]*\\.?\\d{0,2}) .*\u0916\u093e\u0924\u0947 \u0915\u094d\u0930\u092e\u093e\u0902\u0915 x*(\\d{4}) .*?\u0932\u093e \u091c\u092e\u093e \u091d\u093e\u0932\u0947.*?\u0936\u093f\u0932\u094d\u0932\u0915 (?:INR|Rs|\u0930\u0942)[\\s\\.]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280033",
          "sort_UID": "280033",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs|\u0930\u0942)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\s*\u0906\u092a\u0932\u094d\u092f\u093e \u0916\u093e\u0924\u094d\u092f\u093e\u0924 x*\\s*(\\d{4}) .*?\u091c\u092e\u093e \u0915\u0947\u0932\u0947.*?\u0936\u0947\u0937 \u0930\u0915\u094d\u0915\u094d\u092e (?:INR|\\s*Rs|\u0930\u0942[\\s\\.])*[\\.:,\\s\\-]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "280034",
          "sort_UID": "280034",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000028",
      "senders": [
        "BOIIND",
        "STARBI",
        "BOITXN",
        "BOIBAL",
        "BOIWLI"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "9222281818"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Bank of Maharashtra",
      "name": "BOM",
      "patterns": [
        {
          "regex": "(?i)x+(\\d{4}) has been debited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*via ([a-z \\d]{4,8})\\/.*? bal is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "260001",
          "sort_UID": "260001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}).*debited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*(?:a\\/c|account) bal(?:ance)? is :?\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "260002",
          "sort_UID": "260009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "default",
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}) .*debited vide (Cheque no:\\d*).* to payee (.*) by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (\\d{2}-[a-z]{3}-\\d{4}).* avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "260003",
          "sort_UID": "260003",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "amount": {
              "group_id": 4
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}) .*credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "260004",
          "sort_UID": "260016",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "transaction_type": "credit"
          }
        },
        {
          "regex": "(?i)x+(\\d{4}) .*?available balance is: [\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "260005",
          "sort_UID": "260005",
          "sms_type": "transaction",
          "reparse": true,
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR|)[.,\\s]*([\\d,]*\\.?\\d{0,2}) was.*card no.*?x+(\\d{4})\\s*(.*)(?:on| through)\\s.* a\\/c.*?bal is (?:Rs|INR|)[.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "260006",
          "sort_UID": "260006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}) .*debited.*by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) by (Cheque no. \\d*) in favour of (.*) in.*avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "260007",
          "sort_UID": "260007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4,
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR|)[.,\\s]*([\\d,]*\\.?\\d{0,2}) has been spent from a\\/c no x+(\\d{4}) on.* to (\\w* \\w*).* a\\/c.*?bal is (?:Rs|INR|)[.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "260008",
          "sort_UID": "260008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}).*debited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*(?:a/c|account) bal(?:ance)? is :?\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) .*\\(( upi ref no. (\\d*))",
          "account_type": "bank",
          "pattern_UID": "260009",
          "sort_UID": "260002",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*\\s*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?\\(\\s*(imps ref no\\. (\\d+))\\s*\\)",
          "account_type": "bank",
          "pattern_UID": "260010",
          "sort_UID": "260010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]x*(\\d{4}) has.*successfully debited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*?) with (upi ref[\\.\\s]*no[\\:\\s]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "260011",
          "sort_UID": "260011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}) .*credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*(?:from|transfer frm) (.*?)\\.\\s*a\\/c.*?avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "260012",
          "sort_UID": "260012",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            },
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your (?:a\\/c|a\\/c no)[\\s\\.]*x*\\**\\d*(\\d{4}) (?:is credited|has been successfully credited) .*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?((upi|imps) ref[\\s\\.]*no[\\s\\.\\:]*(\\d*))",
          "account_type": "bank",
          "pattern_UID": "260013",
          "sort_UID": "260013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}) .*credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*salary.*? avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "260014",
          "sort_UID": "260014",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            },
            "transaction_type": "credit",
            "transaction_category": "walnut_salary"
          }
        },
        {
          "regex": "(?i)x+(\\d{4}) .*credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*by(.*?)\\..*? avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "260015",
          "sort_UID": "260015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}) .*credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*(reversal of failed atm|refund|reversal).*? avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "260016",
          "sort_UID": "260004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) paid.*?clearing in a\\/c x*(\\d{4}) .*?(Cheque no. \\d*) favoring (.*?) on .*avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "260017",
          "sort_UID": "260017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c no x*(\\d{4}) has been debited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.\\s*avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.\\s*(min bal.*?)\\.\\s*pl maintain",
          "account_type": "bank",
          "pattern_UID": "260018",
          "sort_UID": "260018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4,
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)amount of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been debited.*?your a\\/c x*(\\d{4}) vide (cheque no \\d+) .*?avl bal is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "260019",
          "sort_UID": "260019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)txn on (?:bom|maha) cc\\s*[\\dx\\*]*(\\d{4})\\s*for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*on .*?at (.*?) is approved\\.\\s*avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "260020",
          "sort_UID": "260020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)loan installment for a\\/c no[\\s\\:x]*(\\d{4}) of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\(.*?is due on (\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "loan",
          "account_name_override": "BOM Loan",
          "pattern_UID": "260021",
          "sort_UID": "260021",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000026",
      "senders": [
        "MAHABK"
      ]
    },
    {
      "full_name": "BookMyShow",
      "name": "BookMyShow",
      "patterns": [
        {
          "regex": "(?i)Booking id: ([\\d\\w]*).*Seats: (.*) for (.*) on.*?, ?(.*) at (.*?)\\.",
          "account_type": "generic",
          "pattern_UID": "90001",
          "sort_UID": "90001",
          "sms_type": "event",
          "data_fields": {
            "event_type": "movie",
            "pnr": {
              "group_id": 1
            },
            "event_info": {
              "group_id": 2
            },
            "name": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM, yy hh:mma"
                }
              ]
            },
            "event_location": {
              "group_id": 5
            },
            "event_reminder_span": {
              "value": 30
            }
          }
        },
        {
          "regex": "(?i)invited.*for (.*) on.*?, ?(.*) at (.*?)\\.",
          "account_type": "generic",
          "pattern_UID": "90002",
          "sort_UID": "90002",
          "sms_type": "event",
          "data_fields": {
            "event_type": "movie",
            "event_info": {
              "value": "Invitation"
            },
            "name": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM, yy hh:mma"
                }
              ]
            },
            "event_location": {
              "group_id": 3
            },
            "event_reminder_span": {
              "value": 30
            }
          }
        },
        {
          "regex": "(?i)QR code[\\s\\S]*Email ID[\\s\\S]*for (.*)[\\s\\S]*on .*?, (.*),[\\s\\S]*at (.*),[\\s\\S]*seats: (.*).[\\s\\S]*Booking id: (\\w+).",
          "account_type": "generic",
          "pattern_UID": "90003",
          "sort_UID": "90003",
          "obsolete": true,
          "sms_type": "event",
          "data_fields": {
            "event_type": "movie",
            "name": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM, yy hh:mma"
                }
              ]
            },
            "event_location": {
              "group_id": 3
            },
            "event_info": {
              "group_id": 4
            },
            "pnr": {
              "group_id": 5
            },
            "event_reminder_span": {
              "value": 30
            }
          }
        },
        {
          "regex": "(?i)Booking id:\\s*([\\d\\w]*).*for (.*) at (.*) on .*?, (.*), Seats:?\\s*(.*?)\\.",
          "account_type": "generic",
          "pattern_UID": "90004",
          "sort_UID": "90004",
          "sms_type": "event",
          "data_fields": {
            "event_type": "movie",
            "pnr": {
              "group_id": 1
            },
            "name": {
              "group_id": 2
            },
            "event_location": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM, yy hh:mma"
                }
              ]
            },
            "event_info": {
              "group_id": 5
            },
            "event_reminder_span": {
              "value": 30
            }
          }
        },
        {
          "regex": "(?i)Booking id -\\s*([\\d\\w]*).*for (.*) on .*?, (.*), at (.*), Seats:?\\s*(.*)\\s*\\S*please note",
          "account_type": "generic",
          "pattern_UID": "90005",
          "sort_UID": "90005",
          "sms_type": "event",
          "data_fields": {
            "event_type": "movie",
            "pnr": {
              "group_id": 1
            },
            "name": {
              "group_id": 2
            },
            "event_location": {
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM, yy hh:mma"
                }
              ]
            },
            "event_info": {
              "group_id": 5
            },
            "event_reminder_span": {
              "value": 30
            }
          }
        }
      ],
      "sender_UID": "9000009",
      "senders": [
        "BMSHOW"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09268892688"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Corporation Bank",
      "name": "CORP BANK",
      "patterns": [
        {
          "regex": "(?i)An amount of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been debited from your A\\/c .*(\\d{4}) for an online transaction done at (.*) using CorpNet banking",
          "account_type": "bank",
          "pattern_UID": "270002",
          "sort_UID": "270002",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)\\.*(\\d{3}) .*debited.* (?:INR|Rs)[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2}) on.* (?:by|for) (.*)\\. avl bal is \\+?[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "270003",
          "sort_UID": "270003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "Cheque",
                  "value": "clg",
                  "txn_type": "cheque"
                },
                {
                  "pos_override": "Cheque",
                  "value": "cheque",
                  "txn_type": "cheque"
                },
                {
                  "pos_override": "Net Banking",
                  "txn_type": "net_banking",
                  "value": "trf"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)A transaction of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been done using your CorpBank Credit Card \\d\\*{4}(\\d{4}) at (.*)[,].* at .*",
          "account_type": "credit_card",
          "pattern_UID": "270004",
          "sort_UID": "270004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)POS.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?\\.+(\\d{3}) at(.*)on ([\\d\\/]*\\s[\\d:]*).*Bal is [\\.:,\\s+]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "270005",
          "sort_UID": "270005",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)\\.*(\\d{3}) .*credited.* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*avl (?:bal|balance) (?:is|\\+)\\s*(?:INR|Rs|)\\s*\\+?[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "270006",
          "sort_UID": "270006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)avl bal in your a\\/c [x\\d\\.\\*]*(\\d{3}) in .* \\+?[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}) as on",
          "account_type": "bank",
          "pattern_UID": "270008",
          "sort_UID": "270008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)credit card \\d*\\**(\\d{4}) .*total amt due (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) and min amt due (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) .*pay by (\\d{2}\\/\\d{2}\\/\\d{4}).*",
          "account_type": "credit_card",
          "pattern_UID": "270009",
          "sort_UID": "270009",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on.*\\((UPI Ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "270013",
          "sort_UID": "270013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? \\**\\d*\\.*\\d*(\\d{3}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on.*\\((IMPS Ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "270014",
          "sort_UID": "270014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*\\d*(\\d{4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*for reversal of transaction \\((upi ref no.? (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "270015",
          "sort_UID": "270015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?(upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "270016",
          "sort_UID": "270016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        }
      ],
      "sender_UID": "90000027",
      "senders": [
        "CORPBK",
        "WLICCR"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "9895923000"
                ],
                "format": "BAL <Account No>"
              }
            ]
          }
        ]
      },
      "full_name": "Catholic Syrian Bank",
      "name": "CSB",
      "patterns": [
        {
          "regex": "(?i)a\\/c \\d*-\\d+(\\d{4})-\\d*.*\\n*\\s*debit [\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\.cur bal: [\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "410001",
          "sort_UID": "410001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "enable_chaining": true,
            "transaction_type": "net_banking",
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "transaction_type",
                    "child_field": "transaction_type"
                  },
                  {
                    "parent_field": "pos",
                    "child_field": "pos"
                  },
                  {
                    "parent_field": "pan",
                    "child_field": "pan"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 86400000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c \\d*-\\d+(\\d{4})-\\d*\\:.*\\s*credit [\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).Cur Bal:[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "410003",
          "sort_UID": "410003",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c.*?(debit|credit) (?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\.cur bal[\\s\\:]*(?:INR|Rs)?[\\:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "410004",
          "sort_UID": "410004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "net_banking",
                  "value": "debit"
                },
                {
                  "txn_type": "credit",
                  "value": "credit",
                  "pos_override": "Credit"
                }
              ],
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000041",
      "senders": [
        "CSBBNK"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09015483483"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Canara Bank",
      "name": "Canara",
      "patterns": [
        {
          "regex": "(?i)X+(\\d{4}).*debited.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*(?:towards POS|pos txn).*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "230001",
          "sort_UID": "230001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Debit Card Purchase",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)X+(\\d{4}).*debited.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*(?:towards ATM|atm txn).*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "230002",
          "sort_UID": "230002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*debited.*X+\\d*?(\\d{3,4}) .*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "230003",
          "sort_UID": "230018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)due date.*(\\d{4}) is (.*?)\\. Amount billed is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).* minimum amount due is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "230005",
          "sort_UID": "230005",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            },
            "amount": {
              "group_id": 3
            },
            "min_due_amount": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|\\,) x+\\d*(\\d{4})[\\:\\s]+(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "230006",
          "sort_UID": "230020",
          "sms_type": "transaction",
          "reparse": true,
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .* credited .*?x*(\\d{4}) .*bal (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "230007",
          "sort_UID": "230014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) spent.* canara card [\\*\\sx]*(\\d{4}) at (.*) on (.*?)\\s*(?:hrs|\\.).*?available limit (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "230008",
          "sort_UID": "230008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy 'at' HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)account\\s?x*(\\d{4}) has gone .* avail.bal (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "230009",
          "sort_UID": "230009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) spent.* canara card .* (\\d{4}) at (.*) on ([\\d\\-]* at [\\d\\:]*)",
          "account_type": "credit_card",
          "pattern_UID": "230010",
          "sort_UID": "230010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy 'at' HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c\\s*(?:no\\.)? x*(\\d{4}) .*debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*upi ref no.? (\\d*)",
          "account_type": "bank",
          "pattern_UID": "230011",
          "sort_UID": "230011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 3,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*(imps ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "230012",
          "sort_UID": "230012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*\\d*(\\d{4}) is credited for (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*for reversal of transaction \\((upi ref no.? (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "230013",
          "sort_UID": "230013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .* credited .*?x(\\d{4}) .*towards interest.*?bal (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "230014",
          "sort_UID": "230007",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit Interest",
              "set_no_pos": true
            },
            "transaction_type": "credit",
            "transaction_category": "walnut_interest"
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\**\\d*(\\d{4}) (?:is|has been) credited .*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\s*on.*?(?:from|by).*?\\(((upi|imps) ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "230015",
          "sort_UID": "230015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) received .*?to your credit card [x\\s]*\\d*(\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "230016",
          "sort_UID": "230016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)amount of (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) has been debited to x*\\d*?(\\d{3,4}) on .*?towards (neft|rtgs) fvg benf (.*?)\\,\\s*ifsc.*?utr (\\w+)\\..*?avail[\\s\\.]*bal (?:INR|Rs)[\\.:,\\s\\-]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "230017",
          "sort_UID": "230017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 3,
              "type_rules": [
                {
                  "value": "neft",
                  "is_neft": true
                },
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) has been debited to\\s*your (?:account|a\\/c) x*\\d*?(\\d{3,4}) on .*?towards (.*?)\\.\\s*(?:total avail|avl)[\\s\\.]*bal (?:INR|Rs)[\\.:,\\s\\-]*([\\d\\,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "230018",
          "sort_UID": "230003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "group_id": 3,
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "cheque",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)amount of (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) has been debited to x*\\d*?(\\d{3,4}) on .*?towards\\s*(?:neft|rtgs)?\\s*fvg benf[\\s\\,]*ifsc",
          "account_type": "bank",
          "pattern_UID": "230019",
          "sort_UID": "230019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(neft|rtgs) (?:utr|ref no) (\\w+) for (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been credited to benf (.*?)\\, act.*? (?:on|at)",
          "account_type": "bank",
          "pattern_UID": "230020",
          "sort_UID": "230006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 2,
              "type_group_id": 1,
              "type_rules": [
                {
                  "value": "neft",
                  "is_neft": true
                },
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) paid thru a\\/c x*(\\d{4}) on (.*?)\\s*to .*?upi ref (\\d+)",
          "account_type": "bank",
          "pattern_UID": "230021",
          "sort_UID": "230021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MM/dd/yy hh:mm a"
                }
              ]
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)amount of (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2}) has been credited to x*(\\d{4}) on.*?by sender (.*?)\\,\\s*ifsc",
          "account_type": "bank",
          "pattern_UID": "230022",
          "sort_UID": "230022",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "transaction_type": "credit"
          }
        },
        {
          "regex": "(?i)syn[\\s\\-]*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})\\s(?:debited|dr).*a\\/c.*?(\\d{4})\\s*on\\s*(.*)[\\-\\s]for atm txn at\\s*(.*)\\s*Avl Bal\\:\\s*(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "580003",
          "sort_UID": "580003",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "note": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "transaction_type": "debit_atm",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)syn[\\s\\-]*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})\\s(?:debited|dr).*a\\/c.*(\\d{4})\\son\\s(.*\\d{2})\\s*-?\\s*for (?:pos|ecom) txn at .*-\\s*(.*?)\\s*Avl Bal:[\\.:,\\s]*(?:rs|inr\\s*|)([\\d,-]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "580004",
          "sort_UID": "580004",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "transaction_type": "debit_card",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*(credited|debited).*(?:account|a\\/c no) .*?\\d*?(\\d{3,4}) on\\s*([\\d\\-a-z]*\\s[\\d\\:]* (?:am|pm)|[\\d\\-\\/]*\\s*[\\d\\:]*).*(?:balance\\sis|bal)\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580005",
          "sort_UID": "580024",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "net_banking",
                  "value": "debited"
                },
                {
                  "txn_type": "credit",
                  "value": "credited",
                  "pos_override": "Credit"
                }
              ],
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)syn[\\s\\-]*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) (?:dr|debited) to a\\/c \\**x*(\\d{4}).* on (\\d{2}\\-\\d{2}\\-\\d{4}\\s[\\d\\:]*).*avl bal\\:?(?:INR|RS|)[\\.,:\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580009",
          "sort_UID": "580009",
          "sms_type": "transaction",
          "data_fields": {
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "transaction_type": "net_banking"
          }
        },
        {
          "regex": "(?i)a\\/c.*(\\d{4}) is debited with (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) on (.*?)\\.? (?:by|for|twds) (.*?)\\.?\\s*avl\\.?\\s*bal\\s*(?:is)?\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580013",
          "sort_UID": "580013",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "transaction_type_rule": {
              "group_id": 4,
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "chq",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "cash wdl",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ]
            },
            "note": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c.*(\\d{4}) is (?:credited|credited with) (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) on (\\d{2}-[a-z]{3}-\\d{4} [\\d\\:]* (?:am|pm)|[\\d\\-]* [\\d\\:]*).* avl[\\s\\.]*bal (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580014",
          "sort_UID": "580022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)transaction of (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) .*credit card \\d*\\**(\\d{4}) at (.*?) at",
          "account_type": "credit_card",
          "pattern_UID": "580015",
          "sort_UID": "580015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)credit card \\d*\\**(\\d{4}) total due (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*minimum due (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*due date: (\\d{2}\\/\\d{2}\\/\\d{4}).*",
          "account_type": "credit_card",
          "pattern_UID": "580016",
          "sort_UID": "580016",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)credit card \\d*\\**(\\d{4}) is due on (\\d{2}\\/\\d{2}\\/\\d{2}) total due (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) minimum due (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "580019",
          "sort_UID": "580019",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 4
            },
            "amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)balance.*(?:a\\/c:|a\\/c) x*\\d*(\\d{4}).*?is (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580017",
          "sort_UID": "580017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)syn[\\s\\-]*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*credited to your a\\/c no.\\s*\\**x*(\\d{4}) on (\\d{2}\\-\\d{2}\\-\\d{4} [\\d\\:]*).*avl bal:(?:INR|RS|)[\\.,:\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580018",
          "sort_UID": "580018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c.*(\\d{4}) is (?:credited|credited with) (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) on (\\d{2}-[a-z]{3}-\\d{4} [\\d\\:]* (?:am|pm)|[\\d\\-]* [\\d\\:]*).*clg (chq \\d+).*? avl[\\s\\.]*bal (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580021",
          "sort_UID": "580021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c.*(\\d{4}) is (?:credited|credited with) (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) on (\\d{2}-[a-z]{3}-\\d{4} [\\d\\:]* (?:am|pm)|[\\d\\-]* [\\d\\:]*).*by interest\\..*? avl[\\s\\.]*bal (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580022",
          "sort_UID": "580014",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit Interest",
              "set_no_pos": true
            },
            "transaction_type": "credit",
            "transaction_category": "walnut_interest"
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*?credited to your.*?(?:account|a\\/c no)[\\s\\.]*.*?\\d*(\\d{4}) on\\s*([\\d\\-a-z]*\\s[\\d\\:]* (?:am|pm)|[\\d\\-]* [\\d\\:]*).*?(neft|atm|ecom|rtgs)[\\:\\s].*?[\\:\\-](.*?)(?:\\.|\\s*avl).*?(?:balance\\sis|bal)[\\s\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580023",
          "sort_UID": "580023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "Credit",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "credit",
                  "acc_type_override": "debit_card",
                  "value": "ecom"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 5
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 6
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*credite.*(?:account|a\\/c no) .*\\d*(\\d{4}) on.*?(?:by reversal|refund).*?(?:balance\\sis|bal)\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580024",
          "sort_UID": "580005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)linked to a\\/c x*\\d*(\\d{4}) credited for (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) on (\\d{2}\\/\\w{3}\\/\\d{4} [\\d\\:]*)\\((upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "580025",
          "sort_UID": "580025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MMM/yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        }
      ],
      "sender_UID": "90000023",
      "senders": [
        "CANBNK",
        "CANCRD",
        "WLISYA",
        "CNRBNK"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "+919880752484",
                  "52484"
                ],
                "format": "BAL XXXX"
              }
            ]
          },
          {
            "account_type": "credit_card",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "+919880752484",
                  "52484"
                ],
                "format": "CARDBAL XXXX"
              }
            ]
          }
        ]
      },
      "full_name": "Citibank",
      "name": "CitiBank",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) was spent.*[\\d,X]{12}(\\d{4}) on (.*) at ([\\w\\.]+|.*?)\\.",
          "account_type": "credit_card",
          "pattern_UID": "20001",
          "sort_UID": "20025",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)\\**(\\d{4}).*?Total (?:amount)?\\s*Due[\\s\\:]*Rs.\\s?([\\d,\\,\\-]*(?:.\\d{1,2})?).*?minimum (?:amount)?\\s*due[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?Payment (?:due\\s?|due on|due date)[\\s\\:]*((?:immediately)|(?:\\d{2}[\\-\\s][a-z]*[\\s\\-]\\d{2,4}))",
          "account_type": "credit_card",
          "pattern_UID": "20002",
          "sort_UID": "20002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)debit card.*X+(\\d{3,4}).*(?:purchase of|for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) at (.*) on ([^\\.]*)",
          "account_type": "debit_card",
          "pattern_UID": "20003",
          "sort_UID": "20003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)debit card.*X+(\\d{4}).*purchase of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*) at ([^\\.]*)",
          "account_type": "debit_card",
          "pattern_UID": "20004",
          "sort_UID": "20004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*withdrawn.*ATM .*X+(\\d{4}).*balance is now (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "20005",
          "sort_UID": "20005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)X+(\\d{4}).*debited.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*\\((imps ref no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "20006",
          "sort_UID": "20006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from.*X(\\d{4}) to (.*) was accepted\\.\\s*(ref no (.*))\\..*a\\/c balance is now (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "20007",
          "sort_UID": "20007",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)total outstanding on card.*?\\**(\\d{4}).*is (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*cash limit is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*cr. limit is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "20008",
          "sort_UID": "20008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "outstanding_balance": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)balance.*(?:a\\/c no|a\\/c) x*\\**(\\d{3,4}) is (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "20009",
          "sort_UID": "20060",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)as on.*balance.*(?:account|a\\/c) no.? x*(\\d{3,4}) is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "20010",
          "sort_UID": "20010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)((?:cheque|chq) no.\\d*) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*is debited from your a\\/c no. x*(\\d{4}) .*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "20011",
          "sort_UID": "20011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) .*credited.* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "20012",
          "sort_UID": "20035",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)payment for card\\*{12}(\\d{4}) is due on (\\d{2}\\-[a-z]*\\-\\d{2}). Total=Rs.\\s?([\\d,\\,]*(?:.\\d{1,2})?).*minimum=(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "20013",
          "sort_UID": "20013",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "min_due_amount": {
              "group_id": 4
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)([\\d,]+\\.?\\d{0,2}) ([a-z]{3}) was spent.*[\\d,X]{12}(\\d{4}) on (.*) at ([\\w\\.]+|.*?)\\.",
          "account_type": "credit_card",
          "pattern_UID": "20014",
          "sort_UID": "20026",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "currency": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:has been|was) (?:deposited|credited) (?:in|to your).*?account (?:number|no\\.) x*(\\d{4}) .*bal.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "20015",
          "sort_UID": "20015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c.*debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*) and account (.*) has .*(upi ref no. (\\d*))",
          "account_type": "bank",
          "pattern_UID": "20017",
          "sort_UID": "20039",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy 'at' HH:mm"
                }
              ]
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)credit of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) received from (.*)has been.*credit card \\**(\\d{4}) on",
          "account_type": "credit_card",
          "pattern_UID": "20018",
          "sort_UID": "20018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[.,\\s]*([\\d,]*\\.?\\d{0,2}) has been refunded.* your debit card \\d*x*(\\d{4})",
          "account_type": "debit_card",
          "pattern_UID": "20019",
          "sort_UID": "20031",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Refund",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)received a credit in x*(\\d{4}) for.*? (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) from NEFT in .*?from (.*?) [a-z]*\\d+.*?balance \\= (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "20020",
          "sort_UID": "20020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:\\w+\\'\\d{2,4}\\s|^)(.*bill) for.*of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has.*successfully",
          "account_type": "bill_pay",
          "pattern_UID": "20022",
          "sort_UID": "20022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "bill_pay",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Bill payments"
            },
            "pos": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been proce.*credit card.*(Standing Instruction).*bank a\\/c ending x*(\\d{4})",
          "account_type": "bank",
          "pattern_UID": "20023",
          "sort_UID": "20023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)accepted.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from.*X(\\d{4}) to (.*?)(?:\\.\\s|\\s)((?:ref no|utr no) (\\w+))\\..*a\\/c balance is now (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "20024",
          "sort_UID": "20024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) (?:was spent|spent).*[\\d,X]*(\\d{4}) on (.*) at ([\\w\\.]+|.*?)[\\s\\(]*(?:without pin\\/otp|was processed|\\.).*?(?:the available credit limit is now\\s|Limit available\\=)(?:INR|Rs)[\\.,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "20025",
          "sort_UID": "20001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)([\\d,]+\\.?\\d{0,2}) ([a-z]{3}) (?:was spent|spent).*[\\d,X]*(\\d{4}) on (.*) at ([\\w\\.]+|.*?)\\..*(?:available credit limit is now\\s|Limit available\\=)(?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "20026",
          "sort_UID": "20014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "currency": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 5
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) spent on card \\d*x*(\\d{4}) on .*at (.*) was processed .*available limit is (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "20027",
          "sort_UID": "20027",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)([a-z]{3}) ([\\d,]+\\.?\\d{0,2}) (?:was spent|spent).*citibank debit card [\\d,X]*(\\d{4}) on.*?at (.*?)\\. final",
          "account_type": "debit_card",
          "pattern_UID": "20028",
          "sort_UID": "20028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "amount": {
              "group_id": 2
            },
            "currency": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)confirm ecs debit.*account no[\\s\\.]*x*(\\d{4}).*?amount of (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "20029",
          "sort_UID": "20029",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "ecs",
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)refund of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*processed.*?debit card \\d*x*(\\d{4}) on.*?by (.*?)\\.",
          "account_type": "debit_card",
          "pattern_UID": "20031",
          "sort_UID": "20019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)account \\d*x*(\\d{2,4}).*?debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?)\\. (upi ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "20032",
          "sort_UID": "20032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy 'at' HH:mm"
                }
              ]
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) .*credited with salary.* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "20033",
          "sort_UID": "20033",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:payment of|thanks for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) received\\s*(?:via neft)? .*?card (?:no)?[\\s\\.]*[\\dx\\*]*(\\d{4}) on.*?(?:limit available|credit limit)\\s*(?:is)?[\\s\\=]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "20034",
          "sort_UID": "20034",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) .*credited.* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*from (.*?) on.*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "20035",
          "sort_UID": "20012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.?\\s*x*\\d*(\\d{4}) .*credited.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*by.*?\\((imps ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "20036",
          "sort_UID": "20036",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your citibank a\\/c has been.*?credited.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*received from (.*?)\\. (upi ref no\\.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "20037",
          "sort_UID": "20037",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?your loan.*?(\\d{3,4}) on.*?balance outstanding[\\s\\-]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "loan",
          "pattern_UID": "20038",
          "sort_UID": "20038",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)received a credit in x*(\\d{4}) for.*? (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) from NEFT in .*from (.*?refund.*?) via neft.*? balance \\= (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "20039",
          "sort_UID": "20017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)trnx of[\\.,\\s]*([\\d,]+\\.?\\d{0,2})(INR|Rs|[a-z]{3}) on card [\\dx]*(\\d{4}) on .*? at (.*?) is cancelled.*?credit limit now is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "20040",
          "sort_UID": "20040",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 3
            },
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)account ending x*(\\d{4}) has been debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards.*?(?:plan in|premium of the) (.*?) (?:through citibank|availed by)",
          "account_type": "bank",
          "pattern_UID": "20041",
          "sort_UID": "20041",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was debited.*?account x*(\\d{4}) on .*?towards your (.*?)\\.\\s*tnc",
          "account_type": "bank",
          "pattern_UID": "20042",
          "sort_UID": "20042",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .*?request to (.*?) \\((ref[\\s\\.]*no[\\.\\s]*(\\d+))\\).*?balance[\\s\\=\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "20043",
          "sort_UID": "20043",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)refund of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been initiated for.*?credit card ending (\\d{4}) on .*?by (.*?)\\.\\s*the credit",
          "account_type": "credit_card",
          "pattern_UID": "20044",
          "sort_UID": "20044",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)cashback=(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to .*?credit card no (\\d{4}) towards spend at (.*?)\\.\\s*refer citi",
          "account_type": "credit_card",
          "pattern_UID": "20045",
          "sort_UID": "20045",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_rewards",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)bank charge of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited.*citibank credit card no[\\.\\s]*(\\d{4}) .*reversed",
          "account_type": "credit_card",
          "pattern_UID": "20046",
          "sort_UID": "20046",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Refund",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "9000002",
      "senders": [
        "CITIBK",
        "CITIAT",
        "CITIBA",
        "CITIBN"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "9225677755"
                ],
                "format": "BAL"
              }
            ]
          }
        ]
      },
      "full_name": "Cosmos Bank",
      "name": "Cosmos",
      "patterns": [
        {
          "regex": "(?i).*x+(\\d{4}).*debited.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*",
          "account_type": "debit_card",
          "pattern_UID": "290001",
          "sort_UID": "290001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i).*amount.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*X+(\\d{4}) through (.*) done.*",
          "account_type": "bank",
          "pattern_UID": "290002",
          "sort_UID": "290014",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) .* credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* for (.*)\\..*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "290003",
          "sort_UID": "290011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your (chq .*) of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\/- is debited .* a\\/c no x+(\\d{4})[\\s\\S]* .* a\\/c balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "290004",
          "sort_UID": "290004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "note": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c.?\\s*no.? x*\\d*?(\\d{2,4}) .*debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) towards your (?:neft|rtgs)",
          "account_type": "bank",
          "pattern_UID": "290006",
          "sort_UID": "290006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)your a\\/c balances? (?:are|is) (x*\\d{4})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "290007",
          "sort_UID": "290050",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?) and credited.*?\\((upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "290008",
          "sort_UID": "290008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy hh:mm a"
                }
              ]
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)ecs.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?debited for a\\/c no[\\s\\.]*x*(\\d{4}).*?balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "290009",
          "sort_UID": "290009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "ecs",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) .* credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?for (upi.*?\\/.*?\\/(.*?)\\/.*)\\..*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "290010",
          "sort_UID": "290010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) .* credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?for by (.*)\\..*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "290011",
          "sort_UID": "290003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "cash",
                  "pos_override": "Credit",
                  "set_no_pos": true
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited for (?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?) for reversal.*?(upi ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "290012",
          "sort_UID": "290012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy hh:mm a"
                }
              ]
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c\\.no[\\s\\.]*x*(\\d{3,4}) has been credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) towards.*?(utr no\\.(\\w+))",
          "account_type": "bank",
          "pattern_UID": "290013",
          "sort_UID": "290013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) .* credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* for\\s*(.*?(?:\\sreverse\\s|atm revrse|\\srevl\\/|refund|rev\\-imps|\\/reversal).*?)\\.\\s*a\\/c balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "290014",
          "sort_UID": "290002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "upi-cr",
                  "pos_override": "Rev-Upi"
                },
                {
                  "txn_type": "credit",
                  "acc_type_override": "debit_card",
                  "value": "atm rev",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000029",
      "senders": [
        "COSMOS"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "561615"
                ],
                "format": "BAL"
              }
            ]
          }
        ]
      },
      "full_name": "Deutsche Bank",
      "name": "DeutscheBk",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:withdrawn|debited).*?a\\/c [x\\d]*(\\w{4}).*for.*(\\batm\\b|\\bpos\\b)(?:.*\\/\\s?|.*)?(.*)\\..*balance: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "380001",
          "sort_UID": "380001",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "ATM",
                  "value": "atm",
                  "txn_type": "debit_atm"
                },
                {
                  "txn_type": "debit_card",
                  "value": "pos"
                }
              ],
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:withdrawn|debited).*?a\\/c [\\dx]*(\\w{4}).*for (\\binet\\b).*\\/(.*)\\/.*balance: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "380002",
          "sort_UID": "380002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:withdrawn|debited).*?a\\/c [\\dx]*(\\w{4}).*for (.*)\\. clear balance: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\s*.(\\bchq\\b)",
          "account_type": "bank",
          "pattern_UID": "380003",
          "sort_UID": "380003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:withdrawn|debited).*?a\\/c [\\dx]*(\\w{4}).*for (ecs|ach):(.*)\\. clear balance: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "380004",
          "sort_UID": "380004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:withdrawn|debited).*?a\\/c [\\dx]*(\\w{4}).*for (\\bnet\\b|\\brtgs\\b)(?:.*?[.] (?:ref no. is |utr no. is )?(.*?)?\\.*\\s*clear balance: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\.)?",
          "account_type": "bank",
          "pattern_UID": "380005",
          "sort_UID": "380005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 4,
              "type_group_id": 3,
              "type_rules": [
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:deposited|credited) in a\\/c .*x*([x\\d]{4}) on .* clear balance: (?:INR|Rs)[\\.,\\s\\-]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "380006",
          "sort_UID": "380012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited from a\\/c.*(\\w{4}) on.*?for (?:neft\\/)?(.*?)\\..*?clear balance\\: (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})\\.",
          "account_type": "bank",
          "pattern_UID": "380007",
          "sort_UID": "380007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "chq",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:deposited|credited) in a\\/c .*x*([x\\d]{4}) on .*(?:neft|inet)\\/(.*?)\\/.*?clear balance: (?:INR|Rs)[\\.,\\s\\-]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "380008",
          "sort_UID": "380010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:deposited|credited) in a\\/c .*x*([x\\d]{4}) on .*for salary.*?clear balance: (?:INR|Rs)[\\.,\\s\\-]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "380009",
          "sort_UID": "380009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:deposited|credited) in a\\/c .*x*([x\\d]{4}) on .*(?:neft)\\/salary\\/(.*?)\\/.*?clear balance: (?:INR|Rs)[\\.,\\s\\-]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "380010",
          "sort_UID": "380008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:deposited|credited) in a\\/c .*x*([x\\d]{4}) on .*refund\\_\\d*\\_\\d*\\_(.*)\\. clear balance: (?:INR|Rs)[\\.,\\s\\-]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "380011",
          "sort_UID": "380011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:deposited|credited) in a\\/c .*x*([x\\d]{4}) on .*((?:pos|atm) reversal|upi rev\\/|rev[\\s\\:](?:inet|net|upi|nfs atm)|\\srefund\\s|\\sreversal\\s).*clear balance: (?:INR|Rs)[\\.,\\s\\-]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "380012",
          "sort_UID": "380006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "ATM Reversal",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "credit",
                  "value": "pos",
                  "pos_override": "Debit Card Reversal",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "credit",
                  "value": "upi",
                  "pos_override": "Rev-Upi"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited in a\\/c [x\\d]*(\\w{4}) on.*?for (?:neft\\/|rtgs fr[\\s\\:]*)(.*?)\\/",
          "account_type": "bank",
          "pattern_UID": "380013",
          "sort_UID": "380013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000038",
      "senders": [
        "DBALRT"
      ]
    },
    {
      "full_name": "Docomo",
      "name": "Docomo",
      "patterns": [
        {
          "regex": "(?i)(\\d{9,10}).*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*due.*(?:on|is) ([a-z0-9-]+)",
          "account_type": "phone",
          "pattern_UID": "220002",
          "sort_UID": "220002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000022",
      "senders": [
        "DOCOMO",
        "MYTTBS"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "8431900900"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Federal Bank",
      "name": "Federal Bk",
      "patterns": [
        {
          "regex": "(?i)x+(\\d{4}).*debited.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*(imps ref no.? (\\d+))",
          "account_type": "bank",
          "pattern_UID": "370003",
          "sort_UID": "370003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}).*debited.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) by (?:clg) (.*?)\\/.*\\/(.*) on.*is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "370007",
          "sort_UID": "370026",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)\\s*(?:closing)?\\s*bal.* x*(\\d{4}) .* (?:is|bal\\-)\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "370009",
          "sort_UID": "370027",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)available balance .*(\\d{4}) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "370011",
          "sort_UID": "370011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited .* a\\/c x+(\\d{4}) via \\+*(.* atm) on ([\\w]* [\\d\\:]*).bal-(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "370012",
          "sort_UID": "370012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMMyy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:debited|done|spent) .* card x+(\\d{4}) at (.*) on ([\\w]* [\\d\\:]*).\\s*bal-(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "370014",
          "sort_UID": "370014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMMyy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:using|choosing) (\\S+)\\.(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:is)?\\s*debited.*a\\/c x+(\\d{4}) on .*bal[-\\:](?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "370015",
          "sort_UID": "370015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited.*a\\/c x*(\\d{4}) by (NEFT|rtgs).*to (.*) on .*bal.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "370016",
          "sort_UID": "370016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited .*a\\/c x+(\\d{4}) by (standing instruction)(?: to )?(.*)? on.*is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "370017",
          "sort_UID": "370017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited.*a\\/c x*(\\d{4}) .*bal.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "370019",
          "sort_UID": "370019",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            },
            "transaction_type": "net_banking"
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)*[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*(?:is)?\\s*credited.*a\\/c x*(\\d{4}) .*bal.*(?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "370020",
          "sort_UID": "370024",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "transaction_type": "credit"
          }
        },
        {
          "regex": "(?i)using federal stashfin card at (.*?) on.*?for (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}).*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "account_name_override": "Federal Stashfin Card",
          "set_account_as_expense": false,
          "pattern_UID": "370021",
          "sort_UID": "370021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "pos": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)Federal Stashfin card.*?loaded with (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}).*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "account_name_override": "Federal Stashfin Card",
          "set_account_as_expense": false,
          "pattern_UID": "370022",
          "sort_UID": "370022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Card Top Up",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) credited.*a\\/c x*(\\d{4}) .* from (.*?) on .*?bal.*(?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "370023",
          "sort_UID": "370023",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            },
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) credited as interest .*a\\/c x*(\\d{4}) .*bal.*(?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "370024",
          "sort_UID": "370020",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit Interest",
              "set_no_pos": true
            },
            "transaction_type": "credit"
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) credited to your a\\/c x*(\\d{4}).*?clearing (chq no\\.\\d+) on (.*?)\\-",
          "account_type": "bank",
          "pattern_UID": "370025",
          "sort_UID": "370025",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMMyy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit"
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) credited to your a\\/c x*(\\d{4}) by reversal of unsuccessful (?:pos|atm|ecom) txn done at (.*?) on \\d{2}\\w{3}\\d{2,4} [\\d\\:]+.*bal.*(?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "370026",
          "sort_UID": "370007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) credited to your a\\/c x*(\\d{4}) via neft from (.*?refund.*?) on \\d{2}\\w{3}\\d{2,4} [\\d\\:]+.*bal.*(?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "370027",
          "sort_UID": "370009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) debited.*?your a\\/c using upi.*?and vpa (.*?) credited\\s*\\((upi ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "370028",
          "sort_UID": "370028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)fastag linked to (\\w+) is debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?\\(txn id (\\w+)\\).*?charges at (.*?)\\.\\s*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Federal FASTag",
          "pattern_UID": "370029",
          "sort_UID": "370029",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) credited to fastag a\\/c (\\w+) via transaction id (\\w+) on.*?balance[\\s\\-\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Federal FASTag",
          "pattern_UID": "370030",
          "sort_UID": "370030",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "FasTag Recharge",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)emi of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) in your loan a\\/c (\\d+)(?:\\,\\s*| is )due on (\\d{2}\\w{3}\\d{2,4})",
          "account_type": "loan",
          "account_name_override": "Federal Loan",
          "pattern_UID": "370031",
          "sort_UID": "370031",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMMyy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)toll of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) paid from fastag (\\w+) on (.*?) at (.*?)\\.\\s*bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Federal FASTag",
          "pattern_UID": "370032",
          "sort_UID": "370032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMMyyyy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)account no[\\s\\.]*x*(\\d{4}) has been credited with (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2}) on [\\w\\d\\s\\,\\-]+federal",
          "account_type": "bank",
          "pattern_UID": "370033",
          "sort_UID": "370033",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been added to your.*account no x*(\\d{4})\\.",
          "account_type": "bank",
          "pattern_UID": "370034",
          "sort_UID": "370034",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*has been credited.*?account no[\\s\\.]*x*(\\d{4})\\,.*? by (.*?) via upi (.*?)[\\s\\-]*federal",
          "account_type": "bank",
          "pattern_UID": "370035",
          "sort_UID": "370035",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) spent.*?card ending with (\\d{4}) at (.*) on [\\s\\-\\.\\d]+available limit (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "370036",
          "sort_UID": "370036",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)statement.*?credit card.*?ending with (\\d{4})\\.\\s*total due (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?minimum due (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?due on (\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "credit_card",
          "pattern_UID": "370037",
          "sort_UID": "370037",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{0,2}) is received towards.*?credit card.*?ending with (\\d{4}) on",
          "account_type": "credit_card",
          "pattern_UID": "370038",
          "sort_UID": "370038",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)\\,\\s*(.*?) has sent (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to you.*?mode\\:(neft|rtgs).*?ref no\\.([\\w\\:]+)\\.\\s*balance\\:\\s*(?:Rs\\.INR|INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "370039",
          "sort_UID": "370039",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 4,
              "type_group_id": 3,
              "type_rules": [
                {
                  "value": "neft",
                  "is_neft": true
                },
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)spent (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) AT (.*?) on .*?balance\\:\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "370040",
          "sort_UID": "370040",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)added (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) as interest to your account x*(\\d{4})\\..*?balance (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "370041",
          "sort_UID": "370041",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit Interest",
              "set_no_pos": true
            },
            "transaction_type": "credit",
            "transaction_category": "walnut_interest"
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) has been debited .*?account no[\\s\\.]*x*(\\d{4}) on.*?towards (([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+))\\.\\s*for",
          "account_type": "bank",
          "pattern_UID": "370042",
          "sort_UID": "370042",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been debited .*?account no[\\s\\.]*x*(\\d{4}) on.*?towards (?:[x\\d]+|your beneficiary)\\.\\s*for",
          "account_type": "bank",
          "pattern_UID": "370043",
          "sort_UID": "370043",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)withdrawn[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\|]*balance[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*transaction.*?occurred on (.*?)\\.\\s*if",
          "account_type": "debit_card",
          "pattern_UID": "370044",
          "sort_UID": "370044",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MMMMM dd, yy 'at' HH:mm"
                }
              ]
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "account_balance": {
              "group_id": 2
            }
          }
        }
      ],
      "sender_UID": "90000037",
      "senders": [
        "FEDBNK",
        "FEDFIB"
      ]
    },
    {
      "full_name": "FlipKart",
      "name": "FlipKart",
      "patterns": [
        {
          "regex": "(?i).*",
          "pattern_UID": "100001",
          "sort_UID": "100100",
          "account_type": "generic",
          "sms_type": "generic"
        },
        {
          "regex": "(?i)Flipkart Pay Later (?:due|bill).*?(?:are|for|is) (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?pay by (\\d{2} [a-z]* \\d{4})",
          "account_type": "loan",
          "account_name_override": "Flipkart Pay Later",
          "pattern_UID": "100002",
          "sort_UID": "100002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMMMM yyy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)Booking Confirmed.*Flight Booking ID\\: \\w+ with pnr (\\w+\\-?\\w*) from (.*?) on (.*?) is confirmed for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "generic",
          "pattern_UID": "100003",
          "sort_UID": "100003",
          "sms_type": "event",
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "Flipkart Flight"
            },
            "event_location": {
              "group_id": 2
            },
            "amount": {
              "create_txn": false,
              "group_id": 4
            },
            "pnr": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MMM dd, yyyy"
                }
              ]
            },
            "event_reminder_span": {
              "value": 90
            }
          }
        },
        {
          "regex": "(?i)Flipkart cardless credit (?:due|bill).*?(?:are|for|is) (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?pay (?:by)?\\s*(\\d{2} [a-z]* \\d{4}|immediately)",
          "account_type": "loan",
          "pattern_UID": "100004",
          "sort_UID": "100004",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "pan": {
              "value": "Cardless Credit"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMMMM yyy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was used from your flipkart gift card \\d*(\\d{4}) for order.*?on flipkart[\\s\\S]*.*?balance remaining in the card[\\s\\:]*(?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "account_name_override": "Flipkart Gift Card",
          "set_account_as_expense": false,
          "pattern_UID": "100005",
          "sort_UID": "100005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Flipkart",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)just used flipkart pay later for a transaction worth (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "account_name_override": "Flipkart Pay Later",
          "set_account_as_expense": false,
          "pattern_UID": "100006",
          "sort_UID": "100006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Flipkart",
              "set_no_pos": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            }
          }
        }
      ],
      "sender_UID": "90000010",
      "senders": [
        "FLPKRT",
        "FLIPKT",
        "EKARTL",
        "FLPKTM",
        "FPKART"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "5676712"
                ],
                "format": "bal"
              },
              {
                "type": "voice",
                "numbers": [
                  "18002703333"
                ]
              }
            ]
          },
          {
            "account_type": "credit_card",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "5676712"
                ],
                "format": "CCBAL XXXX"
              }
            ]
          }
        ]
      },
      "full_name": "HDFC Bank",
      "name": "HDFC",
      "patterns": [
        {
          "regex": "(?i)Thank you\\s.*HDFC Bank DEBIT.*ending\\s([0-9]{4})\\sfor\\s(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\stowards\\s(.*)in\\s(.*)at\\s(.*)\\son\\s([0-9-:]*)\\.",
          "account_type": "debit_card",
          "pattern_UID": "10001",
          "sort_UID": "10001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "location": {
              "group_id": 4
            },
            "note": {
              "group_id": 5
            },
            "date": {
              "group_id": 6,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s.*HDFCBank\\sCREDIT.*ending\\s*([0-9]*)\\son\\s([0-9:-]*)\\sat\\s(.*)\\.\\s*Avl bal - (?:INR|Rs)[\\.,\\s]*(-?[\\d,]*\\.?\\d{0,2})\\s*,\\s*curr o\\/s - (?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "10002",
          "sort_UID": "10002",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            },
            "outstanding_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)(?:Stmt|statement).*(?:ending|creditcard)\\s(\\d{4}).*min\\s*(?:amt|due)?\\s*(?:Due|amt)[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*Total\\s*(?:amt|due)?\\s*(?:Due|amt)[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}).*((?:immediately)|(?:\\d{2}\\/[a-z]*\\/\\d{4}))",
          "account_type": "credit_card",
          "pattern_UID": "10003",
          "sort_UID": "10003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "min_due_amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MMM/yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*debited .*x+(\\d{2,4}) .*for (.*?) (?:txn|requested|done|using|transaction|via HDFC Bank)",
          "account_type": "bank",
          "pattern_UID": "10005",
          "sort_UID": "10005",
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "transaction_type": "net_banking",
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "group_id": 2
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 86400000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)Your (?:payment|recharge) for (.*)[\\s\\-]*(account .*) (?:for|of) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})(?: with )?(.*)? has been (?:processed|received)",
          "account_type": "bill_pay",
          "pattern_UID": "10006",
          "sort_UID": "10006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "bill_pay",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Bill payments"
            },
            "pos": {
              "group_ids": [
                1,
                2
              ]
            },
            "amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)Your unsuccessful (ATM).*on.*Card ending (\\d{4}) of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) at location (.*) on\\s([0-9-:]*) is reversed",
          "account_type": "debit_card",
          "pattern_UID": "10007",
          "sort_UID": "10007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)credit card ending (\\d{4}) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) in.*(?:\\bat\\b|towards) (.*) on (.*?)\\.",
          "account_type": "credit_card",
          "pattern_UID": "10008",
          "sort_UID": "10008",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)Thank you\\s.*Debit Card.*ending\\s([0-9]{4})\\sfor\\s(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\sin\\s*(.*)\\sat\\s(.*)\\son\\s([0-9-:]*)\\s*avl bal: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "10009",
          "sort_UID": "10009",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "location": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*withdrawn.*Card.*ending\\s([0-9]{4})\\son\\s([0-9-:]*)\\sat\\s(.*)\\. Avl bal: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "10010",
          "sort_UID": "10010",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            },
            "note": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) (?:Dr|debited) (?:to|from).*X+(\\d{4}) .*(?:info\\:|towards) (.*)? (?:Val|avl).*?Bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10011",
          "sort_UID": "10085",
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "bill_pay",
                  "acc_type_override": "bill_pay",
                  "value": "cc"
                },
                {
                  "pos_override": "Cheque",
                  "value": "chq",
                  "txn_type": "cheque",
                  "set_no_pos": true
                },
                {
                  "pos_override": "Cheque",
                  "value": "cts",
                  "txn_type": "cheque",
                  "set_no_pos": true
                },
                {
                  "txn_type": "ecs",
                  "value": "emi"
                },
                {
                  "txn_type": "ecs",
                  "value": "ach"
                },
                {
                  "txn_type": "ecs",
                  "value": "ecs"
                },
                {
                  "pos_override": "UPI Funds Transfer",
                  "txn_type": "upi",
                  "value": "upi-",
                  "set_no_pos": true
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)ur transaction.*(CREDIT|DEBIT\/ATM).*ending (\\d{4}) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*reversed by (.*) on (\\S+)",
          "account_type": "credit_card",
          "pattern_UID": "10012",
          "sort_UID": "10012",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "acc_type_override": "debit_card",
                  "value": "debit/atm"
                },
                {
                  "txn_type": "credit",
                  "acc_type_override": "credit_card",
                  "value": "credit"
                }
              ],
              "group_id": 1
            },
            "transaction_category": "walnut_refund"
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*debited.*x+(\\d{4}) .*(?:info\\:|towards) ((?:chq|cheque) (?:no. |paid-).*)(?:\\.|,) (?:value|avl|Available).*?bal.*?(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10014",
          "sort_UID": "10014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)debited.*credit card for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*at (.*) on (.*?)\\.",
          "account_type": "credit_card",
          "pattern_UID": "10015",
          "sort_UID": "10015",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)outstanding.*credit card ending (\\d{4}) is [\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "10019",
          "sort_UID": "10019",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "outstanding_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)cr crd\\s*ending (\\d{4}) \\- total out.*amt \\- (?:INR|Rs)*[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*bal[\\.\\-,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "10034",
          "sort_UID": "10034",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "outstanding_balance": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)available (?:bal|balance) in (?:HDFC bank)?\\s*a\\/c x*(\\d{4}) on [\\w\\-]+[\\s\\:]+(?:Rs|INR)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10020",
          "sort_UID": "10022",
          "sms_type": "transaction",
          "reparse": true,
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i).*x+(\\d{4}).*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*a\\/c\\s*(linked to mobile x+\\d{4}|\\w+) .*?credited\\s\\((imps ref no[\\s\\.]*(\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "10021",
          "sort_UID": "10036",
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "transaction_type": "net_banking",
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "group_id": 1
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 86400000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)bal.*?in.*x+(\\d{4}) (?:as of|on) (.+)\\s*(?:eod is|\\:) (?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10022",
          "sort_UID": "10020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)Thank you\\s.*Debit\\/atm Card.*ending\\s([0-9]{4})\\sfor\\s(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\sin\\s(?:.*) at\\s(\\+)(.*)on ([0-9-:]*)",
          "account_type": "debit_card",
          "pattern_UID": "10023",
          "sort_UID": "10023",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "location": {
              "group_id": 4
            },
            "note": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)hdfc bank (.*) (?:card ).* \\d*x*\\d*(\\d{4}) for (?:INR|Rs)*[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) at (.*) on ([\\d\\-\\w\\: ]*). .* (?:bal is|bal\\:) (?:INR|Rs)*[,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "10024",
          "sort_UID": "10024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "location": {
              "group_id": 4
            },
            "pos": {
              "group_id": 4,
              "set_no_pos": false
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm a"
                }
              ]
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)Thank you\\s.*Debit\\/atm Card.*ending\\s([0-9]{4})\\sfor\\s(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\sin\\s(?:.*) at\\s(.*)on ([0-9-:]*)",
          "account_type": "debit_card",
          "pattern_UID": "10025",
          "sort_UID": "10025",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": false
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2}) (?:deposited|is credited).*? a\\/c.*? x+(\\d{4}).*(?:clr bal is\\s|avl bal\\:)\\s*(?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10026",
          "sort_UID": "10074",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)credit card ending (\\d{4}) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards atm wdl on (\\d{4}-\\d{2}\\-\\d{2}\\:\\d{2}\\:\\d{2}\\:\\d{2})\\.Avl bal - (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}),\\s*curr o\\/s bal - (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "10027",
          "sort_UID": "10027",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_atm",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 4
            },
            "outstanding_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)([\\d,]*\\.?\\d{2}) is debited from \\**x*(\\d{4}) on (.*) for upi\\/\\d*\\/([\\w@.]*)",
          "account_type": "bank",
          "pattern_UID": "10028",
          "sort_UID": "10028",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "transaction_type": "upi",
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your hdfc bank (.*) (?:card )ending with \\d*x*\\d*(\\d{4}) .*reloaded with (?:INR|Rs)*[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\w\\: ]*). .* is (?:INR|Rs)*[,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "10029",
          "sort_UID": "10029",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm a"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "value": "Card Top Up",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)Dear Smart pay .*debited your HDFC Bank (?:credit card|crcard) ending (\\d{4}) to pay your (.*) bill for the amount (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "10030",
          "sort_UID": "10030",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2,
              "set_no_pos": true
            },
            "amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)hdfc bank visa.*(?:forex|Multicurrency).*card.* x+(\\d{4}) for ([a-z]*) [.,\\s]*([\\d,]*\\.?\\d{0,2}) at (.*) on (.*)\\. (?:post|card bal)",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "HDFC Forex Card",
          "pattern_UID": "10031",
          "sort_UID": "10031",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm a"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited from a\\/c \\**x*(\\d{4}) on .*to (vpa |a\\/c)(.*)\\((Upi ref no.? (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "10032",
          "sort_UID": "10032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "vpa"
                },
                {
                  "txn_type": "upi",
                  "value": "a/c",
                  "pos_override": "UPI Funds Transfer",
                  "set_no_pos": true
                }
              ],
              "group_id": 3
            },
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 5
            },
            "network_reference_id": {
              "group_id": 6,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)for paying (?:INR|Rs)*[\\.:,\\s|v]*([\\d,-]+\\.?\\d{0,2}) from a\\/c x+(\\d{4}) to (.*) via netbanking",
          "account_type": "bank",
          "pattern_UID": "10033",
          "sort_UID": "10033",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)a\\/c x+(\\d{4}) credited with (?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2}).*(?:clr bal is\\s|Available bal\\:|Avl Bal\\:) (?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10035",
          "sort_UID": "10035",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i).*x+(\\d{4}).*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*a\\/c (linked to mobile x+\\d{4}|\\w+) .*?credited\\s*\\((imps ref no[\\s\\.]*(\\d+))\\).*(?:available|avl) bal[\\:\\s]*(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10036",
          "sort_UID": "10021",
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "transaction_type": "net_banking",
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "group_id": 1
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 86400000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_imps": true
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) from a\\/c\\s* to (.*) via netbanking",
          "account_type": "bank",
          "pattern_UID": "10037",
          "sort_UID": "10037",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2}) deposited.*? a\\/c.*? x+(\\d{4}) .*(?:for|towards) rev-upi.*(?:clr bal is\\s|avl bal\\:)(?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10038",
          "sort_UID": "10038",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)UPI transaction of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been reversed.*\\((upi ref no.? (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "10039",
          "sort_UID": "10039",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 3,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)emi of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:is due|due) on (\\d{1,2}-[a-z]{3}-\\d{2,4}) for loan a\\/c (\\d+)",
          "account_type": "loan",
          "account_name_override": "HDFC Loan",
          "pattern_UID": "10041",
          "sort_UID": "10041",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)emi due on (\\d{2}-[a-z]{3}-\\d{4}) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .* loan (\\d+)",
          "account_type": "loan",
          "account_name_override": "HDFC Loan",
          "pattern_UID": "10042",
          "sort_UID": "10042",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 1,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)emi of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .* loan a\\/c no\\.\\s*(\\d+) is due on (\\d{1,2}-[a-z]{3}-\\d{2,4})",
          "account_type": "loan",
          "account_name_override": "HDFC Loan",
          "pattern_UID": "10043",
          "sort_UID": "10043",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "d-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)withdrawn (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) via debit card x*(\\d{4}) at (.*) on (\\d{4}\\-\\d{2}\\-\\d{2}\\:\\d{2}\\:\\d{2}\\:\\d{2})\\.Avl bal (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "10051",
          "sort_UID": "10051",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)spent (?:INR|Rs)\\s*[\\.,]\\s*([\\d,\\.]*\\.?\\d{0,2})\\s.* credit card x*(\\d{4}) at (.*) on (\\d{4}\\-\\d{2}\\-\\d{2}\\:\\d{2}\\:\\d{2}\\:\\d{2})\\.Avl bal - (?:INR|Rs)[\\.,\\s]*(-?[\\d,]*\\.?\\d{0,2})\\s*,\\s*curr o\\/s - (?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "10052",
          "sort_UID": "10052",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            },
            "outstanding_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)spent (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) via debit card x*(\\d{4}) at (.*) on (\\d{4}\\-\\d{2}\\-\\d{2}\\:\\d{2}\\:\\d{2}\\:\\d{2})\\.avl bal (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "10053",
          "sort_UID": "10053",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)withdrawn (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on credit card x*(\\d{4}) at (.*) on (\\d{4}\\-\\d{2}\\-\\d{2}\\:\\d{2}\\:\\d{2}\\:\\d{2})\\.Avl bal\\s*\\-?\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\,curr o\\/s bal\\s*\\-?\\s*(?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "10054",
          "sort_UID": "10054",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_atm",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            },
            "outstanding_balance": {
              "group_id": 6
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:spent via|\\s*on) credit card x*(\\d{4}) at (.*) on (\\d{4}\\-\\d{2}\\-\\d{2}\\:\\d{2}\\:\\d{2}\\:\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "10055",
          "sort_UID": "10055",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)spent (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s.* credit card x*(\\d{4}) at (.*) on (\\d{4}\\-\\d{2}\\-\\d{2}\\:\\d{2}\\:\\d{2}\\:\\d{2})\\.",
          "account_type": "credit_card",
          "pattern_UID": "10056",
          "sort_UID": "10056",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)spent (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s.* DEBIT\\/ATM Card x*(\\d{4}) at (.*) on (\\d{4}\\-\\d{2}\\-\\d{2}\\:\\d{2}\\:\\d{2}\\:\\d{2})\\.",
          "account_type": "debit_card",
          "pattern_UID": "10057",
          "sort_UID": "10057",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)withdrawn (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:via debit|on DEBIT\\/ATM) card x*(\\d{4}) at (.*) on (\\d{4}\\-\\d{2}\\-\\d{2}\\:\\d{2}\\:\\d{2}\\:\\d{2})",
          "account_type": "debit_card",
          "pattern_UID": "10058",
          "sort_UID": "10158",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:HH:mm:ss"
                }
              ]
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)for using.*hdfc.*Regalia ForexPlus.* x*(\\d{4}) for (INR|Rs|[a-z]{3})[\\.,\\s]*([\\d\\,]*\\.?\\d{0,2}) at (.*) on (.* (?:pm|am))",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "HDFC Regalia ForexPlus Card",
          "pattern_UID": "10061",
          "sort_UID": "10061",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm a"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)fast*ag .*(?:debited (?:for|by)|deducted\\:) (?:INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:for transaction by|for) (.*?) (?:at toll|at\\:) (.*?) on[\\s\\:]*(.*?)(?:\\.\\s?|wallet).*?bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "HDFC FASTag",
          "pattern_UID": "10063",
          "sort_UID": "10063",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd'T'HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd HH:mm:ss"
                }
              ]
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "note": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)fastag.*successfully recharged for (?:INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?)\\..*balance.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "HDFC FASTag",
          "pattern_UID": "10064",
          "sort_UID": "10064",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/mm/yy hh:mm:ss a"
                }
              ]
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "FasTag Recharge",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)for using.*?hdfc.*?giftcard.*?x*(\\d{4}) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) at (.*) on (.*?)\\. card bal[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "HDFC GIFTCARD",
          "pattern_UID": "10065",
          "sort_UID": "10065",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm a"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*\\-?([\\d,]+\\.?\\d{0,2}) (?:deposited|is credited).*? a\\/c.*? x+(\\d{4}).* (?:for|towards).*?(?:rev[\\s\\-]imps)\\-.*?\\-(.*?)\\-.*(?:INR|Rs)[\\.:,\\s]*\\-?([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10066",
          "sort_UID": "10066",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2}) (?:deposited|is credited).*? a\\/c.*? x+(\\d{4}).*for upi\\-(.*?)\\-.*\\-.*?(?:refund|reversal).*\\.(?:clr bal is\\s|avl bal[\\:\\s])\\s*(?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10067",
          "sort_UID": "10067",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2}) (?:deposited|is credited).*? a\\/c.*? x+(\\d{4}).* for\\s*(.*(?:refund|rvsl dbt crd (?:pur|atm)|[\\-\\s]reversal|\\srvsl[\\s\\-]|\\srev (?:atw|nwd|pos)[\\s\\-]|\\srev\\-|neft return|rtgs\\-return|upiret\\-).*)\\.(?:clr bal is\\s|avl bal[\\:\\s])\\s*(?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10068",
          "sort_UID": "10068",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "dbt crd atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "rev atw",
                  "pos_override": "ATM Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "dbt crd pur",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "rev pos",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*\\-?([\\d,]+\\.?\\d{0,2}) (?:deposited|is credited).*? a\\/c.*? x+(\\d{4}).* (?:for|towards).*?((?:(?:imps|tpt)\\-.*?\\-|upi\\-)(.*?)(?:\\-|\\.(?:\\s*avl|\\s*clr)).*?)(?:bal is\\s|bal[\\:\\s]*)\\s*(?:INR|Rs)[\\.:,\\s]*\\-?([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10069",
          "sort_UID": "10069",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*\\-?([\\d,]+\\.?\\d{0,2}) (?:deposited|is credited).*? a\\/c.*? x+(\\d{4}).* (?:for|towards).*?neft cr\\-.*?\\-[\\-\\,\\.]*((.*)\\-[\\w\\s]+)\\-\\w+\\.\\s*(?:avl|clr).*?bal.*?(?:INR|Rs)*[\\.:,\\s]*\\-?([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10070",
          "sort_UID": "10070",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*\\-?([\\d,]+\\.?\\d{0,2}) (?:deposited|is credited).*? a\\/c.*? x+(\\d{4}).* (?:for|towards).*?((?:rtgs cr|ib funds transfer cr| ft[\\s\\-]*cr\\s*)\\-.*?\\-(.*?)(?:\\-|\\.avl).*?)bal.*?(?:INR|Rs)[\\.:,\\s]*\\-?([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10071",
          "sort_UID": "10071",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)salary of (?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2}) (?:deposited|is credited).*? a\\/c.*? x+(\\d{4}).*(?:clr bal is\\s|avl bal[\\:\\s])\\s*(?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10072",
          "sort_UID": "10072",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2}) (?:deposited|is credited).*? a\\/c.*? x+(\\d{4}).*? (?:for|towards) [x\\d\\-]*(.*?)(?:\\.|val\\s|\\-\\s*x{10}\\d{4}).*?(?:clr bal is\\s|avl bal[\\:\\s])\\s*(?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10073",
          "sort_UID": "10073",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2}) (?:deposited|is credited).*? a\\/c.*? x+(\\d{4}).* (?:for|towards).*?upi\\-paytm\\-(.*?)[\\-\\.].*?(?:clr bal is\\s|avl bal[\\:\\s])\\s*(?:INR|Rs)[\\.:,\\s]*(\\-?[\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10074",
          "sort_UID": "10026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) received .*credit card ending (\\d{4}) through.*? on.*available limit is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "10075",
          "sort_UID": "10075",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) credited to a\\/c \\**x*\\d*(\\d{4}) on.*a\\/c linked to vpa (.*) \\((upi ref no.? (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "10076",
          "sort_UID": "10076",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*credited .*credit card ending x*\\d*(\\d{4}) from (.*) on",
          "account_type": "credit_card",
          "pattern_UID": "10077",
          "sort_UID": "10077",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c ending \\**(\\d{4}) will be debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards autopay.*?of debit card emi loan on (\\d{2}\\/\\w{3}\\/\\d{4})",
          "account_type": "loan",
          "account_name_override": "HDFC Debit Card EMI Loan",
          "pattern_UID": "10078",
          "sort_UID": "10078",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MMM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)your a\\/c.*?(\\d{4}) has been debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?Debit mandate\\s*(?:\\/autopay)? towards (.*)(?:[\\s\\-]\\w+[\\-\\/]\\w+|\\.\\s*not you)",
          "account_type": "bank",
          "pattern_UID": "10079",
          "sort_UID": "10079",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)hdfc bank.*?credit card (\\d{4})[\\s\\!\\.]*.*?(?:payment due on|due date)[\\s\\:](\\d{0,2}\\/\\w{3}\\/\\d{2,4})[\\s\\,\\.]*total due[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\,\\s\\.]+min due\\s*(?:amount)?[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.",
          "account_type": "credit_card",
          "pattern_UID": "10081",
          "sort_UID": "10081",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "min_due_amount": {
              "group_id": 4
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MMM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited (?:from|to hdfc bank) a\\/c (?:no)?\\s*x*(\\d{4}) towards (.*?) (?:on [\\d\\/]+\\.|and.*?are unblocked|\\/ |with\\s).*?(?:application|umrn)",
          "account_type": "bank",
          "pattern_UID": "10082",
          "sort_UID": "10082",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(chq[\\s\\#]*\\d+) of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?and debited to your.*?a\\/c x*(\\d{4})[\\s\\.]*avl bal[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10083",
          "sort_UID": "10083",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "note": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) debited from.*X+(\\d{4}) .*info\\: (?:imps\\-\\w+\\-\\-\\w+\\-\\w+|(?:imps|neft dr|rtgs dr)\\-\\w+|ib funds transfer dr\\-\\w+|ach d(?:\\s*\\-\\s*bd)?|ft[\\s\\-]*dr[\\s\\-]*\\w+)\\s*\\-(.*?)(?:\\-.*|\\.\\s*avl) Bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10084",
          "sort_UID": "10084",
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) debited from.*X+(\\d{4}) .*info\\: upi\\-(.*?)\\-.*\\-\\w+\\-(\\d+)\\-.*?avl Bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "10085",
          "sort_UID": "10011",
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "transaction_type": "upi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            },
            "account_balance": {
              "group_id": 5
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?was credited to your card ending (\\d{4}) on",
          "account_type": "credit_card",
          "pattern_UID": "10086",
          "sort_UID": "10086",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)cashback of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:has been posted.*?credit card ending with|to hdfc bank credit card) (\\d{4}) .*(?:towards|on\\s)\\s*(.*?)\\s*(?:on \\d{1,2}\\/|\\.\\s*chat)",
          "account_type": "credit_card",
          "pattern_UID": "10087",
          "sort_UID": "10087",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_rewards",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(neft|rtgs).*?txn no (\\w+) for (?:INR|Rs|Rs INR)[\\.:,\\s]*\\-?([\\d,]+\\.?\\d{0,2}) has been credited to (.*?) on ([\\d\\-]+ at [\\d\\:]*)",
          "account_type": "bank",
          "pattern_UID": "10088",
          "sort_UID": "10088",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy 'at' HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 2,
              "type_group_id": 1,
              "type_rules": [
                {
                  "value": "neft",
                  "is_neft": true
                },
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)amount of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*has been transferred to your (.*?) a\\/c .*?through netbanking",
          "account_type": "bank",
          "pattern_UID": "10089",
          "sort_UID": "10089",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)your request for cashback of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards redemption.*?card ending (\\d{4}) .*?received",
          "account_type": "credit_card",
          "pattern_UID": "10090",
          "sort_UID": "10090",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_rewards",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cashback",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)refund of (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) received from (.*?) \\w+ has been credited to hdfc.*?(?:credit|cr)\\s*card ending (\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "10091",
          "sort_UID": "10091",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}) is charged with (?:INR|Rs)[\\s.,]*([\\d,]*\\.?\\d{0,2}).*?for (.*?)\\.\\s* maintain req",
          "account_type": "bank",
          "pattern_UID": "10092",
          "sort_UID": "10092",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)your (.*?) bill payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for .*?has been processed successfully",
          "account_type": "bill_pay",
          "pattern_UID": "10093",
          "sort_UID": "10093",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "bill_pay",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Bill payments"
            },
            "pos": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)credit card x*(\\d{4}) .*total due amt\\: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) min due amt\\: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) due by\\:\\s*(\\d{1,2}\\-\\d{2}\\-\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "10094",
          "sort_UID": "10094",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{1,2})[\\s\\S]for\\: (.*)[\\s\\S]from.*?hdfc bank a\\/c x*(\\d{4})",
          "account_type": "bank",
          "pattern_UID": "10095",
          "sort_UID": "10095",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)deducted (?:Rs|INR)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\S]from[\\:\\s]*hdfc bank a\\/c x*(\\d{4})[\\s\\S]*funds transfer",
          "account_type": "bank",
          "pattern_UID": "10096",
          "sort_UID": "10096",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)autopay reminder\\![\\s\\S](?:INR|Rs)*[\\.\\s]*([\\d,]*\\.?\\d{0,2}) will be deducted[\\s\\S]*from[\\s\\:]*hdfc bank a\\/c (?:\\d{4})[\\s\\S]*.*debit card emi loan (\\d+) on (\\d{2}\\/\\w{3}\\/\\d{4})",
          "account_type": "loan",
          "account_name_override": "HDFC Debit Card EMI Loan",
          "pattern_UID": "10097",
          "sort_UID": "10097",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MMM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)E-Statement for HDFC Bank Debit Card EMI Loan[\\s\\S](\\d+)[\\s\\S]emi due date[\\s\\:]*(\\d{2}\\/\\w{3}\\/\\d{4})[\\s\\S]emi due[\\s\\:]*(?:INR|Rs)*[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "loan",
          "account_name_override": "HDFC Debit Card EMI Loan",
          "pattern_UID": "10098",
          "sort_UID": "10098",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MMM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "9000001",
      "senders": [
        "5676712",
        "HDFCBK",
        "HDFCMP",
        "TXNALE",
        "HDFCBN"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "9611124722"
                ],
                "format": "BAL <Account nickname>"
              }
            ]
          }
        ]
      },
      "full_name": "HSBC",
      "name": "HSBC",
      "patterns": [
        {
          "regex": "(?i)credit card.*?(?: no.)? x+(\\d{4}).*(?:debited|used) for (INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{2}) .*(?:at|for) (.*?)\\.",
          "account_type": "credit_card",
          "pattern_UID": "170001",
          "sort_UID": "170001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)card ending x*(\\d{4}).*Payment due on\\s*(.*), Total payment due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}).*min payment due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "170002",
          "sort_UID": "170002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMMyy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 3
            },
            "min_due_amount": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:Account|A\\/c) (?:\\d+-)?(\\w+).*debited.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*as (.*)\\..*(?:bal|balance) is\\s?(?:INR|Rs)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "170003",
          "sort_UID": "170003",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "cash withdrawal",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "csh wdl",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "net_banking",
                  "value": "payment debit",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "cheque",
                  "value": "cheque debit",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": "debit",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i).*debit card X*(\\d{4}) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*at (.*). Call.*?is\\s?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*",
          "account_type": "debit_card",
          "pattern_UID": "170004",
          "sort_UID": "170014",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)card ending x*(\\d{4}).*Payment due on(.*), Total payment due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "170006",
          "sort_UID": "170006",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMMyy"
                }
              ]
            },
            "amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)has been credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\+ on .*? as (.*?)\\s*\\..*? bal.*? is (?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "170007",
          "sort_UID": "170007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)balance in your account (.*?) is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "170008",
          "sort_UID": "170008",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "value": "XXXX"
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)total payment\\s*due .*card ending (?:with)?\\s*(\\d{4}) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?min.*?payment\\s*due.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* due\\s*date (\\d{2}\\-?[a-z]{3}\\-?\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "170009",
          "sort_UID": "170009",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMMyy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)acc x*\\d*(\\d{4}) is debited for (?:Rs|INR)[.,\\s]([\\d,]*\\.?\\d{2}) on (.*)towards (.*?)\\. (upi ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "170010",
          "sort_UID": "170010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 5
            },
            "network_reference_id": {
              "group_id": 6,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)credit card x+(\\d{4}) (?:has been|is) used at (.*) for (INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{2}) on.*available limit - (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})\\;\\s*(?:current)? outstanding - (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "170011",
          "sort_UID": "170011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "currency": {
              "group_id": 3
            },
            "amount": {
              "group_id": 4
            },
            "pos": {
              "group_id": 2
            },
            "outstanding_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)hsbc debit card x*(\\d{4}) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).* at (.*) .Your available bal is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "170012",
          "sort_UID": "170012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:your|hsbc) acc x*\\d*(\\d{4}) is credited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?from (.*?)\\. (upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "170013",
          "sort_UID": "170013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)has been credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\+ on .*? as (reversal of (?:cash withdrawal|(?:tax)?\\s*debit))\\s*\\..*? balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "170014",
          "sort_UID": "170004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)transfer of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been made to.*?from your hsbc a\\/c on (.*?) through Internet Banking",
          "account_type": "bank",
          "pattern_UID": "170015",
          "sort_UID": "170015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd HH:mm"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)a\\/c.*?is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?with utr (\\w+) as (neft|rtgs) from.*? of (.*?)[\\*\\.\\s]+your avl bal is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "170016",
          "sort_UID": "170016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 2,
              "type_group_id": 3,
              "type_rules": [
                {
                  "value": "neft",
                  "is_neft": true
                },
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)refund of (?:INR|Rs)[\\.,\\s]*([\\d,\\\\-]*\\.?\\d{0,2}) has been initiated by (.*?) on your.*?credit card ending with x*(\\d{4}) on",
          "account_type": "credit_card",
          "pattern_UID": "170017",
          "sort_UID": "170017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        }
      ],
      "sender_UID": "90000017",
      "senders": [
        "HSBCIN",
        "HSBCBK",
        "HSBCIM"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "+919215676766"
                ],
                "format": "IBAL"
              },
              {
                "type": "voice",
                "numbers": [
                  "+919594612612"
                ]
              }
            ]
          },
          {
            "account_type": "credit_card",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "+919215676766"
                ],
                "format": "IBALCC XXXXXX "
              }
            ]
          }
        ]
      },
      "full_name": "ICICI Bank",
      "name": "ICICI",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}) (?:has been made|was spent|done).*on (.*).\\s*Info.(.*)\\*(.*).(?:Your|the|avbl).*(?:balance is\\s|bal:)(?:INR|Rs)[\\.,\\s]?([\\d\\,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "120001",
          "sort_UID": "120001",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd MMM"
                }
              ]
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "cash wdl",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)X+(\\d{3,4}).*debited.*(?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{0,2}).*?([\\S]{3})\\*\\d*\\**(.*?)(?:\\*|\\.\\s*the avail).*bal.*(?:INR|Rs)[\\.,\\s]?([\\d,\\-]*\\.?\\d{2})",
          "account_type": "debit_card",
          "pattern_UID": "120002",
          "sort_UID": "120006",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "cash wdl",
                  "pos_override": "ATM"
                },
                {
                  "acc_type_override": "bank",
                  "value": "clg",
                  "txn_type": "cheque"
                },
                {
                  "txn_type": "default",
                  "acc_type_override": "bank",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{3,4}).*debited with (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2})\\s*.*info.\\s?(?:.*\\,\\s?)?(.*?)\\..*bal.*(?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2})",
          "account_type": "bank",
          "pattern_UID": "120003",
          "sort_UID": "120003",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "Cheque",
                  "value": "cheque",
                  "txn_type": "cheque"
                },
                {
                  "pos_override": "ATM",
                  "value": "cash wdl",
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card"
                },
                {
                  "pos_override": "ATM",
                  "value": "atm",
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card"
                },
                {
                  "pos_override": "ATM",
                  "value": "nfs",
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:tranx|txn) of (INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).* credit card.*x+(\\d{3,4}).*at (.*) on (.*?)\\. avbl cr lmt:\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "120004",
          "sort_UID": "120094",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)total.*(?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{1,2}).*x+(\\d{3,4}).*due.*min amt of (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{1,2}) by ((?:\\d{2}-\\S{3}-\\d{2})|(?:immediately))",
          "account_type": "credit_card",
          "pattern_UID": "120005",
          "sort_UID": "120005",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)balances for AC x+\\d*?(\\d{3,4}) on (.*[ap].?m.?).*total Avbl. Bal:\\s*(?:INR|Rs)?[\\.:,\\s|v\\?]*([\\d,\\-]+\\.?\\d{0,2})Avbl. bal:\\s*(?:INR|Rs)[\\.:,\\s|v]*([\\d,\\-]+\\.?\\d{0,2})linked fd bal:\\s*(?:INR|Rs)?[\\?\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "120008",
          "sort_UID": "120008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss a"
                }
              ]
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)card xx\\d*(\\d{3,4}).*total amt due:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}).*total credit lmt:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}).*available credit lmt:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}).*as of (.*) \\w{3}",
          "account_type": "credit_card",
          "pattern_UID": "120009",
          "sort_UID": "120009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "outstanding_balance": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:tranx|transaction) of .*(INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).* credit card.*x+(\\d{3,4})..*at (.*) on (.*?)[\\.:,\\s]*(?:avbl|available)[\\.:,\\s]*(?:cr|credit)[\\.:,\\s]*(?:lmt|limit)[\\.:,\\s\\(]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\.:,\\s\\)]*(?:total|tot)[\\.:,\\s]*(?:cr|credit)[\\.:,\\s]*(?:lmt|limit)[\\.:,\\s\\(]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "120010",
          "sort_UID": "1200010",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)balance for .*(?:account|a\\/c|ac) x+\\d*(\\d{3,4}) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}) as on (.*\\d{2}\\:\\d{2}\\:\\d{2})",
          "account_type": "bank",
          "pattern_UID": "120011",
          "sort_UID": "120011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i) transaction of ([a-z]{3}) [\\.,\\s]?([\\d,]*\\.?\\d{2}) on (\\d{2}\\-[a-z]{3}\\-\\d{2}) on card x*(\\d{4}) is made at (.*)\\. Available cr.limit is (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}).*",
          "account_type": "credit_card",
          "pattern_UID": "120012",
          "sort_UID": "120095",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 4
            },
            "pos": {
              "group_id": 5
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i) (?:ac|account|acct) x*(\\d{3,4}) (?:is|has been) credited.* (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*(?:balance|bal)\\s*(?:is|\\:) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "120013",
          "sort_UID": "120090",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}).*debited with (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}).*(info.*?MMT|info.*?UPI)\\*.*?(\\d*)\\*.*bal.*(?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2})",
          "account_type": "bank",
          "pattern_UID": "120014",
          "sort_UID": "120002",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "note",
                  "child_field": {
                    "field": "note"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 86400000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "UPI Funds Transfer",
                  "txn_type": "upi",
                  "value": "upi"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{3,4}).*debited for (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}) on (\\d{2}-[a-z]{3}-\\d{4} \\d{2}:\\d{2}:\\d{2}) .*imps ref no (.*)\\).",
          "account_type": "bank",
          "pattern_UID": "120015",
          "sort_UID": "120015",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "note",
                  "child_field": {
                    "field": "note"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 86400000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)pockets .*\\**(\\d{4}) .* debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* balance.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Pockets",
          "pattern_UID": "120016",
          "sort_UID": "120016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i) transaction of (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}) .* made at (.*?)\\s*using Pockets .* x*(\\d{4}) on ((?:\\d{2}-[a-z]{3}-\\d{4} \\d{2}:\\d{2}:\\d{2})|(?:\\d{2}\\-[a-z]{3}\\-\\d{4})).* balance is (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Pockets",
          "pattern_UID": "120017",
          "sort_UID": "120017",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                },
                {
                  "use_sms_time": true,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "pos": {
              "group_id": 2,
              "set_no_pos": false
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i) pockets .* x*(\\d{4}) .* credited with (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}).* balance .* (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Pockets",
          "pattern_UID": "120019",
          "sort_UID": "120019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}).* transferred .* Pockets .*(\\d{4}) to (.*)\\.",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Pockets",
          "pattern_UID": "120020",
          "sort_UID": "120020",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Online Transfer",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}) debited from pockets card x*\\**(\\d{4}) on.*info\\:(.*?)\\. avbl bal\\s*\\:\\s*(?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Pockets",
          "pattern_UID": "120030",
          "sort_UID": "120030",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)total amount due of (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{1,2}).*x+(\\d{3,4}).*due.*((?:\\d{2}-\\S{3}-\\d{2})|(?:immediately))",
          "account_type": "credit_card",
          "pattern_UID": "120021",
          "sort_UID": "120021",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:acct|a\\/c no.|account) x+(\\d{3,4}) .* debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) .* (?:linked to|acct|a\\/c|linked) (.*?)(?:\\. upi ref| is credited|credited).*no[\\s\\.]*(\\d*)",
          "account_type": "bank",
          "pattern_UID": "120022",
          "sort_UID": "120022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)total amount of (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{1,2}) and minimum amount of (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{1,2}) is due.* (\\d{2}\\-\\S{3}\\-\\d{2}) on .* card x*(\\d{3,4})",
          "account_type": "credit_card",
          "pattern_UID": "120023",
          "sort_UID": "120023",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "amount": {
              "group_id": 1
            },
            "min_due_amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:trxn|transaction) of (INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).* credit card.*x+(\\d{3,4}).*?at (.*) dated.*reversed.* (?:avbl|available) cr.*?limit is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "120024",
          "sort_UID": "120024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)credit card x+(\\d{3,4}) has been sent.*total (?:amt|amount) of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) or min.*?(?:amt|amount) of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is due by (\\d{2}-\\S{3}-\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "120025",
          "sort_UID": "120025",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)refund of (INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from (.*) has been.*credit card x*(\\d{4}) on",
          "account_type": "credit_card",
          "pattern_UID": "120026",
          "sort_UID": "120026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)acct x*(\\d{3,4}) debited (?:with|for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*[\\s\\-](?:and|\\&|\\d{2}[\\.\\s])\\s*(.*) credited\\.(?:info\\:)?upi[\\-\\:](\\d*)",
          "account_type": "bank",
          "pattern_UID": "120027",
          "sort_UID": "120027",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "UPI Funds Transfer",
                  "txn_type": "upi",
                  "value": "acct ",
                  "set_no_pos": true
                },
                {
                  "txn_type": "upi",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "prefix": "Upi reference number:",
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:is)?\\s*debited on (?:icici bank)?\\s*credit card x+(\\d{3,4}) .*info\\:(.*?)\\.\\s*(?:avbl lmt|Available Limit):\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "120028",
          "sort_UID": "120028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:acct|Account) x*(\\d{3,4}) debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*(?:\\&|and) (.*) credited.*imps\\:\\s*(\\d*)",
          "account_type": "bank",
          "pattern_UID": "120029",
          "sort_UID": "120029",
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "note",
                  "child_field": {
                    "field": "note"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 86400000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "prefix": "Imps ref no:",
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)purchase for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on (.*) using.* multiwallet prepaid card x*(\\d{4}) at (.*?)\\s*\\. available balance is (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI Multiwallet",
          "pattern_UID": "120031",
          "sort_UID": "120031",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:multi\\s*wallet|icici bank) (?:prepaid|card).* x+(\\d{4}) .* credited with (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2})\\.? .*available balance (?:on the card)?\\s*is (?:INR|Rs|)[\\.,\\s]*([\\d\\,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI Multiwallet",
          "pattern_UID": "120032",
          "sort_UID": "120032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)transaction of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) using.*multiwallet prepaid card x*(\\d{4}) is made at (.*) on (.*)\\. the available balance is (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI Multiwallet",
          "pattern_UID": "120033",
          "sort_UID": "120033",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) debited (?:on|from ICICI Bank) prepaid card x*(\\d{4}) on.*info[\\:\\-\\s]+(.*?)\\.\\s*(?:avbl bal|the Available Balance is)[\\:\\s](?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI Multiwallet",
          "pattern_UID": "120034",
          "sort_UID": "120034",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": false
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)purchase for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on (.*) using.* meal card x*(\\d{4}) at (.*?)\\s*\\. available balance is (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI Meal Card",
          "pattern_UID": "120041",
          "sort_UID": "120041",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)meal card.* x+(\\d{4})\\s*has.* credited with (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2}).* available balance.* is [\\.,\\s]?([\\d\\,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI Meal Card",
          "pattern_UID": "120042",
          "sort_UID": "120042",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)transaction of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) using.*meal card x*(\\d{4}) is made at (.*) on (.*)\\. the available balance is (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI Meal Card",
          "pattern_UID": "120043",
          "sort_UID": "120043",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)emi of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*loan account [a-z]*(\\d{4}) is due on (\\d{2}-[a-z]{3}-\\d{2})",
          "account_type": "loan",
          "account_name_override": "ICICI Loan",
          "pattern_UID": "120051",
          "sort_UID": "120051",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)purchase for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on (.*) using.*SEMI.*CLOSED (?:PREPAID |)CARD x*(\\d{4}) at (.*?)\\s*\\. available balance is (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI SEMI CLOSED CARD",
          "pattern_UID": "120061",
          "sort_UID": "120061",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)icici.*semi\\s*closed.*card x+\\d*(\\d{4}) has been credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.? .*available balance.*is (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI SEMI CLOSED CARD",
          "pattern_UID": "120062",
          "sort_UID": "120062",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)transaction of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) using.*SEMI.*CLOSED (?:PREPAID |)CARD x*(\\d{4}) is made at (.*) on (.*)\\. the available balance is (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI SEMI CLOSED CARD",
          "pattern_UID": "120063",
          "sort_UID": "120063",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:transaction|trxn|withdrawal) of [\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (INR|Rs|[a-z]{3}) using.*travel card x*(\\d{4}) is made at (.*) on",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Travel Card",
          "pattern_UID": "120071",
          "sort_UID": "120071",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "currency": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:transaction|trxn|withdrawal|txn|online txn) of (INR|Rs|[a-z]{3}) [\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?(?:using|done with).*(?:travel card|tc|forex prepaid card) x*(\\d{4}) (?:is made at|at) (.*) on",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Travel Card",
          "pattern_UID": "120072",
          "sort_UID": "120072",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "currency": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)etc account no\\. (\\d*), (vehicle no\\. .*) has been debited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*) for toll charges at (.*) on.*avail.*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI FASTag",
          "pattern_UID": "120081",
          "sort_UID": "120081",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 6
            },
            "note": {
              "group_id": 2
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)recharge of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for tag account no\\. (\\d*), vehicle.*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI FASTag",
          "pattern_UID": "120082",
          "sort_UID": "120082",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "FasTag Recharge",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)((?:vehicle no. |VRN )\\w+) .* debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?on (\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2}:\\d{2}).*at (.*) on.*avl. bal. is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI FASTag",
          "pattern_UID": "120083",
          "sort_UID": "120083",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "note": {
              "group_id": 1
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)balance in your ICICI Bank FASTag Account linked to vehicle number \\w+ is (?:INR|Rs)[\\.,\\s]*([-\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI FASTag",
          "pattern_UID": "120084",
          "sort_UID": "120084",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "account_balance": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)your (?:ICICI Bank)?\\s*account x*(\\d{3,4}).*?credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*? reversal of transaction (?:with)?\\s*(vide|upi)[\\s\\:]*(\\d+)",
          "account_type": "bank",
          "pattern_UID": "120086",
          "sort_UID": "120086",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "note": {
              "prefix": "Reference number: ",
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 4,
              "type_group_id": 3,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) towards.*?is scheduled on (\\d{2}\\-\\w{3}\\-\\d{2}).*?in acct x*(\\d{4})",
          "account_type": "sip",
          "pattern_UID": "120087",
          "sort_UID": "120087",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "sip",
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account|acct) x*\\d*?(\\d{3,4}) (?:is|has been) credited.* (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*(?:(?:neft|rtgs)\\-.*?\\-|icsp|trfr from|trf|bil\\*inft\\*\\d+)[\\s\\*\\:]*(.*)[\\.\\*].*?(?:balance|(?:avbl|available)[\\s\\.]+bal)\\s*(?:is|\\:) (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "120088",
          "sort_UID": "120088",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account|acct) x*\\d*?(\\d{3,4}) (?:is|has been) credited.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?info[\\s\\:\\.]*(.*?)\\.\\s*(?:avail|the avail|your net|the\\savbl).*(?:balance|bal)\\s*(?:is|\\:) (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "120089",
          "sort_UID": "120089",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account|acct) x*(\\d{3,4}) (?:is|has been) credited with salary of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*(?:balance|bal)\\s*(?:is|\\:) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "120090",
          "sort_UID": "120013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:acct|a\\/c no.?|account) x*\\d*?(\\d{3,4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?from (.*?)[\\s\\.]*(upi ref[\\s\\.]*no[\\s\\.]*(\\d*))",
          "account_type": "bank",
          "pattern_UID": "120091",
          "sort_UID": "120091",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:acct|a\\/c no.?|account) x*\\d*?(\\d{3,4}) is credited (?:by|with) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*by.*(imps ref[\\s\\.]*no[\\s\\.]*(\\d*))",
          "account_type": "bank",
          "pattern_UID": "120092",
          "sort_UID": "120092",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs) ([\\d,]*\\.?\\d{0,2}) .*received .*credit card (?:account)?\\s*\\d*x*\\d*(\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "120093",
          "sort_UID": "120093",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i) (?:ac|account|acct) x*(\\d{3,4}) (?:is|has been) credited.* (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*info[\\s\\:\\.\\-]*iin\\*rfnd\\*i\\-debit\\*(.*)\\..*?(?:balance|bal)\\s*(?:is|\\:) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "120094",
          "sort_UID": "120004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i) (?:ac|account|acct) x*(\\d{3,4}) (?:is|has been) credited.* (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*info[\\s\\:\\.\\-]*.*?(\\*rev pmt|[\\s\\*]refund|(?:\\:\\s*|\\*)rev (?:cam|of|nfs|atm|atd)\\s|_rev of\\s|[\\*\\s\\:]reversal|\\*rfnd|paymnt rvsl\\*|visa rvsl|\\:\\s*int rev\\s|bil\\*\\w+\\srev\\s|cash wdl rvsl|\\*rvsl\\*|rev upi[\\d\\*\\s]+).*\\..*?(?:balance|bal)\\s*(?:is|\\:) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "120095",
          "sort_UID": "120012",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "cash wdl",
                  "pos_override": "ATM Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "rev atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "visa rvsl",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": "rev upi",
                  "pos_override": "Rev-Upi"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been withdrawn on.*?(?:for your|through a) cardless cash withdrawal[\\s\\,]*(?:request|at)",
          "account_type": "bank",
          "pattern_UID": "120096",
          "sort_UID": "120096",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            }
          }
        },
        {
          "regex": "(?i)your\\s*(?:icici bank)? account x*(\\d{3,4}) .*?credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*?info[\\s\\:\\-]*(?:by)?\\s*clg\\*(.*?)(?:\\*|\\.\\s*$)",
          "account_type": "bank",
          "pattern_UID": "120097",
          "sort_UID": "120097",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)credited cashback of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to your icici.*?credit card on.*?info[\\s\\:\\-\\.]*(.*?)\\.\\s*for detail",
          "account_type": "credit_card",
          "pattern_UID": "120098",
          "sort_UID": "120098",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_rewards",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is due on (?:icici bank)?\\s*debit card emi (?:account|acct) x*(\\d{4})[\\s\\.]+.*?will be debited.*?on or before (\\d{2}\\-\\w{3}\\-\\d{2,4})",
          "account_type": "loan",
          "account_name_override": "ICICI Debit Card EMI",
          "pattern_UID": "120099",
          "sort_UID": "120099",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)your account\\s*\\**\\d*(\\d{4})\\s*has been credited with amount\\s*(?:INR|Rs)?[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})[\\s\\.]*(reference no[\\s\\-]*(\\w+))[\\s\\.*]+thanks\\,\\s*(.*)$",
          "account_type": "bank",
          "pattern_UID": "120100",
          "sort_UID": "120100",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 5
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your account\\s*\\**(\\d{4})\\s*has been credited with amount\\s*(?:INR|Rs)?[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})[\\s\\.]*(reference no[\\s\\-]*(\\w+))[\\s\\,]+lot",
          "account_type": "bank",
          "pattern_UID": "120101",
          "sort_UID": "120101",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)ac x*(\\d{3,4}) has been credited with (?:INR|Rs)?[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2}) on .*?info\\:\\w+\\*\\w+\\*reversal\\-\\d+\\*(.*?)\\s*\\.",
          "account_type": "bank",
          "pattern_UID": "120102",
          "sort_UID": "120102",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)recharge of (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for icici bank fastag.*?(veh[\\s\\.]*no[\\s\\.]*\\w+) is processed on (.*) [\\s\\.]+balance is (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "ICICI FASTag",
          "pattern_UID": "120103",
          "sort_UID": "120103",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yyyy HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "value": "YYYY"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 2
            },
            "pos": {
              "value": "FasTag Recharge",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)total amount due.*?credit card x*(\\d{4}) is (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{1,2}).*?will be debited .*?on or before (\\d{2}\\-\\w{3}\\-\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "120104",
          "sort_UID": "120104",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}) towards.*?credit card account.*?auto debit from account x*(\\d{4})",
          "account_type": "bank",
          "pattern_UID": "120105",
          "sort_UID": "120105",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)bill of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) has been presented at.*would be debited through autodebit on due date (\\d{2}\\-\\w{3}\\-\\d{2,4})",
          "account_type": "sip",
          "pattern_UID": "120106",
          "sort_UID": "120106",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "sip",
            "pan": {
              "value": "XXXX"
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)mandate of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) has been raised by (.*) on .*?is successfully executed",
          "account_type": "bank",
          "pattern_UID": "120107",
          "sort_UID": "120107",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)acct x*(\\d{3,4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on [\\d\\-]+ from ([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+)$",
          "account_type": "bank",
          "pattern_UID": "120108",
          "sort_UID": "120108",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)made a debit card purchase of (INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .*?info[\\s\\:]*\\w+\\*(.*?)\\.\\s*(?:total|your)",
          "account_type": "debit_card",
          "pattern_UID": "120109",
          "sort_UID": "120109",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "currency": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000012",
      "senders": [
        "ICICIB",
        "ICIBNK"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "18008431122"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "IDBI Bank",
      "name": "IDBI",
      "patterns": [
        {
          "regex": "(?i)A\\/c [a-z]+(\\d{4}).*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}); ATM WDL\\.\\s*(?:a\\/c)? bal.*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "180001",
          "sort_UID": "180001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)A\\/c [a-z]+(\\d{4}).*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}).*txn:.*?\\/(.*?)\\.\\s*(?:a\\/c)? bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "180002",
          "sort_UID": "180002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)A\\/c [a-z]+\\d*(\\d{4}) debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) thru (?:net|mobile bkg).*(?:a\\/c)? bal (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "180003",
          "sort_UID": "180003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)A\\/c.? [a-z]+\\d(\\d{4}) debited.*(?:INR|Rs)\\.?[,\\s]*([\\d,]*\\.?\\d{2}) .*(?:details|Det):\\s*(.*?)\\.\\s*(?:a\\/c)? bal.*?(?:INR|Rs)[\\.,\\s]*(-?[\\d,]*\\.?\\d{2})",
          "account_type": "bank",
          "pattern_UID": "180004",
          "sort_UID": "180004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)available balance in account \\w+(\\d{4}) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) as of (.*) hrs",
          "account_type": "bank",
          "pattern_UID": "180005",
          "sort_UID": "180005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)a\\/c.? .*(\\d{4}) credited.*(?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2}) .*(?:a\\/c)? bal.*(?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2}) .*(?:on|as of).*",
          "account_type": "bank",
          "pattern_UID": "180006",
          "sort_UID": "180013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no. \\d*x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on (?:[a-z]{3} |)([a-z]{3} \\d* [\\d\\:]* IST \\d{4}|\\d{2}-\\d{2}-\\d{2}) and .*((IMPS|UPI) Ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "180007",
          "sort_UID": "180007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": "imps"
                }
              ],
              "group_id": 4
            },
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MMM dd HH:mm:ss 'IST' yy"
                },
                {
                  "use_sms_time": true,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 6,
              "type_group_id": 5,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been spent .*credit card (?:ending)?\\s*[x\\d\\*\\s]*(\\d{4}) on .*? at (.*?)(?:\\.|subjected to.*)[\\s\\.]*avl bal (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "180008",
          "sort_UID": "180008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)statement for credit card \\d*\\**(\\d{4}) total due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) minimum due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) payment due date: (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "180009",
          "sort_UID": "180009",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)A\\/c [a-z]+\\d(\\d{4}) debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) thru (net|upi).*(?:a\\/c)? bal (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "180010",
          "sort_UID": "180010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": "net"
                }
              ],
              "group_id": 3
            },
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*\\d*(\\d{4}) is credited for (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*for reversal of transaction \\((upi ref no.? (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "180011",
          "sort_UID": "180011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c.? .*(\\d{4}) credited.*(?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2}) (?:det|twds)[\\s\\:]*(.*)\\.\\s*(?:a\\/c)? bal.*(?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2}) .*(?:on|as of).*",
          "account_type": "bank",
          "pattern_UID": "180012",
          "sort_UID": "180012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c.? .*(\\d{4}) credited.*(?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2}) (?:det|twds)[\\s\\:]*(.*?(?:[\\s\\:]rvsl[\\/\\-]|refund|[\\:\\-]rev[\\\\\\s\\_\\/\\-]|[\\s\\-\\:](?:reversal|reveresed|revresal|reversed)\\s*|\\:neft rev\\s|amt revrsd).*)\\.\\s*(?:a\\/c)? bal.*(?:INR|Rs)[\\.:,\\s]*(-?[\\d,]+\\.?\\d{0,2}) .*(?:on|as of).*",
          "account_type": "bank",
          "pattern_UID": "180013",
          "sort_UID": "180006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\**\\d*(\\d{4}) is credited .*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*\\(((imps|upi) ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "180014",
          "sort_UID": "180014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)tran[\\s\\.]* of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?credited .*?(?:your|ur) .*?\\d*x*\\d*(\\d{4})",
          "account_type": "bank",
          "pattern_UID": "180015",
          "sort_UID": "180015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)received payment.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*your.*? credit card .*?\\d*x*\\d*(\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "180016",
          "sort_UID": "180016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)amount of (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) towards.*?unsuccessful atm transaction has been reversed.*?a\\/c \\w+(\\d{4})\\.",
          "account_type": "debit_card",
          "pattern_UID": "180017",
          "sort_UID": "180017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "value": "ATM Reversal",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        }
      ],
      "sender_UID": "90000018",
      "senders": [
        "IDBIBK"
      ]
    },
    {
      "full_name": "IRCTC",
      "name": "IRCTC",
      "patterns": [
        {
          "regex": "(?i)PNR\\s*:\\s*(\\d*)[,\uff0c\\s]*(?:TRAIN|TRN)\\s*:\\s*(\\d*)[,\uff0c\\s]*DOJ\\s*:\\s*(\\d{2}-\\d{2}-\\d{2,4})\\s*[,\uff0c]+.*?[,\uff0c]+[\\s ]*(.*?)[,\uff0c\\s]+(?:Dep|dp|TIME)\\s*:\\s*(N.A.|(?:\\d{2}(?::\\d{2}){1,2}))\\s*?[,\uff0c][\\s\\S]*?\\s.*?[,\uff0c][\\s\\S]*?(.*)[,\uff0c][\\s\\S]*?(?:Fare|FARE)\\s*:(\\d*).*(?:SC|GST)\\s*:([\\d,]+\\.?\\d{0,2})",
          "account_type": "generic",
          "pattern_UID": "420001",
          "sort_UID": "420001",
          "sms_type": "event",
          "data_fields": {
            "event_type": "train",
            "amount": {
              "create_txn": false,
              "group_ids": [
                7,
                8
              ]
            },
            "name": {
              "value": "Indian Railway"
            },
            "pnr": {
              "group_id": 1
            },
            "event_info": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "group_ids": [
                3,
                5
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy 'N.A.'"
                }
              ]
            },
            "time": {
              "group_id": 5
            },
            "contact": {
              "group_id": 6
            },
            "event_location": {
              "group_id": 4
            },
            "event_reminder_span": {
              "value": 60
            }
          }
        },
        {
          "regex": "(?i).*pnr[,\\s ]*(\\d+).*amt[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "generic",
          "pattern_UID": "420003",
          "sort_UID": "420003",
          "sms_type": "event",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "event_type": "train",
            "chaining_rule": {
              "parent_nomatch": {
                "child_override": [
                  {
                    "deleted": true
                  }
                ]
              },
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "event_location",
                    "child_field": "event_location"
                  },
                  {
                    "parent_field": "event_info",
                    "child_field": "event_info"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Indian Railway"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pnr",
                  "child_field": {
                    "field": "pnr"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "event_info": {
              "value": "Cancelled"
            },
            "name": {
              "value": "Indian Railway"
            },
            "pnr": {
              "group_id": 1
            },
            "amount": {
              "create_txn": false,
              "group_id": 2,
              "txn_direction": "incoming"
            }
          }
        },
        {
          "regex": "(?i)your.*pnr[,\\s\n]*(\\d+)",
          "account_type": "generic",
          "pattern_UID": "420004",
          "sort_UID": "420004",
          "sms_type": "event",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "event_type": "train",
            "chaining_rule": {
              "parent_nomatch": {
                "child_override": [
                  {
                    "deleted": true
                  }
                ]
              },
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "event_location",
                    "child_field": "event_location"
                  },
                  {
                    "parent_field": "event_info",
                    "child_field": "event_info"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Indian Railway"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pnr",
                  "child_field": {
                    "field": "pnr"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "event_info": {
              "value": "Cancelled"
            },
            "name": {
              "value": "Indian Railway"
            },
            "pnr": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)Flt bkg with irctc. PNR-(\\w+)\\s*,Flt-(.*?)\\s*,Date-(.*?)\\s*,From-(\\w+)\\s*,\\s*To-(\\w+)\\s*,\\s*Name-.*?,\\s*TID-(\\w+),\\s*Fare-(\\d+\\.?\\d{0,2})",
          "account_type": "generic",
          "pattern_UID": "420005",
          "sort_UID": "420005",
          "sms_type": "event",
          "data_fields": {
            "event_type": "flight",
            "event_location": {
              "group_ids": [
                4,
                5
              ]
            },
            "name": {
              "value": "IRCTC Flight booking"
            },
            "pnr": {
              "group_id": 1
            },
            "event_info": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "EEE MMM dd HH:mm:ss 'IST' yyyy"
                }
              ]
            },
            "contact": {
              "prefix": "TID:",
              "group_id": 6
            },
            "amount": {
              "create_txn": false,
              "group_id": 7
            },
            "event_reminder_span": {
              "value": 90
            }
          }
        },
        {
          "regex": "(?i)PNR\\s*:\\s*(\\d*)[,\uff0c\\s]*TRAIN\\s*:\\s*(\\d*)[,\uff0c\\s]*DOJ\\s*:\\s*(\\d{2}-\\d{2}-\\d{2,4})\\s*[,\uff0c]+.*?[,\uff0c]+[\\s ]*(.*?)[,\uff0c\\s]+(?:Dep|TIME)\\s*:\\s*(N.A.|(?:\\d{2}(?::\\d{2}){1,2}))[\\s\\,]*[,\uff0c][\\s\\S]*?\\s.*?[\\s\\S]*?(.*)[,\uff0c][\\s\\S]*?(?:Fare|FARE)\\s*:(\\d*).*(?:SC|GST|fee)\\s*:([\\d,]+\\.?\\d{0,2})",
          "account_type": "generic",
          "pattern_UID": "420006",
          "sort_UID": "420006",
          "sms_type": "event",
          "data_fields": {
            "event_type": "train",
            "amount": {
              "create_txn": false,
              "group_ids": [
                7,
                8
              ]
            },
            "name": {
              "value": "Indian Railway"
            },
            "pnr": {
              "group_id": 1
            },
            "event_info": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "group_ids": [
                3,
                5
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy 'N.A.'"
                }
              ]
            },
            "time": {
              "group_id": 5
            },
            "contact": {
              "group_id": 6
            },
            "event_location": {
              "group_id": 4
            },
            "event_reminder_span": {
              "value": 60
            }
          }
        },
        {
          "regex": "(?i)PNR\\s*:\\s*(\\d*)[,\uff0c\\s]*TRN\\s*:\\s*(\\d*)[,\uff0c\\s]*DOJ\\s*:\\s*(\\d{2}-\\d{2}-\\d{2,4})[,\uff0c\\s]*.*?[,\uff0c][\\s ]*(.*?)[,\uff0c][\\s\\S]*?(?:Dp|TIME|dep)\\s*:\\s*(N.A.|(?:\\d{2}(?::\\d{2}){1,2}))[,\uff0c][\\s ]*(.*?)[,\uff0c][\\s ]*[,\uff0c\\s]*(?:Fare|FARE)\\s*:\\s*(\\d*)",
          "account_type": "generic",
          "pattern_UID": "420007",
          "sort_UID": "420007",
          "sms_type": "event",
          "data_fields": {
            "event_type": "train",
            "amount": {
              "create_txn": false,
              "group_id": 7
            },
            "name": {
              "value": "Indian Railway"
            },
            "pnr": {
              "group_id": 1
            },
            "event_info": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "group_ids": [
                3,
                5
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy 'N.A.'"
                }
              ]
            },
            "time": {
              "group_id": 5
            },
            "contact": {
              "group_id": 6
            },
            "event_location": {
              "group_id": 4
            },
            "event_reminder_span": {
              "value": 60
            }
          }
        },
        {
          "regex": "(?i)PNR\\s*-\\s*(\\d*)[,\uff0c\\s]*TRN\\s*(?::|-)\\s*(\\d*)[,\uff0c\\s]*Dt\\s*:\\s*(\\d{2}-\\d{2}-\\d{2,4})[,\uff0c\\s]*Frm[\\s]*(.*)[,\uff0c\\s]*Cls(?::|-)(?:.{2})\\s*([\\s\\S]*)(?:chart prepared|final status)",
          "account_type": "generic",
          "pattern_UID": "420008",
          "sort_UID": "420008",
          "sms_type": "event",
          "data_fields": {
            "event_type": "train",
            "name": {
              "value": "Indian Railway"
            },
            "pnr": {
              "group_id": 1
            },
            "event_info": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "contact": {
              "group_id": 5
            },
            "event_location": {
              "group_id": 4
            },
            "event_reminder_span": {
              "value": 60
            }
          }
        }
      ],
      "sender_UID": "90000042",
      "senders": [
        "IRCTCI",
        "IRCMSI",
        "IRSMSA"
      ]
    },
    {
      "full_name": "Idea",
      "name": "Idea",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{1,2}).*due (?:date|on|has) (\\d{2}[\\/\\.]*\\d{2}[\\/\\.]*\\d{4})\\s*(?:\\.|to|has).*?(?:avoid|sent|pay)",
          "account_type": "phone",
          "pattern_UID": "70001",
          "sort_UID": "70001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:bill dated[\\s\\S]*total bill due|bill of)[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\/\\-\\s\\,]*[\\s\\S]*(?:due date|is due) (\\d{2}\\-\\w{3}\\-\\d{2,4}|today)[\\s\\.]*(?:to|please) pay",
          "account_type": "phone",
          "pattern_UID": "70003",
          "sort_UID": "70003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "today"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "9000007",
      "senders": [
        "IDEA",
        "!dea"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "9289592895"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Indian Bank",
      "name": "Indian Bnk",
      "patterns": [
        {
          "regex": "(?i)withdrawal of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*(\\d{4}) drawn .*(atm|pos) .*cl bal: [\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "400001",
          "sort_UID": "400001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm"
                },
                {
                  "txn_type": "debit_card",
                  "value": "pos",
                  "pos_override": "Debit Card Purchase"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(\\d{4}) is debited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:total)?\\s?bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "400002",
          "sort_UID": "400002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(\\d{4})\\s?is debited (?:by|for) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\s?for) (.*?)(?:-|\\s).*(ref: (\\w+))",
          "account_type": "bank",
          "pattern_UID": "400003",
          "sort_UID": "400003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)neft.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) to (.*) will.*(ref no : (\\w+))",
          "account_type": "bank",
          "pattern_UID": "400004",
          "sort_UID": "400004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_neft": true
            }
          }
        },
        {
          "regex": "(?i)x+\\d*(\\d{4}).*debited.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?((imps ref|ref) no. (\\w+))",
          "account_type": "bank",
          "pattern_UID": "400005",
          "sort_UID": "400005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "imps ref",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(chqno: \\d+) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*debited.*(\\d{4}) on",
          "account_type": "bank",
          "pattern_UID": "400006",
          "sort_UID": "400006",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "note": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(\\d{4})\\s?is debited (?:by|for) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) to .*(ref: (\\w+))",
          "account_type": "bank",
          "pattern_UID": "400007",
          "sort_UID": "400007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)balance\\s*x*(\\d{4}) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "400008",
          "sort_UID": "400008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) is credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .* clr bal : (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "400009",
          "sort_UID": "400009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) credited to acc x*\\d*(\\d{4}) .*cl bal:[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "400010",
          "sort_UID": "400010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) was spent on ([\\da-z\\-]* [\\d\\:]*) using (?:ib|Indian Bank) credit card ending[\\s\\S](\\d{4}) in .* at (.*)\\..*current o\\/s: ([\\d,\\-]*\\.?\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "400012",
          "sort_UID": "400012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "outstanding_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)card \\d+x+(\\d{4}) amt due (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{2}) due dt ([\\da-z\\-]*) min amt (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "400013",
          "sort_UID": "400013",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) withdrawn .*(atm) .*\\, (.*) on.*from ac:x*\\d*(\\d{4}). bal:[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "400014",
          "sort_UID": "400014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm"
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) spent on (pos\\/ecom) .* at (.*) from ac:x*\\d*(\\d{4}). bal:[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "400015",
          "sort_UID": "400015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "value": "pos"
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c no\\. x*(\\d{3,4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*(upi ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "400016",
          "sort_UID": "400016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(chqno\\: \\d+) paid to [\\:\\s]*(.*?) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?debited from a\\/c[\\s\\.]*x*\\d*(\\d{4}) on",
          "account_type": "bank",
          "pattern_UID": "400017",
          "sort_UID": "400017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 4
            },
            "note": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)payment received for amount of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for ib credit cardno \\d*\\**x*(\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "400018",
          "sort_UID": "400018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c.*? x*\\**\\d*?(\\d{3,4}) is credited.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?reversal of transaction \\((upi ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "400019",
          "sort_UID": "400019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c.*? x*\\**\\d*?(\\d{3,4}) is credited.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?(?:by|from|[\\d\\/]*).*?\\(((imps|upi) ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "400020",
          "sort_UID": "400020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)X+(\\d{4}).*debited.*?(ATM Card|ATM).*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*bal : (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "400021",
          "sort_UID": "400021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "value": "card",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "debit_atm",
                  "value": ""
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)X+(\\d{4}).*debited.*?(ATM Card|ATM).*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*bal : (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*\\-\\s*ealb",
          "account_type": "debit_card",
          "pattern_UID": "360001",
          "sort_UID": "360001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "value": "card",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "debit_atm",
                  "value": ""
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)X+(\\d{4}).*debited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*bal.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?\\-\\s*ealb",
          "account_type": "bank",
          "pattern_UID": "360003",
          "sort_UID": "360003",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)neft.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) to .* will.*?to realisation.*?(ref no : (\\w+))\\s*\\--",
          "account_type": "bank",
          "pattern_UID": "360004",
          "sort_UID": "360004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "note": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 3,
              "is_neft": true
            }
          }
        },
        {
          "regex": "(?i)a\\/?c\\/? (?:no.)?\\s*[-\\w]+(\\d{4}).*debited.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) through (?:Internet Banking fund transfer|aeps txn|Aadhaar Purchase txn).*(?:\\.|on)[\\s\\-]+([\\d\\/]+\\s*[\\d\\:]*)",
          "account_type": "bank",
          "pattern_UID": "360005",
          "sort_UID": "360005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)account x+(\\d+).*debited.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for (.+) through Internet Banking\\. -- (\\d{2}\\/\\d{2}\\/\\d{2} \\d{2}:\\d{2})",
          "account_type": "debit_card",
          "pattern_UID": "360006",
          "sort_UID": "360006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) is credited .*by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .* clr bal : (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*\\-\\s*(?:ealb|alb)",
          "account_type": "bank",
          "pattern_UID": "360007",
          "sort_UID": "360007",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)account no\\s*:\\s*x*(\\d{4})\\s*balance\\s*:\\s*(?:INR|Rs)[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2})\\(",
          "account_type": "bank",
          "pattern_UID": "360008",
          "sort_UID": "360008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no. x+(\\d{4}) is debited (?:by|for) (?:INR|Rs)[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2}).* and credited to (.*?)\\s*\\(UPI Ref no .*\\)",
          "account_type": "bank",
          "pattern_UID": "360009",
          "sort_UID": "360009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "UPI Funds Transfer",
                  "txn_type": "upi",
                  "value": "xxxxx",
                  "set_no_pos": true
                },
                {
                  "txn_type": "upi",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\**\\d*\\s*(\\d{4}) is credited .*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*? reversal of unsucces*ful.*?\\(((imps|upi) ref no[\\s\\.]*(\\d*))",
          "account_type": "bank",
          "pattern_UID": "360010",
          "sort_UID": "360010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "upi"
                },
                {
                  "txn_type": "credit",
                  "value": "imps",
                  "pos_override": "Reversal",
                  "set_no_pos": true
                }
              ],
              "group_id": 4
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited by (?:INR|Rs)?[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) on.*?sent by .*\\-(.*?)\\((upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "360011",
          "sort_UID": "360011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c [\\s\\.]*x*(\\d{4}) is credited by (?:INR|Rs)?[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) on.*\\((imps ref no (\\d+)).*?\\-\\s*ealb",
          "account_type": "bank",
          "pattern_UID": "360012",
          "sort_UID": "360012",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)lpg subsidy of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been credited in your account no[\\s\\.]*x*(\\d{4})\\..*?\\-\\s*ealb",
          "account_type": "bank",
          "pattern_UID": "360013",
          "sort_UID": "360013",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "LPG Subsidy",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000040",
      "senders": [
        "INDBNK",
        "INDBCC",
        "INBUPI"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "18002741000"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "IndusInd Bank",
      "name": "Indus",
      "patterns": [
        {
          "regex": "(?i)\\**\\d*(\\d{4}) has been debited.*(?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{1,2}) towards.*(Debit Card Purchase|ATM|Internet Transfer|NEFT|ECS|Cheque|ach\\s*debit).*available balance is (?:INR|Rs)?[\\.\\s]*([\\d,]*\\.?\\d{1,2})",
          "account_type": "bank",
          "pattern_UID": "140001",
          "sort_UID": "140001",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "value": "debit card purchase"
                },
                {
                  "txn_type": "net_banking",
                  "value": "internet transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": "neft"
                },
                {
                  "txn_type": "ecs",
                  "value": "ecs"
                },
                {
                  "txn_type": "ecs",
                  "value": "ach"
                },
                {
                  "txn_type": "cheque",
                  "value": "cheque"
                },
                {
                  "txn_type": "default",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)indusind bank credit card\\s*(?:ending|no)?\\s*X*(\\d{4}).*(INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*) at (.*) is approved",
          "account_type": "credit_card",
          "pattern_UID": "140002",
          "sort_UID": "140022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy hh:mm:ss a"
                }
              ]
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)X+(\\d{4}).*due (.*) will.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) and (?:|minimum amount due is )(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "140003",
          "sort_UID": "140003",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            },
            "amount": {
              "group_id": 3
            },
            "min_due_amount": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)\\**\\d*(\\d{4}) .*debited.* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* (?:bal|balance) is (?:INR|Rs)?[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "140004",
          "sort_UID": "140004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "default",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)\\**\\d*(\\d{4}) .*credited.* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards (.*?)\\.\\s*(?:your|the|availa).*bal.*?is (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "140005",
          "sort_UID": "140018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* credited .*\\**\\d*(\\d{4}).* balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "140006",
          "sort_UID": "140032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)bal (?:of|is) (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .* a\\/c \\d*\\**\\d*(\\d{4})",
          "account_type": "bank",
          "pattern_UID": "140007",
          "sort_UID": "140007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)\\d*\\**\\d*?(\\d{3,4}) (?:has .* balance of|bal is|has avl bal of|(?:bal)*\\s*on [\\s\\/\\:\\d]+ \\w+ is) (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*(?:as on|on|\\.\\s*earn|\\.\\s*combined)\\s",
          "account_type": "bank",
          "pattern_UID": "140008",
          "sort_UID": "140008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i) x*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* and .*(IMPS Ref no\\s*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "140009",
          "sort_UID": "140009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)last statement .*credit card ending \\# x*(\\d{4})[\\s\\,]*total.*amounts due are (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) \\& (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) respect.*due date (?:ie|is|i\\.e\\.) (\\d{2}\\s*[a-z]{3}\\s*\\d{2,4}|immediate)",
          "account_type": "credit_card",
          "pattern_UID": "140010",
          "sort_UID": "140010",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMMyy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c no. \\\"x*(\\d{4})\\\" is debited (?:for|with) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).* (?:to|by) VPA \\\"(.*)\\\" \\((UPI Ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "140011",
          "sort_UID": "140011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)Total Amount Due.*IndusInd Bank Credit Card x*(\\d{4}) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) and minimum amount due is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}), payable by (\\d{2}\\-[a-z]{3}\\-\\d{2}|immediate|\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "credit_card",
          "pattern_UID": "140013",
          "sort_UID": "140013",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i) bank a\\/c no\\.?\\d*\\**\\d*(\\d{4}) has been Dr for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards.*NEFT transfer with (UTR (\\w*))\\. avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "140014",
          "sort_UID": "140014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_neft": true
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)\\**\\d*(\\d{4}) .*credited.* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards\\s*(.*(?:reversed| rvsl of|reversal|refund|\\srvsl visa|\\srevdebit card\\s|\\spayu rev\\/|upi ret adj revd|cash wd rev\\s|\\/reve).*?)\\.\\s*(?:your|the|available).*balance is (?:INR|Rs)?[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "140015",
          "sort_UID": "140015",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "cash wd rev",
                  "pos_override": "ATM Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "visa pos",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "debit card",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": "upi/",
                  "pos_override": "Rev-Upi"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)\\**\\d*(\\d{4}) .*credited.* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*(?:neft|rtgs|trf|towards (?:n|r)\\/).*(?:\\/|from|frm\\/)\\s*(.*?)(?:\\.|with).*?(?:balance|bal) is (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "140016",
          "sort_UID": "140016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)\\**\\d*(\\d{4}) .*credited.* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*(upi\\/.*?\\/.*?\\/.*?\\/.*?\\/(.*?)\\/.*?)\\..*?balance is (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "140017",
          "sort_UID": "140017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).*? sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)\\**\\d*(\\d{4}) .*credited.* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards refund (?:from|frm) (.*?)\\s*(?:on \\d+|\\.\\s*your|\\.\\s*the com)\\s*.*?bal.*?is (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "140018",
          "sort_UID": "140005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)salary.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* credited .*\\**\\d*(\\d{4}).* (?:balance is|avl bal) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "140019",
          "sort_UID": "140019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\**\\d*(\\d{4}) is credited .*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?(?:by|from).*?\\(((imps|upi) ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "140020",
          "sort_UID": "140020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) towards your .*?credit card \\d*x*\\d*(\\d{4}).*?credited to your credit card",
          "account_type": "credit_card",
          "pattern_UID": "140021",
          "sort_UID": "140021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)transaction.*?credit card ending (\\d{4}).*(INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*) at (.*) is approved\\.\\s*available limit[\\s\\:]*(?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{1,2})",
          "account_type": "credit_card",
          "pattern_UID": "140022",
          "sort_UID": "140002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy hh:mm:ss a"
                }
              ]
            },
            "pos": {
              "group_id": 5
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.\\s*\\\"x*(\\d{4})\\\" is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) by VPA \\\"(.*)\\\" \\((UPI Ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "140023",
          "sort_UID": "140023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{1,2}) has been debited.*a\\/c\\s*(?:no)?[\\.\\s\\d\\*]*(\\d{4})\\s*(?:towards IndusMobile neft txn \\w+|towards standing instr \\w+|\\.)[\\s\\.]*avl bal (?:is)?\\s*(?:INR|Rs)?[\\.\\s]*([\\d,\\-]*\\.?\\d{1,2})",
          "account_type": "bank",
          "pattern_UID": "140024",
          "sort_UID": "140024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{1,2}) has been debited.*a\\/c\\s*(?:no)?[\\.\\s\\d\\*]*(\\d{4}) .*?towards[\\s\\']*(.*?)\\'?(?:\\.\\s*avl|[\\s\\.]+ref|\\son\\s).*? bal (?:is)?\\s*(?:INR|Rs)[\\.\\s]*([\\d,\\-]*\\.?\\d{1,2})",
          "account_type": "bank",
          "pattern_UID": "140025",
          "sort_UID": "140025",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "atm cash withdrawal",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "value": "debit card purchase"
                },
                {
                  "txn_type": "net_banking",
                  "value": "internet transfer"
                },
                {
                  "txn_type": "cheque",
                  "value": "cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{1,2}) has been credited.*?a\\/c [\\d\\*]*(\\d{4}) towards (?:neft|rtgs credit) from (.*?) \\w+\\.\\s*avl bal (?:INR|Rs)[\\.\\s]*([\\d,\\-]*\\.?\\d{1,2})",
          "account_type": "bank",
          "pattern_UID": "140026",
          "sort_UID": "140026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{1,2}) has been credited.*?a\\/c\\s*(?:no)? [\\d\\*]*(\\d{4}) towards (reversal of atm cash wdl|IndusMobile refund|Debit Card Purchase Reversal|ATM Cash Withdrawal Reversal).*?avl bal (?:is)?\\s*(?:INR|Rs)[\\.\\s]*([\\d,\\-]*\\.?\\d{1,2})",
          "account_type": "bank",
          "pattern_UID": "140027",
          "sort_UID": "140027",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "acc_type_override": "debit_card",
                  "value": "atm cash",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "acc_type_override": "debit_card",
                  "value": "debit card",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{1,2}) has been credited.*?a\\/c (?:no)?\\s*[\\d\\*]*(\\d{4})\\s*(?:towards ach credit|towards .*?cash deposit)?\\.\\s*avl bal (?:INR|Rs)[\\.\\s]*([\\d,\\-]*\\.?\\d{1,2})",
          "account_type": "bank",
          "pattern_UID": "140028",
          "sort_UID": "140028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)txn.*?credit card ending (\\d{4}) for (INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) at (.*) has been reversed",
          "account_type": "credit_card",
          "pattern_UID": "140029",
          "sort_UID": "140029",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) towards your .*?credit card\\..*credited to your credit card",
          "account_type": "credit_card",
          "pattern_UID": "140030",
          "sort_UID": "140030",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is debited from fastag.*?for (vrn no \\w+) as toll charges at (.*?) on .*?avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "pattern_UID": "140031",
          "sort_UID": "140031",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "FASTag"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been credited .*?FASTag Wallet.* (?:balance|bal) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "pattern_UID": "140032",
          "sort_UID": "140006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "FASTag"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "FasTag Recharge",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been debited.*?a\\/c x*(\\d{4}) on .*?credited to a\\/c.*?ref (\\d+)",
          "account_type": "bank",
          "pattern_UID": "140033",
          "sort_UID": "140033",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)account [\\dx]*(\\d{4}) has been credited for (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards (?:n|r)\\/.*?\\/.*?\\/(.*?)\\.\\s*call",
          "account_type": "bank",
          "pattern_UID": "140034",
          "sort_UID": "140034",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)account [\\dx]*(\\d{4}) has been debited for (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards (?:n|r)\\/.*?\\/.*?\\/(.*?)\\.\\s*call",
          "account_type": "bank",
          "pattern_UID": "140035",
          "sort_UID": "140035",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been credited to BENFCY towards IndusInd NEFT TXN (\\w+)",
          "account_type": "bank",
          "pattern_UID": "140036",
          "sort_UID": "140036",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 2,
              "is_neft": true
            }
          }
        },
        {
          "regex": "(?i)net interest (?:INR|Rs)*[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) paid on your indusind deposit .*?call",
          "account_type": "bank",
          "pattern_UID": "140037",
          "sort_UID": "140037",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_interest",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{1,2}) has been credited to your.*?a\\/c [\\d\\*]*(\\d{4}) towards (interest credit) for",
          "account_type": "bank",
          "pattern_UID": "140038",
          "sort_UID": "140038",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_interest",
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)successfully received (?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{1,2}) from \\\"([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+)\\\" \\(upi ref no (\\d+)\\) credited to your Bank",
          "account_type": "bank",
          "pattern_UID": "140039",
          "sort_UID": "140039",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 3,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c has been debited towards (.*) for (?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{1,2}) on .*?umn",
          "account_type": "bank",
          "pattern_UID": "140040",
          "sort_UID": "140040",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 2
            }
          }
        }
      ],
      "sender_UID": "90000014",
      "senders": [
        "INDUSB",
        "040801"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "+919971056767",
                  "5676788"
                ],
                "format": "BAL"
              },
              {
                "type": "voice",
                "numbers": [
                  "18002740110"
                ]
              }
            ]
          },
          {
            "account_type": "credit_card",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "+919971056767",
                  "5676788"
                ],
                "format": "CCAVBL XXXX"
              }
            ]
          }
        ]
      },
      "full_name": "Kotak Mahindra Bank",
      "name": "Kotak",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*debit card.*?x+(\\d{4}).*at (.*?)\\.\\s?combined.*balance.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "150001",
          "sort_UID": "150002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)Cash withdrawal of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) made on .*X+(\\d{4}) on (.*) at (.*)\\.(?:Combined balance|avl bal) .*is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2})",
          "account_type": "debit_card",
          "pattern_UID": "150002",
          "sort_UID": "150001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy'/'HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)Transaction.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*credit card.*x+(\\d{4}).*(?:towards|at) (.*?)[\\s\\.]available credit limit is [\\.:,\\s]*(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "150003",
          "sort_UID": "150003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}).*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*(?:min amt|minimum due) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*(?:due by|payment due|due date) (\\d{2}-[a-z]{3}-\\d{2,4})",
          "account_type": "credit_card",
          "pattern_UID": "150004",
          "sort_UID": "150004",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}).*due date (\\d{2}-[a-z]{3}-\\d{2,4}).*min amt. (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*Total due (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "150005",
          "sort_UID": "150005",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 3
            },
            "amount": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*for (.*) received .*kotak bank account x+(\\d{4}) on",
          "account_type": "bank",
          "pattern_UID": "150007",
          "sort_UID": "150007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*debited.*a\\/c\\.?.*?(\\d{4}) (?:towards)?\\s?(.*)via.*(ref\\.? no\\.? :?\\s?(\\w+))",
          "account_type": "bank",
          "pattern_UID": "150008",
          "sort_UID": "150052",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*debited.*x+(\\d{4}).*towards( ecsidr-| ft| cash withdrawal| neft| rtgs|)?(?: to)?\\s?(.*)\\.combined.*balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150009",
          "sort_UID": "150009",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "default",
                  "value": "withdrawal"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*debited.*x+(\\d{4}).*(cheque number \\d+).*balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150010",
          "sort_UID": "150010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}).*debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*imps (ref no\\.? (\\w+))",
          "account_type": "bank",
          "pattern_UID": "150011",
          "sort_UID": "150011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)(?:available|avbl)\\s*(?:balance|bal)\\s*(?:for|in)\\s*(?:a\\/c|account)[\\.:,\\s]x*d*(\\d{4})(?: as on [\\d\\-]*)* is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150012",
          "sort_UID": "150050",
          "sms_type": "transaction",
          "reparse": true,
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(standing instruction) (?:for|of) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for beneficiary (.+) from.*x+(\\d{4}).*successfully",
          "account_type": "bank",
          "pattern_UID": "150013",
          "sort_UID": "150013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i).*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from\\s*(?:your Kotak Bank)? a\\/?c \\s*x*(\\d{4}).*(?:processed|done).*(ref(?:\\sno)?[\\s\\.\\:]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "150014",
          "sort_UID": "150014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?debited.*?credit card.*?x+(\\d{4}).*?(?:towards|for)\\s*(.*)(?:for|via)?.*on (\\d{2}-[a-z]{3}-\\d{4}).*",
          "account_type": "credit_card",
          "pattern_UID": "150018",
          "sort_UID": "150018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:avbl|avl) bal for a\\/c x*(\\d{4}) .*combined (?:avbl|avl) bal is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150019",
          "sort_UID": "150019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).* credited.* x+(\\d{4}).*combined (?:avl|available) bal.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150020",
          "sort_UID": "150043",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no. x*\\d+(\\d{4}) is debited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on .*address (.*) is credited",
          "account_type": "bank",
          "pattern_UID": "150022",
          "sort_UID": "150022",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:request|neft|rtgs).*(?:for|of) (?:INR|Rs)[\\s.,]*([\\d,]*\\.?\\d{0,2})[\\s\\S]*from a\\/?c x*(\\d{4}) to (.*?)(?:\\(.*|\\s)(?:has been received|done)",
          "account_type": "bank",
          "pattern_UID": "150023",
          "sort_UID": "150023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to (.*) using (.*)\\. your",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Paymint",
          "pattern_UID": "150024",
          "sort_UID": "150024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)autopay of your (.*) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been successfully",
          "account_type": "bill_pay",
          "pattern_UID": "150025",
          "sort_UID": "150025",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "bill_pay",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Bill payments"
            },
            "pos": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(standing instruction) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from x+(\\d{4}) \\s*to \\s*beneficiary.*successfully",
          "account_type": "bank",
          "pattern_UID": "150026",
          "sort_UID": "150026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)debit card.*?x+(\\d{4}) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) at (.*) on (.*?)\\.\\s*(?:avl|available) bal.*is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "150027",
          "sort_UID": "150027",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*\\d*(\\d{4}) is credited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*reversal of debit transaction \\((upi ref no.? (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "150028",
          "sort_UID": "150028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)EMI payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on ur kotak (.*loan) ac.? no.? (\\d*) is due on (\\d{2}\\-[a-z]{3}\\-\\d{2})",
          "account_type": "loan",
          "account_name_override": "Kotak Loan",
          "pattern_UID": "150029",
          "sort_UID": "150029",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*debited from your a\\/c no.? x*\\d*(\\d{4}) on .*towards upi id (.*?)(?:\\.?\\s*to report|\\@{5}|\\.\\s*raise dis)",
          "account_type": "bank",
          "pattern_UID": "150030",
          "sort_UID": "150030",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)total outstanding on card no x*\\**\\d*(\\d{4})\\s*on .*?is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\..*avbl cr limit is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "150031",
          "sort_UID": "150031",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "outstanding_balance": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)fund trf of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*[\\s\\S]from ac x+(\\d{4}) to (.*)[\\s\\S]done on (.*?) \\(.*?(ref no. ([\\w-]+))",
          "account_type": "bank",
          "pattern_UID": "150032",
          "sort_UID": "150032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "net_banking",
                  "value": "undefined",
                  "pos_override": "Net Banking",
                  "set_no_pos": true
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM yyyy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 5
            },
            "network_reference_id": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)EMI payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) (?:for|on).*(?:a\\/c no\\.|ac\\. no\\.) [a-zA-Z]*(\\d+) is due on (\\d{2}\\-\\w{3}-\\d{2,4})",
          "account_type": "loan",
          "account_name_override": "Kotak Loan",
          "pattern_UID": "150033",
          "sort_UID": "150033",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)your kotak.*finance a\\/c (\\d+) emi payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) is due on (\\d{2}\\-\\w{3}\\-\\d{2,4})",
          "account_type": "loan",
          "account_name_override": "Kotak Finance",
          "pattern_UID": "150034",
          "sort_UID": "150034",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)cc no\\:x*(\\d{4}).*tot outstd.*?(?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?total min amt due\\:(?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*due date\\:(\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "150035",
          "sort_UID": "150035",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yyyy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)thank you for travelling with (.*?) via.*?(trip id[\\:\\s]*.*?) final trip.*?account\\/card ending x*(\\d{4})[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150036",
          "sort_UID": "150036",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 2
            },
            "amount": {
              "group_id": 4
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)received a payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for (.*?) from.*credit card\\/ bank a\\/c x+(\\d{4}) on (.*?)\\.",
          "account_type": "bank",
          "pattern_UID": "150037",
          "sort_UID": "150037",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)received a payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for (.*?) from.*credit card\\/ bank a\\/c \\d+x+(\\d{4}) on (.*?)\\.",
          "account_type": "credit_card",
          "pattern_UID": "150038",
          "sort_UID": "150038",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?debited from your .*?account x*(\\d{4}) for (.*?) via.*?(ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "150039",
          "sort_UID": "150039",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).* credited.* x+(\\d{4}).*(?:on account of|towards).*?(reversal of atm|reversal|refund to|visa\\-refund|rev of paym|[\\s\\-]refund[\\/\\s]).*(?:avl|available|\\d+) bal.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150040",
          "sort_UID": "150040",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "visa",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)salary of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).* credited.* x+(\\d{4}).*combined (?:avl|available) bal.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150041",
          "sort_UID": "150041",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).* credited.* x+(\\d{4}).*(?:towards|account of) (.*?)\\..*?combined (?:avl|available) bal.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150042",
          "sort_UID": "150042",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).* credited.* x+(\\d{4}).*on account of (?:cash deposit by|transfer from|fund trf\\s*from)(.*?)\\s*(?:combined| at .*?) (?:avl|available) bal.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150043",
          "sort_UID": "150020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "self",
                  "pos_override": "Credit"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*\\d*(\\d{4}) is credited (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*? by a\\/c linked to virtual address (.*?)\\((upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "150044",
          "sort_UID": "150044",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\d*(\\d{4}) is credited .*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*linked to mobile.*?\\((imps ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "150045",
          "sort_UID": "150045",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\s.,]*([\\d,]*\\.?\\d{0,2}) neft from ac x*(\\d{4}) to (.*?) done.*?(utr\\-(\\w+))",
          "account_type": "bank",
          "pattern_UID": "150046",
          "sort_UID": "150046",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_neft": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:as payment|is paid) towards (.*?)(?:\\.\\s*it will take|\\susing Kotak Bank BillPay)",
          "account_type": "bank",
          "pattern_UID": "150047",
          "sort_UID": "150047",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            }
          }
        },
        {
          "regex": "(?i)your (?:a\\/c|account).* x*\\d*(\\d{4}) .*credited .*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from (.*?) vide (utr ref (\\w*))",
          "account_type": "bank",
          "pattern_UID": "150048",
          "sort_UID": "150048",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?credited to your (?:a\\/c|account|acct) x*\\d*(\\d{4}) .*?salary",
          "account_type": "bank",
          "pattern_UID": "150049",
          "sort_UID": "150049",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*credited to your (?:a\\/c|account|acct) *x*\\d*(\\d{4}) .*?transfer from (.*?)\\s*\\.",
          "account_type": "bank",
          "pattern_UID": "150050",
          "sort_UID": "150050",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*credited to your (?:a\\/c|account|acct) *x*\\d*(\\d{4}).*?(?:on account of|towards) (?:nach\\-\\w+\\-)*(.*)(?:\\.\\s*$|kotak bank)",
          "account_type": "bank",
          "pattern_UID": "150051",
          "sort_UID": "150051",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been debited from your a\\/c x*(\\d{4}) via kotak pg.*?vide ref no[\\s\\.]*(\\d+)",
          "account_type": "bank",
          "pattern_UID": "150052",
          "sort_UID": "150008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\s*credited to a\\/c\\s*x*(\\d{4})\\s*via (neft|rtgs) from\\s*(.*?)[\\s\\-]+utr ref\\s*([\\w\\.\\-]+)\\;.*?bal[\\s\\.\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150053",
          "sort_UID": "150053",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 4
            },
            "note": {
              "group_id": 5
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 3,
              "type_rules": [
                {
                  "value": "neft",
                  "is_neft": true
                },
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been debited.*?a\\/c no[\\s\\.]*x*(\\d{4}) and a\\/c of.*?credited\\s*\\((imps ref no[\\s\\.]*(\\d+))\\).*?balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150054",
          "sort_UID": "150054",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is credited on.*?your (?:kotak bank)?\\s*a\\/c no[\\s\\.]*x*(\\d{4}) by a\\/c.*?\\((imps ref no[\\s\\.]*(\\d+))\\).*?balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150055",
          "sort_UID": "150055",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)fastag\\s*account.*?vehicle no[\\s\\.]*(\\w+) has been debited (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for (?:toll|parking) charges at (.*?) (?:on|from)?\\s*(?:\\d{1,2}[\\s\\-]\\w{3}|\\w{3}[\\s\\-\\d{1,2}]).*?balance is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Kotak FASTag",
          "pattern_UID": "150056",
          "sort_UID": "150056",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)fastag wallet linked to vrn (\\w+) .*?successfully recharged with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\/\\-]+on",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Kotak FASTag",
          "pattern_UID": "150057",
          "sort_UID": "150057",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "FasTag Recharge",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)fastag.*?(?:topped up successfully with|been recharged with|successfully recharged with) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?balance .*?is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Kotak FASTag",
          "pattern_UID": "150058",
          "sort_UID": "150058",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "FasTag Recharge",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) is debited from Kotak Bank a\\/c[\\s\\.]*x*\\d*(\\d{4}) to (.*?) on [\\d\\-\\/]+",
          "account_type": "bank",
          "pattern_UID": "150059",
          "sort_UID": "150059",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is credited in your.*a\\/c\\sx*(\\d{4}) by upi id (.*?) on .*?(upi ref no (\\d+)).*?new balance[\\s\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150061",
          "sort_UID": "150061",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\s.,]*([\\d,]*\\.?\\d{0,2}) .*?frm kotak bank ac x*(\\d{4}) (?:trfd|trf)?\\s*to (.*?)(?:\\s(?:done)?\\s*on|\\.\\s).*?((?:utr|ref no)\\-(\\w+))[\\.\\s]*.*?bal[\\s\\:](?:INR|Rs)[\\s.,]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150062",
          "sort_UID": "150062",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "Net Banking",
                  "txn_type": "net_banking",
                  "value": "ac x"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)account x*(\\d{4}) has been credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from kotak.*?(ref no[\\s\\.]*([\\w\\-]+))\\).*?balance is (?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150063",
          "sort_UID": "150063",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is credited .*?a\\/c no[\\s\\.]*x*\\d*(\\d{4}) on .*?as a reversal of debit.*?upi ref no[\\s\\.]*(\\d*)\\).*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150064",
          "sort_UID": "150064",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "network_reference_id": {
              "group_id": 3,
              "is_upi": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is credited .*?a\\/c on .*?reversal of pos txn no[\\s\\.]*(\\d+).*?balance in a\\/c[\\s\\.]*x*\\d*(\\d{4}) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150065",
          "sort_UID": "150065",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "network_reference_id": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)thank you for the auto debit from your kotak bank account x*(\\d{4}) of (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) to",
          "account_type": "bank",
          "pattern_UID": "150066",
          "sort_UID": "150066",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)received the payment for an amount of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?for your Kotak Bank Credit Card no[\\s\\.x]*(\\d{4}) on",
          "account_type": "credit_card",
          "pattern_UID": "150067",
          "sort_UID": "150067",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\s.,]*([\\d,]*\\.?\\d{0,2}) is debited.*?account x*(\\d{4}) on.*?towards nach\\-\\w+\\-(.*?) kotak bank",
          "account_type": "bank",
          "pattern_UID": "150068",
          "sort_UID": "150068",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) cr on .*?to kotak bank ac xx*(\\d{4}) by .*?linked to mobile.*?utr\\-(\\d+)\\.\\s*bal\\:(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "150069",
          "sort_UID": "150069",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "network_reference_id": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)standing instruction for (?:INR|Rs)*[\\.\\s]*([\\d,]*\\.?\\d{0,2}) from x*(\\d{4}) to bene.*?processed successfully",
          "account_type": "bank",
          "pattern_UID": "150070",
          "sort_UID": "150070",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Standing Instruction",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)fund transfer of (?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{0,2}) frm kotak bank a\\/?c x*(\\d{4}) to.*utr\\-(\\d+)",
          "account_type": "bank",
          "pattern_UID": "150071",
          "sort_UID": "150071",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "network_reference_id": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            }
          }
        }
      ],
      "sender_UID": "90000015",
      "senders": [
        "KOTAKB",
        "040100",
        "111000"
      ]
    },
    {
      "full_name": "Make My Trip",
      "name": "Make My Trip",
      "patterns": [
        {
          "regex": "(?i).*starting\\s(.*?)\\sfor\\s(.*?)\\s*,.*?ID\\s*(?:is)*(.*?)\\..*?(?:Rs\\.|INR)\\s*(\\d*)",
          "account_type": "generic",
          "pattern_UID": "430001",
          "sort_UID": "430001",
          "sms_type": "event",
          "data_fields": {
            "deleted": true,
            "event_type": "flight",
            "name": {
              "value": "Make My Trip"
            },
            "date": {
              "group_id": 1,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy"
                }
              ]
            },
            "event_location": {
              "group_id": 2
            },
            "event_info": {
              "group_id": 3
            },
            "amount": {
              "create_txn": false,
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)The PNR for your (.*?) for\\s*(.*?)-(.*?)\\s*on\\s*(.*?)at\\s*(\\d{1,2}:\\d{2})\\s*(?:hrs|)\\s*is\\s*(\\w*)",
          "account_type": "generic",
          "pattern_UID": "430002",
          "sort_UID": "430002",
          "sms_type": "event",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "event_type": "flight",
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "event_info",
                    "child_field": "contact"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Make My Trip"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "event_location",
                  "child_field": {
                    "group_id": 2
                  },
                  "match_type": "contains"
                },
                {
                  "parent_field": "event_location",
                  "child_field": {
                    "group_id": 3
                  },
                  "match_type": "contains"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "contains"
                },
                {
                  "parent_field": "sms_time",
                  "match_value": 900000,
                  "child_field": {
                    "field": "sms_time"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "event_location": {
              "group_ids": [
                2,
                3
              ]
            },
            "name": {
              "value": "Make My Trip"
            },
            "event_info": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "group_ids": [
                4,
                5
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy"
                }
              ]
            },
            "time": {
              "group_id": 5
            },
            "pnr": {
              "group_id": 6
            },
            "event_reminder_span": {
              "value": 90
            }
          }
        }
      ],
      "sender_UID": "90000043",
      "senders": [
        "MKMYTR",
        "MMTRIP"
      ]
    },
    {
      "full_name": "OlaCab",
      "name": "OlaCab",
      "patterns": [
        {
          "regex": "(?i)Ola(?:,|\\s)(.*?)[!\\.] Your booking with ([\\d\\w\\s]*) has been (?:received|confirmed) for ([\\d\\w,:\\-\\s]*)\\.",
          "account_type": "generic",
          "pattern_UID": "80001",
          "sort_UID": "80001",
          "sms_type": "event",
          "data_fields": {
            "event_type": "taxi",
            "event_reminder_span": {
              "value": 30
            },
            "name": {
              "value": "Ola"
            },
            "event_info": {
              "group_id": 1
            },
            "pnr": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMM, hh:mm a"
                },
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i).*?driver\\s*([\\w\\s\\.]*)\\(\\s*([\\d+]*?)\\s*\\)\\s*for\\s*(.*?\\d\\b)[\\.\\s]+(?:your cab|)\\s*(.*?)\\s*(?:to pick you up (?:@|\\?\\?|)|is|\\.)(.*?)\\.",
          "account_type": "generic",
          "pattern_UID": "80002",
          "sort_UID": "80002",
          "sms_type": "event",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "event_type": "taxi",
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "deleted": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Ola"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pnr",
                  "child_field": {
                    "field": "pnr"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "contains"
                }
              ]
            },
            "event_reminder_span": {
              "value": 30
            },
            "name": {
              "value": "Ola"
            },
            "event_location": {
              "group_id": 1
            },
            "contact": {
              "group_id": 2
            },
            "pnr": {
              "group_id": 3
            },
            "event_info": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "hh:mm a, ddMMM"
                },
                {
                  "use_sms_time": false,
                  "format": "hh:mma,ddMMM"
                },
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy hh:mm a"
                },
                {
                  "use_sms_time": true,
                  "format": ""
                }
              ]
            }
          }
        },
        {
          "regex": "(?i).*?bill for your ola booking no (.*?)\\s*is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "generic",
          "pattern_UID": "80003",
          "sort_UID": "80005",
          "sms_type": "event",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "event_type": "taxi",
            "show_notification": false,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "event_info",
                    "child_field": "event_info"
                  },
                  {
                    "parent_field": "event_location",
                    "child_field": "event_location"
                  },
                  {
                    "parent_field": "contact",
                    "child_field": "contact"
                  },
                  {
                    "parent_field": "date",
                    "child_field": "date"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Ola"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pnr",
                  "child_field": {
                    "field": "pnr"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "contains"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "name": {
              "value": "Ola"
            },
            "pnr": {
              "group_id": 1
            },
            "amount": {
              "create_txn": true,
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)your (?:ola share |auto |kaali peeli |)booking (.*?) (?:has been|had to be) cancelled",
          "account_type": "generic",
          "pattern_UID": "80007",
          "sort_UID": "80009",
          "sms_type": "event",
          "data_fields": {
            "enable_chaining": true,
            "event_type": "taxi",
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "event_location",
                    "child_field": "event_location"
                  },
                  {
                    "parent_field": "event_info",
                    "child_field": "event_info"
                  },
                  {
                    "parent_field": "contact",
                    "child_field": "contact"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Ola"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pnr",
                  "child_field": {
                    "field": "pnr"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "contains"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "event_info": {
              "value": "Cancelled"
            },
            "name": {
              "value": "Ola"
            },
            "pnr": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:to cancel.*|cancellation of your) booking (.*?\\d\\b)",
          "account_type": "generic",
          "pattern_UID": "80008",
          "sort_UID": "80010",
          "obsolete": true,
          "sms_type": "event",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "event_type": "taxi",
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "event_location",
                    "child_field": "event_location"
                  },
                  {
                    "parent_field": "event_info",
                    "child_field": "event_info"
                  },
                  {
                    "parent_field": "contact",
                    "child_field": "contact"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Ola"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pnr",
                  "child_field": {
                    "field": "pnr"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "contains"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "event_info": {
              "value": "Cancelled"
            },
            "name": {
              "value": "Ola"
            },
            "pnr": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(.*?)\\s*\\((.*)\\) is on .* in a (.*)\\. You are paying (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for this ride",
          "account_type": "generic",
          "pattern_UID": "80009",
          "obsolete": true,
          "sort_UID": "80003",
          "sms_type": "event",
          "data_fields": {
            "deleted": false,
            "event_type": "taxi",
            "show_notification": false,
            "date": {
              "use_sms_time": true
            },
            "name": {
              "value": "Ola"
            },
            "event_location": {
              "group_id": 1
            },
            "contact": {
              "group_id": 2
            },
            "event_info": {
              "group_id": 3
            },
            "amount": {
              "create_txn": true,
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)bill for your ola ride served by (.*) \\((.*)\\) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "generic",
          "pattern_UID": "80010",
          "sort_UID": "80004",
          "sms_type": "event",
          "data_fields": {
            "deleted": false,
            "event_type": "taxi",
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "event_location",
                    "child_field": "event_location"
                  },
                  {
                    "parent_field": "event_info",
                    "child_field": "event_info"
                  },
                  {
                    "parent_field": "pnr",
                    "child_field": "pnr"
                  },
                  {
                    "parent_field": "contact",
                    "child_field": "contact"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Ola"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "event_location",
                  "child_field": {
                    "field": "event_location"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 86400000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "contains"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "name": {
              "value": "Ola"
            },
            "event_location": {
              "group_id": 1
            },
            "event_info": {
              "group_id": 2
            },
            "amount": {
              "create_txn": true,
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:ola money .*deducted.*|is the total bill) for your ola ride,? served by (.*?)\\.",
          "account_type": "generic",
          "pattern_UID": "80014",
          "sort_UID": "80004",
          "obsolete": true,
          "sms_type": "event",
          "data_fields": {
            "deleted": false,
            "event_type": "taxi",
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "event_location",
                    "child_field": "event_location"
                  },
                  {
                    "parent_field": "event_info",
                    "child_field": "event_info"
                  },
                  {
                    "parent_field": "pnr",
                    "child_field": "pnr"
                  },
                  {
                    "parent_field": "contact",
                    "child_field": "contact"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Ola"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "event_location",
                  "child_field": {
                    "field": "event_location"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 86400000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "contains"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "name": {
              "value": "Ola"
            },
            "event_location": {
              "group_id": 2
            },
            "amount": {
              "create_txn": true,
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(.*?)\\s*\\((.*)\\) is on the way to your location in a (.*?)\\.[\\s\\S]* please share (CRN-\\d*) with driver",
          "account_type": "generic",
          "pattern_UID": "80017",
          "sort_UID": "80017",
          "obsolete": true,
          "sms_type": "event",
          "data_fields": {
            "deleted": false,
            "event_type": "taxi",
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "amount",
                    "child_field": "amount"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Ola"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "event_location",
                  "child_field": {
                    "field": "event_location"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 86400000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "contains"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "name": {
              "value": "Ola"
            },
            "event_location": {
              "group_id": 1
            },
            "contact": {
              "group_id": 2
            },
            "event_info": {
              "group_id": 3
            },
            "pnr": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(.*?)\\s*\\((.*)\\) is on the way to your location in a (.*?)\\.",
          "account_type": "generic",
          "pattern_UID": "80019",
          "sort_UID": "80019",
          "sms_type": "event",
          "data_fields": {
            "deleted": false,
            "event_type": "taxi",
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "amount",
                    "child_field": "amount"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Ola"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "event_location",
                  "child_field": {
                    "field": "event_location"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 86400000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "contains"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "name": {
              "value": "Ola"
            },
            "event_location": {
              "group_id": 1
            },
            "contact": {
              "group_id": 2
            },
            "event_info": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(.*?)\\s*\\((.*)\\) is arriving at (.*) in a (.*?)\\. your total fare is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) and",
          "account_type": "generic",
          "pattern_UID": "80020",
          "sort_UID": "80020",
          "obsolete": true,
          "sms_type": "event",
          "data_fields": {
            "event_type": "taxi",
            "show_notification": false,
            "date": {
              "use_sms_time": true
            },
            "name": {
              "value": "Ola"
            },
            "event_location": {
              "group_id": 1
            },
            "contact": {
              "group_id": 2
            },
            "event_info": {
              "group_id": 4
            },
            "amount": {
              "create_txn": true,
              "group_id": 5
            }
          }
        }
      ],
      "sender_UID": "9000008",
      "senders": [
        "OLACAB"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "5607040"
                ],
                "format": "BAL <Account number>"
              },
              {
                "type": "voice",
                "numbers": [
                  "18001802223"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Punjab National Bank",
      "name": "PNB",
      "patterns": [
        {
          "regex": "(?i)X+\\d*(\\d{4}).*debited\\s+(?:with|by) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}),\\s*([\\d-]+ [\\d:]+).*(?:thru|using) (.*?)(?:\\.|\\s).*aval bal (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "240001",
          "sort_UID": "240001",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 4,
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "value": "debit",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "debit_card",
                  "value": "pos",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": "mob",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "acc_type_override": "bank",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": "ibs",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)ac \\w*(\\d{4}).*debited\\s+with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}),([\\d-]+ [\\d:]+).*aval bal (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "240002",
          "sort_UID": "240002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)credit card X*(\\d{4}) debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*at (.*) on (.*)",
          "account_type": "credit_card",
          "pattern_UID": "240004",
          "sort_UID": "240024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)your[\\s\\S]*a\\/c[\\s\\.]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2}) on.*?through upi.*available bal[\\s\\:]*(?:INR|Rs)[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2})\\s*\\(upi ref (?:id|no)[\\s\\:\\.]*(\\d+)\\s*\\).*?",
          "account_type": "bank",
          "pattern_UID": "240025",
          "sort_UID": "240025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)X+(\\d{4}).*total Due of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) and min due of [\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) payable by (\\S*)",
          "account_type": "credit_card",
          "pattern_UID": "240005",
          "sort_UID": "240005",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(\\d+).*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\,fvg\\. (.*) debited from.*X+\\d+(\\d{4}),.* bal (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "240006",
          "sort_UID": "240006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "pos": {
              "group_ids": [
                3,
                1
              ],
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)X+\\d*(\\d{4}).*debited\\s*(?:with|by) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*(?:thru|by) (.*?)(?:\\.|\\s|on)\\.?.*?(?:aval|clear) bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "240007",
          "sort_UID": "500016",
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "group_id": 1
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "value": "debit",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "debit_card",
                  "value": "pos",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": "ibs",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "acc_type_override": "bank"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:A\\/c|a\\/c no.) x+\\d*(\\d{4}) (?:is|has been) debited (?:for|with) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on ([\\d-]+ [\\d:]+)",
          "account_type": "bank",
          "pattern_UID": "240008",
          "sort_UID": "240014",
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "group_id": 1
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "transaction_type": "net_banking",
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)account number.* \\d*(\\d{4}).*effective available balance:\\s*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) INR",
          "account_type": "bank",
          "pattern_UID": "240009",
          "sort_UID": "240023",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)\\w*\\d*(\\d{4}) (?:is)?\\s*credited (?:with|for) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*(?:aval|available) bal[\\s\\.\\:]*(?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "240010",
          "sort_UID": "240016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{3,4}) : (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "240011",
          "sort_UID": "240011",
          "reparse": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)Credit Card (?:ending)?\\s*(\\d{4}) (?:with total Due of|is for) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?(?:and min due of|Minimum Amount due) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:payable by|on) (\\d{2}\\.\\d{2}\\.\\d{2,4}|\\d{2}\\-\\w{3}\\-\\d{2,4})",
          "account_type": "credit_card",
          "pattern_UID": "240012",
          "sort_UID": "240012",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)A\\/c no.? x+\\d*(\\d{3,4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*\\((IMPS Ref no (\\d*)\\s?)\\)",
          "account_type": "bank",
          "pattern_UID": "240013",
          "sort_UID": "500015",
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "group_id": 1
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)(?:A\\/c|a\\/c no.) x+\\d*(\\d{4}) (?:is|has been) debited (?:for|with) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on ([\\d-]+ [\\d:]+) \\((upi ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "240014",
          "sort_UID": "240008",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "group_id": 1
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "transaction_type": "upi",
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*\\d*(\\d{4}) is credited for (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*for reversal of transaction \\((upi ref no.? (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "240015",
          "sort_UID": "240021",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)x*\\d*(\\d{4}) credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*neft (?:from|frm) (.*?)[\\.\\s]*aval bal (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "240016",
          "sort_UID": "240010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c (?:no.?)?\\s*x*\\d*?(\\d{3,4}) .*credited (?:by|with|for) (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(imps ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "240017",
          "sort_UID": "720013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c[\\s\\.]*(?:no.?)?\\s*x*\\d*?(\\d{3,4}) .*credited (?:by|with|for) (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on ([\\d\\-]* [\\d\\:]*)\\s*(?:thru|through|\\.) (?:upi\\.|helpline|debit card|atm\\/upi|ibs)",
          "account_type": "bank",
          "pattern_UID": "240018",
          "sort_UID": "240018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c (?:no.?)?\\s*x*\\d*?(\\d{3,4}) .*credited (?:by|with|for) (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) against (chq no[\\s\\.]*\\d+\\.)",
          "account_type": "bank",
          "pattern_UID": "240019",
          "sort_UID": "240019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your[\\s\\S]*a\\/c[\\s\\.]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2}) on.*?through upi.*\\((upi ref id[\\s\\:\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "240020",
          "sort_UID": "240020",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your[\\s\\S]*a\\/c[\\s\\.]*x*\\d*(\\d{4}) is credited for (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*for reversal of upi transaction.*?bal[\\s\\:]*(?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) \\((upi ref id[\\s\\:\\.]*(\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "240021",
          "sort_UID": "240015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)thank you (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\/\\- has been received as payment towards.*?credit card[\\s\\S]*x*(\\d{4}) .*?available credit limit is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "240022",
          "sort_UID": "240022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)\\w*\\d*(\\d{4}) (?:is)?\\s*credited (?:with|for) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*thru neft from (.*?refund.*)\\.\\s*(?:aval|available) bal[\\s\\.\\:]*(?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "240023",
          "sort_UID": "240009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)credit card X*(\\d{4}) debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*at (.*) on (.*?)\\.\\s*your available credit limit is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "240024",
          "sort_UID": "240004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}).* debited to .*(?: no | number | no. )\\d*x+\\d*(\\d{4}) (?:by|through|vide) ([neft|rtgs].*) on (\\d{2}\\-[a-z]{3}\\-\\d{2} \\d{2}:\\d{2}:\\d{2}).*credit (?:INR|Rs) [\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500001",
          "sort_UID": "500001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}).* debited to .*(?: no | number | no. )\\d*x+\\d*(\\d{4}) (?:by|through|vide) ([neft|rtgs].*) on (\\d{2}\\-[a-z]{3}\\-\\d{2} \\d{2}:\\d{2}:\\d{2}).*debit (?:INR|Rs) [\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500010",
          "sort_UID": "500002",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) (?:INR|Rs) .* debited to .*(?: no | number | no. )\\d*x+\\d*(\\d{4}) (?:by|through) (.*)(?:[. \\s])on ([\\d\\w\\-: ]*)(?:\\.|) now.* (?:INR|Rs) [\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500002",
          "sort_UID": "500003",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm transaction.",
                  "pos_override": "ATM",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "cash",
                  "value": "cash transaction",
                  "pos_override": "Cash",
                  "acc_type_override": "bank"
                },
                {
                  "txn_type": "debit_card",
                  "value": "pos transaction.",
                  "pos_override": "Debit Card Purchase",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "net_banking",
                  "value": "net banking transaction.",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": "(sweep) fund transfer",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": "fund transfer",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "debit_card",
                  "value": "eft / atm card transaction.",
                  "pos_override": "Debit Card Purchase",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "net_banking",
                  "value": "gbm transaction",
                  "pos_override": "Net Banking"
                }
              ],
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) (?:INR|Rs) .* debited to .*(?: no | number | no. )\\d*x+\\d*(\\d{4}) (?:by|through) (.*)(?:.*) on ([\\d\\w\\-: ]*) for",
          "account_type": "debit_card",
          "pattern_UID": "500003",
          "sort_UID": "500004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "value": "pos transaction.",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "debit_atm",
                  "value": "atm transaction.",
                  "pos_override": "ATM"
                }
              ],
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)balance in your (?:a\/c|account no) \\d*x*\\d*(\\d{4}).* on ([\\d\\w\\-]*) is (?:credit )*(?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500004",
          "sort_UID": "500005",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MMM-yyyy"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x+\\d{3}(\\d{4}) is\\s*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500005",
          "sort_UID": "500021",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)amount of [\\.,\\s]*([\\d,]*\\.?\\d{0,2}) INR .*credited .* x*\\d*(\\d{4}) by .*balance is (?:debit|credit) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500011",
          "sort_UID": "500018",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:account|a\\/c) \\d*x+\\d*(\\d{4}).*?debited.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on date ([\\da-z\\-]* [\\d\\:]*) by (upi ref no-\\s*(\\d*))",
          "account_type": "bank",
          "pattern_UID": "500012",
          "sort_UID": "500012",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)txn of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was made.*ending with x+(\\d{4}) on (.*) at (.*).now clear balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500013",
          "sort_UID": "500013",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)account x*\\d*(\\d{4}) is credited (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) due to reversal.* (upi ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "500014",
          "sort_UID": "500014",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no\\. x+\\d*(\\d{4}).*debited for (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*) and .*credited \\((imps ref no (\\d+))\\).*?\\-eobc",
          "account_type": "bank",
          "pattern_UID": "500015",
          "sort_UID": "240013",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yyyy hh:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x+\\d*(\\d{4}) debited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) by (.*) on (.*)\\..*clear balance is credit (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?eobc",
          "account_type": "bank",
          "pattern_UID": "500016",
          "sort_UID": "240007",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "value": "eft/",
                  "pos_override": "Debit Card Purchase",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "debit_atm",
                  "value": "atm txn",
                  "pos_override": "ATM",
                  "acc_type_override": "debit_card"
                },
                {
                  "pos_override": "Cheque",
                  "value": "chq",
                  "txn_type": "cheque"
                }
              ],
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)amount of[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})\\s(?:INR|Rs).*?debited to a\\/c no x*(\\d{4}) for (.*?) on(.*?)\\..*?clear balance .*?(?:INR|Rs) [\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500017",
          "sort_UID": "500017",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)amount of [\\.,\\s]*([\\d,]*\\.?\\d{0,2}) INR .*credited .* x*\\d*(\\d{4}) by interest payment.*balance is (?:debit|credit) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500018",
          "sort_UID": "500011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_interest",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit Interest",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your (?:account|a\\/c no)[\\s\\.]*x*\\d*(\\d{4}) is credited (?:by|with)?\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (?:date)?\\s*(.*?) by .*?((?:imps|upi) ref no[\\s\\.\\-]*\\d+|imps txn)(?:\\.|.*?\\-eobc)",
          "account_type": "bank",
          "pattern_UID": "500019",
          "sort_UID": "500019",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(cheque.*?no \\d+) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) deposited.*?cleared.*?credited in your a\\/c x*\\d*(\\d{4})\\..*?\\-eobc",
          "account_type": "bank",
          "pattern_UID": "500020",
          "sort_UID": "500020",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:account|ac) x*\\d*(\\d{4}) .* debited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\s\\:]*).*?(debit card|NEFT\\/RTGS|)\\..*(?:bal|balance\\sis) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "720001",
          "sort_UID": "720001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "pos_override": "Debit Card Purchase",
                  "value": "debit card"
                },
                {
                  "txn_type": "net_banking",
                  "value": "neft"
                },
                {
                  "txn_type": "default",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\s\\:]*).*(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "720004",
          "sort_UID": "720017",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)balance .* x+\\d*(\\d{4}) is [\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "720005",
          "sort_UID": "720005",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on .*\\(((upi|imps) (?:ref|reference) no[\\s\\.]*(\\d*))\\).*?\\(euni",
          "account_type": "bank",
          "pattern_UID": "720008",
          "sort_UID": "720008",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi"
                },
                {
                  "txn_type": "net_banking",
                  "value": "imps",
                  "pos_override": "Net Banking"
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (?:[\\d\\-\\s\\:]*).*(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}).*?info[\\s\\:]*.*?(?:imps_rev|refund|reversal|_rev_|reversed|[\\s\\:]rev\\_\\d+|aeps\\-rev).*?\\-euni",
          "account_type": "bank",
          "pattern_UID": "720011",
          "sort_UID": "720011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (?:[\\d\\-\\s\\:]*) by.*?upi\\_+rev\\_+.*(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?\\-euni",
          "account_type": "bank",
          "pattern_UID": "720012",
          "sort_UID": "720012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?for reversal .*?(imps ref no[\\s\\.]*(\\d+)).*?euni",
          "account_type": "bank",
          "pattern_UID": "720013",
          "sort_UID": "240017",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\s\\:]*).*? upi[\\s\\:]*(.*?)\\/.*?(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "720014",
          "sort_UID": "720014",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\s\\:]*).*(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?neftin\\/.*?\\/(\\w.*?)(?:\\/|$|\\.\\s*welcome)",
          "account_type": "bank",
          "pattern_UID": "720015",
          "sort_UID": "720015",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 5
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\s\\:]*).*(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}).*?info[\\s\\:]*(.*?)(?:$|\\.\\s*welcome)",
          "account_type": "bank",
          "pattern_UID": "720016",
          "sort_UID": "720016",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 5
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 5
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\s\\:]*).*(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}).*?info[\\s\\:]*(interest cr|salary)",
          "account_type": "bank",
          "pattern_UID": "720017",
          "sort_UID": "720004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 5
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 5,
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?debited from.*?(upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "720018",
          "sort_UID": "720018",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)fund transfer from.*?is successful[\\s\\.]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is credited to your account x*(\\d{4})",
          "account_type": "bank",
          "pattern_UID": "720019",
          "sort_UID": "720019",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)aeps cw .*?a\\/c x*\\d*(\\d{4}) with.*?successful and debited with (?:INR|Rs)*[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) dated",
          "account_type": "bank",
          "pattern_UID": "720020",
          "sort_UID": "720020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            }
          }
        }
      ],
      "sender_UID": "90000024",
      "senders": [
        "PNBSMS",
        "PNBRWD",
        "PNBHFL",
        "PNBCCD",
        "PNBCRC",
        "PNBRTS",
        "PNBMOB",
        "PNBUPI"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "18004190610"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "RBL Bank",
      "name": "RBLBANK",
      "patterns": [
        {
          "regex": "(?i)charge of (INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*credit card ending with (\\d{4}) at (.+) on (.+[ap].?m.?).*available limit is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "440001",
          "sort_UID": "440001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' hh:mm:ss a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy 'at' hh:mm:ss a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MMM/yy 'at' hh:mm a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' hh:mm a"
                }
              ]
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?debited.*card (?:no ending)?\\s*x+(\\d{4}) at\\s*(atm|\\s)(.+)(?:\\.|on \\d{0,2}\\/\\w+ [\\d\\:]+)\\s*(?:avail|av) bal (?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "440002",
          "sort_UID": "440002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "pos_override": "ATM",
                  "value": "atm"
                },
                {
                  "txn_type": "debit_card",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c.*x+(\\d{4}) .*debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.+) (?:through|towards) (rtgs|neft).*(utr no\\.*\\s*(\\w+)).*available bal.*? is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "440003",
          "sort_UID": "440003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy 'at' HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy 'at' HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yyyy hh:mm:ss a"
                }
              ]
            },
            "note": {
              "group_id": 5
            },
            "network_reference_id": {
              "group_id": 6,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "neft",
                  "is_neft": true
                },
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            },
            "account_balance": {
              "group_id": 7
            }
          }
        },
        {
          "regex": "(?i)(?:account|a\\/c) x+(\\d{4}) is debited with\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\s*for (chq no \\d+).*ref\\s*\\.*\\s*(.*?)\\..*balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "440004",
          "sort_UID": "440004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|account)\\s*x+(\\d{4}) is debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\s*on (.*?) ref (.*?) (?:your net|net) available balance is\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "440005",
          "sort_UID": "440005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy hh:mm:ss"
                }
              ]
            },
            "note": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i) credit card .*?(\\d{4})[\\s\\)]*(?:bill of|is)\\s*(?:overdue[\\s\\.]*total amount outstanding of)?\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?(?:with due date|not paid till|was due by) (\\d{2}\\-\\d{2}\\-\\d{4})\\s*(?:has|\\.).*",
          "account_type": "credit_card",
          "pattern_UID": "440006",
          "sort_UID": "440006",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) (?:is|has been) credited with .*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*(?:ref|reference) (.*?)\\..*?(?:balance|bal).*is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "440007",
          "sort_UID": "440021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)balance .*(?:ending|for a\\/c no\\.)\\s*(?: with|) \\d*\\**x*(\\d{4}) (?:as of [\\d\\-]*)?\\s*is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*(?:as on|on|@|[\\.\\s])",
          "account_type": "bank",
          "pattern_UID": "440008",
          "sort_UID": "440028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)credit card (?:ending with|ending) (\\d{4}) (?:was|is) .*total amount due (?:is |)(?:Rs|INR)[\\s.,]*([\\d,]*\\.?\\d{0,4})(?:\\s|)\\. min amount due (?:is |)(?:Rs|INR)[\\s.,]*([\\d,]*\\.?\\d{0,4})\\..*due date.*?(\\d{2}-\\w+-\\d{4})\\.",
          "account_type": "credit_card",
          "pattern_UID": "440009",
          "sort_UID": "440009",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)a\\/c no. x+(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on .* and credited.*(upi ref no (.*))\\)",
          "account_type": "bank",
          "pattern_UID": "440010",
          "sort_UID": "440029",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*\\d*(\\d{4}) is credited for (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*for reversal of transaction \\((upi ref no.? (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "440011",
          "sort_UID": "440011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)rbl bank credit card.*[\\s\\S]*for card no \\#\\s*(\\d{4})[\\s\\S]*total amount due[\\.:\\-,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*min amount due[\\.:\\-,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*payment due date[\\.:\\-,\\s]*(\\d{4}\\-\\d{2}\\-\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "440012",
          "sort_UID": "440012",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)RBL Bank MoneyTap account ending with (\\d{4})outstanding of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is due for payment on (\\d{2}\\-\\d{2}\\-\\d{4}).*minimum amount due of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "account_name_override": "RBL MoneyTap",
          "pattern_UID": "440013",
          "sort_UID": "440013",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)RBL Bank Credit Card ending with (\\d{4}) bill dated.*[\\s\\S]*Total Amount Due\\: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*minimum amount due\\: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]payment due date\\: (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "440014",
          "sort_UID": "440014",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)credit card ending with (\\d{4}) outstanding of (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is due for payment on (\\d{2}\\-\\d{2}\\-\\d{4}).*minimum amount due of (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "440015",
          "sort_UID": "440015",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)RBL Bank Credit Card \\(x+(\\d{4})\\).*?[\\s\\S]*(?:total amount due|is)[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}).*?[\\s\\S]*.*?minimum amount due\\s*(?:\\:|of) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?[\\s\\S]*(?:payment due date|not paid till)[\\s\\:]*(\\d{2}\\-\\w{3}\\-\\d{2,4}|.*?)[\\s\\,]*[\\s\\S](?:visit|your)",
          "account_type": "credit_card",
          "pattern_UID": "440016",
          "sort_UID": "440016",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "MMM dd, yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)credit card (?:ending)?.*?(\\d{4}).*due on (.*)\\. total amount due is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?minimum amount due (?:of|is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "440017",
          "sort_UID": "440017",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "min_due_amount": {
              "group_id": 4
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) (?:is|has been) credited with .*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?imps.*?from (.*?)\\.\\s*.*?(?:balance|bal).*(?:is)?\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "440019",
          "sort_UID": "440019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) (?:is|has been) credited with .*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*? (?:ref|reference) ((?:(?:neft|ift)\\/.*?\\/|cashdep\\/|ib-?tpft.*?\\/|upi\\/.*?\\/.*?\\/)((?:m\\/)?.*?)(?:\\/.*?\\.|avail|\\.\\s*your)).*?(?:balance|bal).*is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "440020",
          "sort_UID": "440020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) (?:is|has been) credited with .*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?chq dep\\/.*?\\/.*?\\/.*?\\/.*?\\/(.*?)\\-.*? (?:balance|bal).*is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "440021",
          "sort_UID": "440007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\d*(\\d{4}) .*credited .*(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}) .*\\((upi ref no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "440022",
          "sort_UID": "440022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your .*?account number.*?ending with [\\d\\*x]*(\\d{4}) (?:is|has been) credited .*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "440023",
          "sort_UID": "440023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*received towards your.*?credit card ending with \\d*(\\d{4}).*available credit limit now is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "440024",
          "sort_UID": "440024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)you have spent (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) at (.*?) using .*?moneytap (?:loan)?\\s*account \\(x*(\\d{4})\\) .*?available limit is (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "account_name_override": "RBL MoneyTap",
          "pattern_UID": "440025",
          "sort_UID": "440025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)you have spent (INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) at (.*?) using .*?(?:credit card|loanpass account|paisaondemand account|Edition (?:Classic)?\\s*Card) \\(x*(\\d{4})\\) .*?available limit is (?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "440026",
          "sort_UID": "440026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 2
            },
            "currency": {
              "group_id": 1
            },
            "pan": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)online transaction with (.*?) for (?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) has been.*?successfully.*?available balance is (?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "440027",
          "sort_UID": "440027",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) (?:is|has been) credited with .*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*(?:ref|reference).*?(?:reversal\\-(?:imps|mps) \\w+\\s|refund (?:for|of)\\s)(.*)\\..*?(?:balance|bal).*is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "440028",
          "sort_UID": "440008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) (?:is|has been) credited with .*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*(?:ref|reference).*?(?:reversal|refund).*\\..*?(?:balance|bal).*is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "440029",
          "sort_UID": "440010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was debited from .*?a\\/c x*(\\d{4}) on.*? ref (\\d+)\\-imps (.*?)\\.\\s*for",
          "account_type": "bank",
          "pattern_UID": "440030",
          "sort_UID": "440030",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 3,
              "is_imps": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)you have spent (INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) at (.*?) using .*?(?:credit card|loanpass account|paisaondemand account|Edition (?:Classic)?\\s*Card) \\(x*(\\d{4})\\) on",
          "account_type": "credit_card",
          "pattern_UID": "440031",
          "sort_UID": "440031",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 2
            },
            "currency": {
              "group_id": 1
            },
            "pan": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)we have received a payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards.*?RBL Bank Credit Card \\(x*(\\d{4})\\) on",
          "account_type": "credit_card",
          "pattern_UID": "440032",
          "sort_UID": "440032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000044",
      "senders": [
        "RBLBNK",
        "RBLCRD"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "+919223766666"
                ]
              },
              {
                "type": "sms",
                "numbers": [
                  "09223866666"
                ],
                "format": "MSTMT"
              }
            ]
          }
        ]
      },
      "full_name": "State Bank of India",
      "name": "SBI",
      "patterns": [
        {
          "regex": "(?i)\\d*x*(\\d{4}) for .*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*POS\\s*(.*?)\\s?at\\s?\\+?(.*?)\\+?txn",
          "account_type": "debit_card",
          "pattern_UID": "130003",
          "sort_UID": "130003",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)Transaction of (INR|Rs|[a-z]{3})[\\.\\s]*([\\d,]*\\.?\\d{1,2}).*Credit Card XX(\\d{4}) at (.*) on (.*).",
          "account_type": "credit_card",
          "pattern_UID": "130004",
          "sort_UID": "130070",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}),.*X+(\\d{4}) and minimum amount of (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}) .*due on (\\d{2}-\\S{3}-\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "130005",
          "sort_UID": "130021",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?at[\\s+]*(?:\\S{3}\\s*\\+*\\S{3}\\s*\\+*\\S{13})?\\s*\\+?(.*?)[\\s+]*(?:from|fm).*x+\\s*(\\d{4}).+\\.Avl[\\s+]*bal[\\s+]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "130006",
          "sort_UID": "130001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s+]*withdrawn[\\s+]*from.*x+\\s*(\\d{4}).*?at[\\s+]*(.*?)\\..*Avl[\\s+]*bal[\\s+]*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "130007",
          "obsolete": true,
          "sort_UID": "130002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)amt due of (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}) or min amt of (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{0,2}) .*payable by ([\\d\\/]*)",
          "account_type": "credit_card",
          "pattern_UID": "130008",
          "sort_UID": "130006",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "min_due_amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)net Banking.*for (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (\\d{2}\\-[a-z]{3}\\-\\d{2} \\d{2}\\:\\d{2})",
          "account_type": "bank",
          "pattern_UID": "130009",
          "sort_UID": "130007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm"
                }
              ]
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)X+\\d+(\\d{4}) Debited (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*\\-(?:transferred to |)(.*?)\\s*\\.\\s*(?:Avl|Dbt|a\\/c) Bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "130010",
          "sort_UID": "130008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debit.*x+\\s*(\\d{4}).*atm \\w{13} (.+) for.*txn.*\\.avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "130013",
          "sort_UID": "130013",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*debit.*x+\\s*(\\d{4}).*atm \\w{13}\\s*(.*)\\s*for.*txn",
          "account_type": "debit_card",
          "pattern_UID": "130014",
          "sort_UID": "130014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(.*)\\n*\\s*avail bal in a/c x+(\\d{3,4}):\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "130018",
          "sort_UID": "130018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "group_id": 1,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy',' HH:mm"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x*\\d*(\\d{4}) credited (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* (?:avl|dbt|a\\/c) (?:bal|balance) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "130020",
          "sort_UID": "130064",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}),.*X*(\\d{4}).*due on (\\d{2}-\\S{3}-\\d{2,4})[\\s\\.].*min[\\s\\.]*amount due: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "130021",
          "sort_UID": "130005",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d+(\\d{4}) has a cash withdrawal of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .* avl bal (?:INR|Rs)(?:%a0|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "130022",
          "sort_UID": "130022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "default",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cash Withdrawal",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c x+\\s*\\d*(\\d{4}) (?:has a)?\\s*(?:credit|credited) by (.*?) (?:dated.*?of|of) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .* avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "130025",
          "sort_UID": "130025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x+\\d*(\\d{4}) has a withdrawal by cheque of (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2}) on.* avl bal (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2})",
          "account_type": "bank",
          "pattern_UID": "130026",
          "sort_UID": "130026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)account is debited (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{0,2}) on date (.*) by (upi ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "130027",
          "sort_UID": "130027",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MMM dd HH:mm:ss 'IST' yy"
                },
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd hh:mm:ss a"
                }
              ]
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i) x*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* and .*(IMPS Ref no\\s*(\\w+))",
          "account_type": "bank",
          "pattern_UID": "130028",
          "sort_UID": "130028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)transfer (?:to)?\\s*(.*) for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) completed successfully.*((?:TID|reference no)[\\:\\s\\.]*[\\s|\\S]*?([\\w]+))",
          "account_type": "bank",
          "pattern_UID": "130029",
          "sort_UID": "130029",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "net_banking",
                  "value": "a/c no",
                  "pos_override": "Net Banking",
                  "set_no_pos": true
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 1,
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(.*) executed successfully .*for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "130030",
          "sort_UID": "130030",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs|[a-z]{3})[\\.\\s]*([\\d,]*\\.?\\d{1,2}) was spent .* (?:ending with|ending) X*(\\d{2,4}) at (.*) on .* credit limit\\s*:\\s*(?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{1,2})",
          "account_type": "credit_card",
          "pattern_UID": "130031",
          "sort_UID": "130009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c x+\\s*\\d*(\\d{4}) has a debit by.*of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (\\d{2}\\/\\d{2}\\/\\d{2}).* avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "130032",
          "sort_UID": "130032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:transaction|trxn).*?(INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:made|on).*card x*\\d*?(\\d{2,4}) without.*at (.*?) on",
          "account_type": "credit_card",
          "pattern_UID": "130033",
          "sort_UID": "130033",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)amount of (Rs|INR)[\\s.,]*([\\d,]*\\.?\\d{0,2}) has.*credited.*card x*(\\d{4}) on (.*)\\. this.*(cancellation of the transaction dated.*)",
          "account_type": "credit_card",
          "pattern_UID": "130034",
          "sort_UID": "130034",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)\u092a\u0940\u0913\u090f\u0938 .*,(.*) \u092a\u0930 \u0915\u093f\u090f \u0917\u090f (?:INR|Rs|\u0930\u0941)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) \u0915\u0947 \u0911\u0928\u0932\u093e\u0907\u0928 \u0932\u0947\u0928\u0926\u0947\u0928 \u0915\u0947 \u0932\u093f\u090f \u0905\u092a\u0928\u0947 SBI , \u0921\u0947\u092c\u093f\u091f \u0915\u093e\u0930\u094d\u0921 \\d*x*(\\d{4}) \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u0947",
          "account_type": "debit_card",
          "pattern_UID": "130035",
          "sort_UID": "130035",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)\u0926\u093f\u0928\u093e\u0902\u0915.*\u090f\u0938\u092c\u0940\u0906\u0908 \u0915\u0940 (.*) \u092e\u0947\u0902.*\u0916\u093e\u0924\u093e \u0938\u0902. (\\d{4}) \u0938\u0947.*\u0930\u093e\u0936\u093f (?:INR|Rs|\u0930\u0941)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) \u0964 \u0932\u0947\u0928\u0926\u0947\u0928.*\u0909\u092a\u0932\u092c\u094d\u0927 \u0936\u0947\u0937 (?:INR|Rs|\u0930\u0941|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "130036",
          "sort_UID": "130036",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)\u0926\u093f\u0928\u093e\u0902\u0915.*\u0916\u093e\u0924\u093e \u0915\u094d\u0930. (\\d{4})\u0938\u0947.*\u0930\u093e\u0936\u093f (?:INR|Rs|\u0930\u0941)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) \u0964 \u0932\u0947\u0928\u0926\u0947\u0928.*\u0909\u092a\u0932\u092c\u094d\u0927 \u0936\u0947\u0937 (?:INR|Rs|\u0930\u0941|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "130037",
          "sort_UID": "130037",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)e-stmt for.*card ending with x*(\\d{2}) dated.*total amt due: (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{0,2}), min amt due: (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{0,2}) is payable by ([\\d\\/]*)",
          "account_type": "credit_card",
          "pattern_UID": "130039",
          "sort_UID": "130039",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)net Banking.*for(.*) of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from a\\/c ending (\\d{4}) on (\\d{2}\\-[a-z]{3}\\-\\d{2} at \\d{2}:\\d{2})",
          "account_type": "bank",
          "pattern_UID": "130040",
          "sort_UID": "130042",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy 'at' HH:mm"
                }
              ]
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(chq no.? \\d+|Chq \\d+) for (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2}) (.*) recd in clg wl be paid if (?:found)?\\s*in order",
          "account_type": "bank",
          "pattern_UID": "130041",
          "sort_UID": "130041",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            }
          }
        },
        {
          "regex": "(?i)net Banking.*for (.*) transaction of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from a\\/c ending (\\d{4}) on (.*?) is",
          "account_type": "bank",
          "pattern_UID": "130042",
          "sort_UID": "130040",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy 'at' HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "ddMMMyy 'at' HH:mm"
                }
              ]
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)statement.*Card ending with (x*\\d{2}) .*Total Amt. Due: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) , Min Amt. Due: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is payable by (\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "credit_card",
          "pattern_UID": "130043",
          "sort_UID": "130043",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediately'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*(\\d{4}) is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*) for reversal of transaction \\((upi Ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "130044",
          "sort_UID": "130044",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd hh:mm:ss a"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)net Banking.*transaction of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from a\\/c ending (\\d{4}) to (.*) on (\\d{2}\\-[a-z]{3}\\-\\d{2} at \\d{2}:\\d{2})",
          "account_type": "bank",
          "pattern_UID": "130045",
          "sort_UID": "130045",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy 'at' HH:mm"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}) has been debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .*towards (NEFT|RTGS) with (UTR (\\w*)) sent to (\\w*\\s*\\w*\\s*\\w*)",
          "account_type": "bank",
          "pattern_UID": "130046",
          "sort_UID": "130046",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 6
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 3,
              "type_rules": [
                {
                  "value": "neft",
                  "is_neft": true
                },
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*(?:w\\/d.*ATM|withdrawn at).*(?:fm|from) a\\/cx*(\\d{4}) on.*(?:Avl\\s*bal|Available Balance) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "130047",
          "sort_UID": "130047",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s+]*withdrawn[\\s+]*from.*x+\\s*(\\d{4}).*?at[\\s+]*(.*?)\\.",
          "account_type": "debit_card",
          "pattern_UID": "130048",
          "sort_UID": "130048",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)SBIDrCard \\d*x*(\\d{4}) used for .*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*at(.*) txn",
          "account_type": "debit_card",
          "pattern_UID": "130049",
          "sort_UID": "130049",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)txn of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\d* frm a\\/c x*(\\d{4}) to (.*?)[\\s\\.]*ref[\\#\\s](\\w*)",
          "account_type": "bank",
          "pattern_UID": "130050",
          "sort_UID": "130050",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)ur a\\/cx*\\d*(\\d{4}).*debited by (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{0,2}) on (.*) (ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "130052",
          "sort_UID": "130052",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd hh:mm:ss a"
                }
              ]
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)upi (?:debit transaction|txn) of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?(?:account|a\\/c)\\s*x*(\\d{4}) is successful",
          "account_type": "bank",
          "pattern_UID": "130053",
          "sort_UID": "130053",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)txn of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\d* frm a\\/c x*(\\d{4}).*ref\\#(\\w*)",
          "account_type": "bank",
          "pattern_UID": "130054",
          "sort_UID": "130054",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs|[a-z]{3})[\\.\\s]*([\\d,]*\\.?\\d{1,2}).*?spent.*?card ending with (\\d{4}) at (.*?) on \\d{2}\\/\\d{2}\\/\\d{2}",
          "account_type": "credit_card",
          "pattern_UID": "130055",
          "sort_UID": "130055",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)upi.*?a\\/c\\s*x*(\\d{4}) credited with (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*reversal.*\\((ref no[\\.\\s]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "130056",
          "sort_UID": "130056",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)trf to [x\\s\\.]*(.*?) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) completed\\.(tid[\\s\\:]*(\\w+))\\.",
          "account_type": "bank",
          "pattern_UID": "130057",
          "sort_UID": "130057",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)sbi fastag.*?((?:vehicle number|vrn)[\\s\\:]*\\w+).*?debited (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?on (.*?) (?:available balance is|bal) (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "pattern_UID": "130058",
          "sort_UID": "130058",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                }
              ]
            },
            "pan": {
              "value": "FASTag"
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 1
            },
            "pos": {
              "value": "Toll",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)fastag.*?credited with.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:current balance|bal)[\\s:]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "pattern_UID": "130059",
          "sort_UID": "130071",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "FASTag"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "FasTag Recharge",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*(?:w\\/d|withdrawn).*ATM.*(?:fm|from) a\\/cx*(\\d{4}) on.*?((?:txn|ref|Transaction Number)[\\#\\s](\\d+))",
          "account_type": "debit_card",
          "pattern_UID": "130060",
          "sort_UID": "130060",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}).*?credit for (.*?) of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "130061",
          "sort_UID": "130061",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_interest"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)received.*?payment.*?of (?:INR|Rs)*[\\.:,\\s]*([\\d,\\-]*\\.?\\d{0,2}).*?available credit limit is (?:INR|Rs)*[\\.:,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "130062",
          "sort_UID": "130062",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your payment of (.*?)\\..*?for (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?processed successfully on (.*?)\\, (txn ref is (\\w+))",
          "account_type": "bill_pay",
          "pattern_UID": "130063",
          "sort_UID": "130063",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "bill_pay",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm"
                }
              ]
            },
            "pan": {
              "value": "Bill payments"
            },
            "pos": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i) x*\\d*(\\d{4}) credited (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .* transfer (?:from|frm) (.*)\\..*?(?:avl|dbt|a\\/c) (?:bal|balance) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "130064",
          "sort_UID": "130020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*\\d*(\\d{4}) is credited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*by.*? [\\dx]*\\-(.*?)\\s*\\((imps ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "130065",
          "sort_UID": "130065",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to your a\\/c no.? x*\\d*(\\d{4}) on.*?through.*? by (.*?)\\, info(.*?)$",
          "account_type": "bank",
          "pattern_UID": "130066",
          "sort_UID": "130066",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_interest"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "fd\\sredeem\\sprincipal|auto_redemption|(?:int|princ)\\sauto[\\_\\s]redeem",
                  "category": "walnut_credit",
                  "income_flag_override": false
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(ref[\\s\\.]*no[\\s\\.]*(\\w+)) for (?:txn|transaction) of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from a\\/c\\s*\\d*(\\d{4}) .*?(?:to|for) (.*?) (?:a\\/c)?\\s*on\\s*(\\d{2}\\-\\w{3}\\-\\d{2,4} at\\s+[\\d\\:]*)",
          "account_type": "bank",
          "pattern_UID": "130068",
          "sort_UID": "130068",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 6,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy 'at' HH:mm"
                }
              ]
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 4
            },
            "pos": {
              "group_id": 5
            },
            "note": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)outstanding.*?card ending (\\d{2}) is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\, min[\\s\\.]*amt due[\\s\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\.",
          "account_type": "credit_card",
          "pattern_UID": "130069",
          "sort_UID": "130069",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": -1,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)x*\\d*(\\d{4}) credited (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .*?reverse (pos|atm wdl).*?(?:avl|dbt|a\\/c) (?:bal|balance) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "130070",
          "sort_UID": "130004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "pos": {
              "value": "Debit Card Reversal",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}).*?credit for (.*?(?:[\\s\\_]*rfnd[\\_\\s]*|reversal|refund).*) of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "130071",
          "sort_UID": "130059",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "note": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:via|against) .*card ending x*(\\d{4})[\\s\\.].*limit is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "130072",
          "sort_UID": "130072",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{0,2}) debited.*?upi frm (?:a|c)\\/cx*(\\d{4}) on.*?(refno (\\d+))\\.",
          "account_type": "bank",
          "pattern_UID": "130073",
          "sort_UID": "130073",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)ur a\\/cx*(\\d{4}) credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on \\d{2}\\w{3}\\d+ by (\\w+.*?) \\((ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "130074",
          "sort_UID": "130074",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)ur a\\/cx*(\\d{4}) credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on \\d{2}\\w{3}\\d+ by\\s*\\((ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "130075",
          "sort_UID": "130075",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) by SBI\\s*(?:Dr|debit)\\s*Card \\d*x*(\\d{4}) at .*?on (\\d{2}\\w{3}\\d{2,4} at [\\d\\:]*)",
          "account_type": "debit_card",
          "pattern_UID": "130076",
          "sort_UID": "130076",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMMyy 'at' HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs|[a-z]{3})[\\.\\s]*([\\d,]*\\.?\\d{1,2}) has been credited.*?sbi credit card x*(\\d{4})[\\s\\,]*towards reversal.*? from (.*?) for trxn",
          "account_type": "credit_card",
          "pattern_UID": "130077",
          "sort_UID": "130077",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c ending with (\\d{4}) has been debited for (?:INR|Rs)[\\.\\:\\,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?towards (.*?) for your sbi debit card",
          "account_type": "bank",
          "pattern_UID": "130078",
          "sort_UID": "130078",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)self trf frm x*\\d*(\\d{4}) to .*?for amt (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?(tid[\\s\\:]*(\\w+))",
          "account_type": "bank",
          "pattern_UID": "130079",
          "sort_UID": "130079",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(lpg subsidy) of (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been credited to your a\\/c no[\\s\\.]*x*\\d*(\\d{4}) on",
          "account_type": "bank",
          "pattern_UID": "130080",
          "sort_UID": "130080",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)your a\\/c x*\\d*(\\d{4}) credited[\\s\\.]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*?on account of closure of",
          "account_type": "bank",
          "pattern_UID": "130081",
          "sort_UID": "130081",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)ac [x\\d]*(\\d{4}) dbt (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?transfer to (.*?)\\,\\s*(chq no[\\s\\.]*\\d+)[\\s\\.]*avl bal (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "130082",
          "sort_UID": "130082",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) credited to your acc no[\\s\\.x\\d]*(\\d{4}) on",
          "account_type": "bank",
          "pattern_UID": "130083",
          "sort_UID": "130083",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)received .*?payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:via|against) .*card (?:ending|no)[\\s\\.]*x*\\d{2}[\\.\\s].*limit is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "130084",
          "sort_UID": "130084",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)upi fund trf to (.*?) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?has been processed.*?tid[\\s\\:]*(\\w+)",
          "account_type": "bank",
          "pattern_UID": "130085",
          "sort_UID": "130085",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "network_reference_id": {
              "group_id": 3,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)txn (\\w+) dtd \\d+ (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2}) for (.*?) is successful.",
          "account_type": "bank",
          "pattern_UID": "130086",
          "sort_UID": "130086",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "network_reference_id": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)sbi card bill pay.*payment for (.*?)[\\s\\-]+account.*?for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}).*?processed successfully",
          "account_type": "credit_card",
          "pattern_UID": "130087",
          "sort_UID": "130087",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)aeps cash withdrawal.*?account number x*(\\d{4}) .*?successful.*?debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*on\\s*(.*?)\\.\\s*rrn (\\d+)",
          "account_type": "bank",
          "pattern_UID": "130088",
          "sort_UID": "130088",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy hh:mm:ss a"
                }
              ]
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)balance enquiry.*?sbi account number x*(\\d{4}) is successful.*?balance is (?:INR|Rs)*[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "130089",
          "sort_UID": "130089",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)transaction of (INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) at (.*?) against e\\-mandate.*debited to your.*credit card ending (\\d{4}) on",
          "account_type": "credit_card",
          "pattern_UID": "130090",
          "sort_UID": "130090",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000013",
      "senders": [
        "ATMSBI",
        "CBSSBI",
        "SBICRD",
        "SBIINB",
        "SCISMS",
        "SBIUPI",
        "SBIPSG",
        "SBGMBS",
        "1722",
        "SBIETC",
        "SBIBIL",
        "SBYONO",
        "SBMSMS",
        "SBIDGT",
        "SBIKBP"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "+919987123123"
                ],
                "format": "BAL"
              }
            ]
          }
        ]
      },
      "full_name": "Standard Chartered",
      "name": "StanC",
      "patterns": [
        {
          "regex": "(?i)Thank you for using.*?(?:x+)?(\\d{4}) on .* for (INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{2})[ \\.]",
          "account_type": "credit_card",
          "pattern_UID": "160001",
          "sort_UID": "160024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Spent",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)XX(\\d{4}) is debited on (.*) by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards (.*)\\.\\s*Avl bal\\s*:\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "160003",
          "sort_UID": "160003",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "amount": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4,
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm cash withdrawal",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "value": "purchase"
                }
              ],
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i).*XX(\\d{4}).*debited on (.*) by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards (.*)\\.(?:Available|avl) bal.*?\\:(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "160004",
          "sort_UID": "160004",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4,
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": "neft",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)withdrawn (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}).*credit card no ending (\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "160005",
          "sort_UID": "160005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}).*debited.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}).*((?:chq|cheque) (?:no|number) \\d+).*balance.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2})",
          "account_type": "bank",
          "pattern_UID": "160006",
          "sort_UID": "160006",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:account |acc )(?: number |no |no.)\\s*\\**\\d*x*(\\d{4}).*on ([\\w\\s\\d\\,\\:]*) are\\:\\s*\n*(?:avl.|available) (?:bal: |balance)(?:INR|Rs)[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "160008",
          "sort_UID": "160008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MMMM dd, yy"
                },
                {
                  "use_sms_time": false,
                  "format": "MMMM dd, yy 'at' hh:mm:ss a"
                }
              ]
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|account|a\\/c no.) \\d*x*(\\d{4}) .*credited.* by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* (?:bal|balance|avl\\. bal):\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "160010",
          "sort_UID": "160021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:deposit|credit) of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* account \\d*x*(\\d{4}) .*balance:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "160011",
          "sort_UID": "160011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:credit card pymt|pymt for stmt) .* due on (\\d{2}\\/\\d{2}\\/\\d{2}),\\s*total due\\s*: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}).*minimum due\\s*: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "160012",
          "sort_UID": "160012",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 1,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i) x*\\d*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*) and .*((IMPS|upi) Ref no\\s*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "160014",
          "sort_UID": "160014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": "imps"
                }
              ],
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": true,
                  "format": " "
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 6,
              "type_group_id": 5,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)total os bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\S\\s]*avlb lmt (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "160015",
          "sort_UID": "160015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "value": "XXXX"
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*\\d*(\\d{4}) is credited for (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*for reversal of transaction \\((upi ref no.? (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "160017",
          "sort_UID": "160017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*min due:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}), Due Date.*([\\d\\/]{8})",
          "account_type": "credit_card",
          "pattern_UID": "160019",
          "sort_UID": "160019",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|account|a\\/c no.) \\d*x*(\\d{4}) .*credited.* by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards salary.* (?:bal|balance|avl\\. bal):\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "160021",
          "sort_UID": "160010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited for (?:INR|Rs)[\\.,:\\s]*([\\d,-]+\\.?\\d{0,2}) on (.*?) and debited from.*?(upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "160022",
          "sort_UID": "160022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)we have received your payment of (?:INR|Rs)[\\.,:\\s]*([\\d,-]+\\.?\\d{0,2}) towards.*?credit card number ending (\\d{4})\\.",
          "account_type": "credit_card",
          "pattern_UID": "160023",
          "sort_UID": "160023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)Thank you for using.*?(?:x+)?(\\d{4}) on .* for (INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{2})[ \\.]at (.*?)\\.\\s*avl limit[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "160024",
          "sort_UID": "160001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "amount": {
              "group_id": 3
            },
            "currency": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)StanChart Credit Card transaction for (INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{2}) on [\\d\\/]+ at (.*?) has been processed without additional",
          "account_type": "credit_card",
          "pattern_UID": "160025",
          "sort_UID": "160025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 2
            },
            "currency": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*\\d*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) and credited to vpa (.*?)\\s*\\((upi\\s*ref\\s*no\\s*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "160026",
          "sort_UID": "160026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i) x*\\d*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\s*(?:and credited to a\\/c no[\\.x\\w]+|\\s)\\s*on\\s*[\\w\\-]+[\\s\\.]+\\((rtgs|imps) Ref no\\s*([\\d\\-]+)",
          "account_type": "bank",
          "pattern_UID": "160027",
          "sort_UID": "160027",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 4,
              "type_group_id": 3,
              "type_rules": [
                {
                  "value": "rtgs",
                  "is_rtgs": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]* x*(\\d{4}) is credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\-]+stanchart",
          "account_type": "bank",
          "pattern_UID": "160028",
          "sort_UID": "160028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000016",
      "senders": [
        "FROMSC",
        "MNHTAN",
        "020001",
        "SCBANK"
      ]
    },
    {
      "full_name": "TATA Credit Card",
      "name": "TATA",
      "patterns": [
        {
          "regex": "(?i)(?:Transaction|trxn) of (INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:made)?\\s*on TATA (?:Credit)?\\s*Card X*(\\d{2,4}) .*at (.*) on",
          "account_type": "credit_card",
          "pattern_UID": "250101",
          "sort_UID": "250101",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)Total amt\\.? due.*? (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*min.? amt.*? (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is payable by (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "250102",
          "sort_UID": "250102",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "min_due_amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy'.'"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?spent .* card ending with X*(\\d{4}).*at (.*) on \\d{2}\\/\\d{2}\\/\\d{2}",
          "account_type": "credit_card",
          "pattern_UID": "250104",
          "sort_UID": "250104",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)received payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) via.*?credited to your tata card ending x*(\\d{4})\\..*?available limit is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "250105",
          "sort_UID": "250105",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)received payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) via.*?credited to your tata card ending x*\\d{1,2}\\..*?available limit is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "250106",
          "sort_UID": "250106",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        }
      ],
      "sender_UID": "90000025",
      "senders": [
        "TATACD"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09223008586",
                  "09223009292"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Union Bank of India",
      "name": "Union Bank",
      "patterns": [
        {
          "regex": "(?i)\\*+\\d*(\\d{4}) (?:is)?\\s*debited.*(?:INR|Rs)[\\.,\\s\\:]*([\\d,]+\\.?\\d{0,2}) on[\\d\\-\\s\\:]*(?:by)? (Debit Card Swipe|.*?)[\\.\\s].*?(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "200001",
          "sort_UID": "200001",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "value": "debit card swipe"
                },
                {
                  "acc_type_override": "bank",
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "pos_override": "Debit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)avl bal.*x+\\d+(\\d{4}) is (?:INR|Rs) cr [\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) as on (.*[ap].?m.?) \\w{3}",
          "account_type": "bank",
          "pattern_UID": "200002",
          "sort_UID": "200002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss a"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(Cheque No:.*) is.* \\*+\\d*(\\d{4}) to debit (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on .* bal (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "200003",
          "sort_UID": "200003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i) x*\\d*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on ([\\d,-]*) and .*(IMPS Ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "200004",
          "sort_UID": "200004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)\\*+\\d*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on ([\\d,-]*) by .*",
          "account_type": "bank",
          "pattern_UID": "200005",
          "sort_UID": "200005",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)\\*+\\d*(\\d{4}) .*(credited|debited).*(?:INR|Rs)[\\.,\\s\\:]*([\\d,]+\\.?\\d{0,2}) on .* bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "200006",
          "sort_UID": "200014",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "net_banking",
                  "value": "debited"
                },
                {
                  "txn_type": "credit",
                  "value": "credited",
                  "pos_override": "Credit",
                  "set_no_pos": true
                }
              ],
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)present balance .* \\*+\\d*(\\d{4}) is (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})\\.",
          "account_type": "bank",
          "pattern_UID": "200007",
          "sort_UID": "200007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)\\*+\\d*(\\d{4}) is debited (?:by|for) (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on .* for (RTGS|NEFT).*vide (utr no[\\s\\.]*(\\d+))\\.",
          "account_type": "bank",
          "pattern_UID": "200008",
          "sort_UID": "200008",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 3,
              "type_rules": [
                {
                  "value": "neft",
                  "is_neft": true
                },
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on (\\d{2} [a-z]{3} \\d{4}, \\d{2}\\:\\d{2}\\:\\d{2})\\s*\\((upi ref no (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "200009",
          "sort_UID": "270013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy, HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)\\*+\\d*(\\d{4}) .*credited.*(?:INR|Rs)[\\.,\\s\\:]*([\\d,]+\\.?\\d{0,2}) on .*(?:sender|by (?:neft|rtgs))[\\s\\:\\/](.*?)\\.utr.*? bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "200010",
          "sort_UID": "200010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)\\*+\\d*(\\d{4}) .*credited by lpg subsidy of.*(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on .* bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "200011",
          "sort_UID": "200011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "LPG Subsidy",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\**\\d*(\\d{4}) is credited .*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*? reversal.*?\\((upi ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "200012",
          "sort_UID": "270015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)\\*+\\d*(\\d{4}) .*credited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on .*by salary.*? bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "200013",
          "sort_UID": "200013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)\\*+\\d*(\\d{4}) .*credited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on .*by .*?((?:atm|mobile banking|imps|pos) rev| refunds).*? bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "200014",
          "sort_UID": "200006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "pos",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\**\\d*(\\d{4}) is credited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(?:a\\/c linked to mobile [x\\d\\s\\.]+|\\d{2} \\w{3} \\d{4}[\\s\\,]*[\\d\\:]+) \\(((upi|imps) ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "200015",
          "sort_UID": "200015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)your .*?a\\/c no.? \\d*x*\\d*(\\d{4}) is credited with .*?(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) by (.*?)\\s*\\((upi ref no (\\w+))\\)",
          "account_type": "bank",
          "pattern_UID": "200016",
          "sort_UID": "200016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(cheque no[\\s\\.]*\\d+) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) lodged in.*?for credit of ac x*(\\d{4}) is credited[\\s\\.]*union",
          "account_type": "bank",
          "pattern_UID": "200017",
          "sort_UID": "200017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "note": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)\\*+\\d*(\\d{4}) .*?credited for .*(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on [\\d\\:\\-\\s]+ by mob bk[\\s\\.]*avl bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "200018",
          "sort_UID": "200018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) was spent .*credit card ending \\d*x*(\\d{4}) at (.*) on (\\d{2}\\-[a-z]{3}\\-\\d{2} \\d{2}\\:\\d{2}\\:\\d{2})[\\s\\.]*Avail Limit is [\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*union",
          "account_type": "credit_card",
          "pattern_UID": "200019",
          "sort_UID": "200019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)transaction for (?:INR|Rs)[\\.,\\s\\|]*([\\d,]*\\.?\\d{0,2}) to (.*?) has been completed successfully with (reference id (\\d+))",
          "account_type": "bank",
          "pattern_UID": "200020",
          "sort_UID": "200020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)lien of (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) due to (.*?) has been removed from your account \\**\\d*(\\d{4})",
          "account_type": "bank",
          "pattern_UID": "200021",
          "sort_UID": "200021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2,
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(Chq.no.\\d+) fvg\\.(.*) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on a\\/c no\\.x+(\\d{4}) is recd in clg",
          "account_type": "bank",
          "pattern_UID": "350014",
          "sort_UID": "350026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{2,4}).*debited.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*[\\s\\S]*(?:balance is|bal)\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350004",
          "sort_UID": "350013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x+(\\d{4}).*debited.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*thru upi to (\\w*).*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350013",
          "sort_UID": "350004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*debited.*x+(\\d{4}) on (\\d{2}-\\d{2}-\\d{4})\\..*balance is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350005",
          "sort_UID": "350005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)balance .* x*(\\d{4}) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350007",
          "sort_UID": "350007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*credited.* x*(\\d{4}).* balance is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350008",
          "sort_UID": "350021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|a\\/c no.) x*(\\d{2,4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*(?:balance is|bal).*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350009",
          "sort_UID": "350022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)deposited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* x*(\\d{4}) .* balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350010",
          "sort_UID": "350010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)ab credit card.*? \\d*x*(\\d{4}) will be .*total amt due is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2}) and min amt due is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\.]*(?:due|pay by) date (\\d{2}-\\d{2}-\\d{4}|immediate)",
          "account_type": "credit_card",
          "pattern_UID": "350012",
          "sort_UID": "350012",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "immediate"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) was spent .*AB card ending \\d*x*(\\d{4}) at (.*) on (\\d{2}\\-[a-z]{3}\\-\\d{2} \\-?\\s*\\d{2}\\:\\d{2}\\:\\d{2})\\. Avail Limit is [\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "350015",
          "sort_UID": "350015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy - HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) withdrawn from a\\/c x*(\\d{4}) on .*at (.*?atm).*avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "350016",
          "sort_UID": "350016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)amount of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*is reversed (?:through|thru) ATM.*a\\/c balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "350017",
          "sort_UID": "350017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) txn done on card x*(\\d{4}) on .* at (.*) pos\\/ecom.*avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "350018",
          "sort_UID": "350018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(pos tran|imps).*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?is reversed.*?(?:a\\/c no\\.|card) x+(\\d{3,4}) on.*A\\/c Bal.*?(?:is)?\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "350019",
          "sort_UID": "350019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "acc_type_override": "bank",
                  "txn_type": "credit",
                  "value": "imps"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 1
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c x*(\\d{3,4}) is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?(?:sent by|from) (.*?)\\s*(?:thru|\\.).*?bal.*?is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350020",
          "sort_UID": "350020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(.*?interest) of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*credited.* x*(\\d{4}).* balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*\\-\\s*andhra",
          "account_type": "bank",
          "pattern_UID": "350021",
          "sort_UID": "350008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_interest",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|a\\/c no.) x*(\\d{2,4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?upi from (.*)\\..*?(?:balance is|bal) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350022",
          "sort_UID": "350009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}) .*credited to your credit card.*?(\\d{4}).*?Avl Bal[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "350023",
          "sort_UID": "350023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}) credited to loan a\\/c x*(\\d{3,4}) on.*?bal is (?:INR|Rs)?[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})[\\s\\-]*andhra",
          "account_type": "loan",
          "pattern_UID": "350024",
          "sort_UID": "350024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(cheque no[\\s\\.]*\\d+) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) lodged in.*?for credit of ac x*(\\d{4}) is credited[\\s\\.]*andhra",
          "account_type": "bank",
          "pattern_UID": "350025",
          "sort_UID": "350025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "note": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c x*(\\d{3,4}) is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?sent by (.*?refund.*?)\\s*thru.*?bal.*?is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "350026",
          "sort_UID": "350014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)\\.*(\\d{3}) .*debited.* (?:INR|Rs)[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2}) on.* (?:by|for) (.*)\\. avl bal is \\+?[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "270003",
          "sort_UID": "270003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "Cheque",
                  "value": "clg",
                  "txn_type": "cheque"
                },
                {
                  "pos_override": "Cheque",
                  "value": "cheque",
                  "txn_type": "cheque"
                },
                {
                  "pos_override": "Net Banking",
                  "txn_type": "net_banking",
                  "value": "trf"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)\\.*(\\d{3}) .*credited.* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*avl (?:bal|balance) (?:is|\\+)\\s*(?:INR|Rs|)\\s*\\+?[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "270006",
          "sort_UID": "270006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)avl bal in your a\\/c [x\\d\\.\\*]*(\\d{3}) in .* \\+?[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}) as on",
          "account_type": "bank",
          "pattern_UID": "270008",
          "sort_UID": "270008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on.*credited to a\\/c.*\\((UPI Ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "270013",
          "sort_UID": "200009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? \\**\\d*\\.*\\d*(\\d{3}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on.* of (.*?) is credited \\((IMPS Ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "270014",
          "sort_UID": "270014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*\\d*(\\d{4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*for reversal of transaction \\((upi ref no.? (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "270015",
          "sort_UID": "200012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?debited from a\\/c no[\\s\\.x\\d]+\\((upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "270016",
          "sort_UID": "270016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        }
      ],
      "sender_UID": "90000020",
      "senders": [
        "UNIONB",
        "IPRSMS"
      ]
    },
    {
      "full_name": "Vodafone",
      "name": "Vodafone",
      "patterns": [
        {
          "regex": "(?i)Your.*bill .*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*due (?:on|for|before|is)\\s*([^\\s]*)",
          "account_type": "phone",
          "pattern_UID": "50001",
          "sort_UID": "50001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "format": "dd.MM.yy"
                },
                {
                  "format": "dd-MM-yy"
                },
                {
                  "format": "dd-MMM-yy"
                },
                {
                  "format": "yyyyMMdd"
                },
                {
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)summary of your vodafone bill [\\s\\S]*(?:total bill due|amount payable\\s*): (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})(?:\\/-,| and)\\s*(?:due|due by) (.*?)\\s*\\.",
          "account_type": "phone",
          "pattern_UID": "50004",
          "sort_UID": "50004",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "'immediate'"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "9000005",
      "senders": [
        "VFCARE",
        "VDFONE",
        "VODAFONE",
        "DAFONE",
        "111",
        "VICARE"
      ]
    },
    {
      "full_name": "Walnut",
      "name": "Walnut",
      "patterns": [
        {
          "regex": "(?i).*Walnut.*Code is ([a-z0-9]{6,10})",
          "account_type": "generic",
          "pattern_UID": "390001",
          "sort_UID": "390001",
          "sms_type": "walnut",
          "data_fields": {
            "otp": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\/\\-]* for walnut prime.*?is due on (\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "loan",
          "pattern_UID": "390002",
          "sort_UID": "390002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000039",
      "senders": [
        "WALNUT"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09223920000"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Yes Bank",
      "name": "YesBank",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*(-?[\\d,]*\\.?\\d{0,2}) debited .*XX(\\d{4}).*(ATD|PCD|ATW|ATS):.*:.*:(.*) Tot avbl bal-(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "190001",
          "sort_UID": "190001",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atd"
                },
                {
                  "txn_type": "debit_card",
                  "value": "pcd"
                },
                {
                  "txn_type": "debit_atm",
                  "value": "atw"
                },
                {
                  "txn_type": "debit_atm",
                  "value": "ats"
                }
              ],
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*debited.*x+(\\d{4}).*(ECS|ACH|NET|Clg| RD).*(?:dr|tp|for|ACH|:|- )(.*)tot.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190002",
          "sort_UID": "190002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "clg",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "ecs",
                  "value": "ecs"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                },
                {
                  "txn_type": "net_banking",
                  "value": " rd",
                  "pos_override": "Net Banking"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*debited.*x+(\\d{4}).*-(funds|neft|rtgs).*(?:\\d|-)(.*).*tot.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190003",
          "sort_UID": "190003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i).*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*debited.*x+(\\d{4}).*-((?:chq|cts).*) tot.*-(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190004",
          "sort_UID": "190004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited to Ac x+(\\d{4}).*-(.*) tot.*(?:INR|RS|\\-)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on",
          "account_type": "bank",
          "pattern_UID": "190006",
          "sort_UID": "190006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:bal|balance) as on ([\\w\\d:\\- ]*) in.*x*(\\d{4}).* is (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190008",
          "sort_UID": "190026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "group_id": 1,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*debited.*x+(\\d{4}) on.*\\d{2}-(.*)tot.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190009",
          "sort_UID": "190009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(?:credited to|deposited in your) (?:a\\/c no.|ac\\s)x*(\\d{4}) .* (?:account|avbl) (?:bal-|balance\\sis\\s|bal\\sis\\s)(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190010",
          "sort_UID": "190029",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been spent .* credit card.* ending with (\\d{4}) at (.*) on (.*?)\\. avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "190013",
          "sort_UID": "190013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy 'at' hh:mm:ss a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss 'IST'"
                }
              ]
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)statement .* credit card ending (\\d{4}) has .*total (?:amount)?\\s*due:\\s*(?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})\\.\\s*(?:minimum amount|min) due:\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) and payment due date:\\s*(\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "credit_card",
          "pattern_UID": "190014",
          "sort_UID": "190014",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs)[\\s.,]*([\\d,]*\\.?\\d{2}) has been credited\\/reversed .*card ending with\\s*(\\d{4}) for .*done at (.*) on",
          "account_type": "credit_card",
          "pattern_UID": "190015",
          "sort_UID": "190015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)payment.*credit card ending\\s*(?:with)? (\\d{4}) is due on (.*)\\. (?:minimum|min amount|min) due\\s*(?:is)? (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) & Total (?:outstanding is|due) (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\. plea",
          "account_type": "credit_card",
          "pattern_UID": "190016",
          "sort_UID": "190016",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 3
            },
            "amount": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)Your request for the payment for (.*) .*for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?has been processed",
          "account_type": "bill_pay",
          "pattern_UID": "190017",
          "sort_UID": "190017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "bill_pay",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Bill payments"
            },
            "pos": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*\\d*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*(imps ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "190018",
          "sort_UID": "190018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)bal.*?in (?:your.*?a\\/c|a\\/c)\\. (?:no\\.|ending)\\s*x*\\d*(\\d{4}) (?:as on|on|has gone).*?is (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190019",
          "sort_UID": "190019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(?:credited to|deposited in your) (?:a\\/c no.|ac\\s)x*(\\d{4}) .*?((?:imps|rtgs cr|neft cr)[\\s\\/\\-].*?[\\/\\-]+(?:m\\/s|a\\/c|na\\-|ok\\-|cms\\-)?(.*?)[\\/\\-].*?)\\.tot.*?(?:account|avbl)\\s*(?:bal-|balance\\sis\\s|bal\\sis\\s)(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190020",
          "sort_UID": "190020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(?:credited to|deposited in your) (?:a\\/c no.|ac\\s)x*(\\d{4}) .*(upi\\/.*?from\\:(.*?)\\/.*?)\\.tot.*?(?:account|avbl)\\s*(?:bal-|balance\\sis\\s|bal\\sis\\s)(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190021",
          "sort_UID": "190021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(?:credited to|deposited in your) (?:a\\/c no.|ac\\s)x*(\\d{4}) .*?salary.*?(?:account|avbl)\\s*(?:bal-|balance\\sis\\s|bal\\sis\\s)(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190022",
          "sort_UID": "190022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)salary of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(?:credited to|deposited in your) (?:a\\/c no.|ac\\s)x*(\\d{4}) .* (?:account|avbl)\\s*(?:bal-|balance\\sis\\s|bal\\sis\\s)(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190023",
          "sort_UID": "190023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)chq of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(?:credited to|deposited in your) (?:a\\/c no.|ac\\s)x*(\\d{4}) .* (?:account|avbl)\\s*(?:bal-|balance\\sis\\s|bal\\sis\\s)(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190024",
          "sort_UID": "190024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(?:credited to|deposited in your) (?:a\\/c no.|ac\\s)x*(\\d{4}) .*?pca\\:.*?\\:.*?\\:(.*?)[\\s\\.]*tot (?:account|avbl)\\s*(?:bal-|balance\\sis\\s|bal\\sis\\s)(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190025",
          "sort_UID": "190025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(?:credited to|deposited in your) (?:a\\/c no.|ac\\s)x*(\\d{4}) .*(?:refund|rev of|reversal[\\s\\_]|\\-\\s*rev\\:\\s|rev of (?:upi pos)|(?:atm|crm) txn rev\\s|\\sneft rev\\-|rev\\:imps).*(?:account|avbl)\\s*(?:bal-|balance\\sis\\s|bal\\sis\\s)(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190026",
          "sort_UID": "190008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)emi of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for .*?loan a\\/c (?:no)?[\\s\\.]*[a-z\\*]*(\\d{4}) (?:is due on|on) (\\d{2}\\-\\w{3}\\-\\d{2,4})\\.\\s*please maintain",
          "account_type": "loan",
          "pattern_UID": "190027",
          "sort_UID": "190027",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(?:credited to|deposited in your) (?:a\\/c no.|ac\\s)x*(\\d{4}) .*?\\d{2}\\:\\d{2}\\:\\d{2}[\\s\\-]*(.*?)[\\s\\.]tot.*?(?:account|avbl)\\s*(?:bal-|balance\\sis\\s|bal\\sis\\s)(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190028",
          "sort_UID": "190028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(?:credited to|deposited in your) (?:a\\/c no.|ac\\s)x*(\\d{4}) .*?ref dtd\\:.*?\\:(.*?)\\\\.*?(?:account|avbl)\\s*(?:bal-|balance\\sis\\s|bal\\sis\\s)(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "190029",
          "sort_UID": "190010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited .*credit card ending (\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "190030",
          "sort_UID": "190030",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)payment received for amount (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for.*credit card ending with x*\\d*(\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "190031",
          "sort_UID": "190031",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\d*(\\d{4}) is credited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?\\((imps ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "190032",
          "sort_UID": "190032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)you have withdrawn (?:INR|Rs|\\s)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?your debit card (\\d{4}) at.*?avl bal (?:INR|Rs|\\s)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "190033",
          "sort_UID": "190033",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)spent (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on your debit card (\\d{4}) at \\w*\\, (.*) on .*?\\.\\s*avl bal (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "190034",
          "sort_UID": "190034",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)transaction of (INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) approved on your .* credit card ending with (\\d{4}) on ([\\d\\-]+ at [\\d\\:]+ (?:am|pm)) at (.*?) has exceeded the credit limit",
          "account_type": "credit_card",
          "pattern_UID": "190035",
          "sort_UID": "190035",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 5
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy 'at' hh:mm:ss a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss 'IST'"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) deducted from your (?:yes pay)?.*? wallet.*?(txn ref[\\s\\-]*(\\d+))\\) (?:at|towards) (.*?)\\.\\s*balance[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "account_name_override": "YES PAY",
          "set_account_as_expense": false,
          "pattern_UID": "190036",
          "sort_UID": "190036",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "note": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) added to your yes pay wallet.*?balance[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "account_name_override": "YES PAY",
          "set_account_as_expense": false,
          "pattern_UID": "190037",
          "sort_UID": "190037",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Wallet Reload",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)your account has been debited towards (.*?) for (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:and|on)",
          "account_type": "bank",
          "pattern_UID": "190038",
          "sort_UID": "190038",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(cheque \\d+) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) from .*?a\\/c no[\\.\\s]*x*(\\d{4}) [\\s\\-]*(?:cts clg)? (.*?) has been debited to your account",
          "account_type": "bank",
          "pattern_UID": "190039",
          "sort_UID": "190039",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)prepaid wallet has been debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for imps .*?transaction id (\\w+) warm",
          "account_type": "prepaid",
          "account_name_override": "YES PAY",
          "set_account_as_expense": false,
          "pattern_UID": "190040",
          "sort_UID": "190040",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "network_reference_id": {
              "group_id": 2,
              "is_imps": true
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) spent on your card [\\dx]*(\\d{4}) on .*wallet debited by",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Multi Currency Travel Card",
          "pattern_UID": "190041",
          "sort_UID": "190041",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "currency": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000019",
      "senders": [
        "YESBNK"
      ]
    },
    {
      "full_name": "Aircel",
      "name": "Aircel",
      "patterns": [
        {
          "regex": "(?i).*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*due (?:on) ([a-z0-9-.]+)",
          "account_type": "phone",
          "pattern_UID": "450001",
          "sort_UID": "450001",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "group_id": -1
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy'.'"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": true,
                  "format": "today"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000045",
      "senders": [
        "AIRCEL"
      ]
    },
    {
      "full_name": "Reliance Communications",
      "name": "RCom",
      "patterns": [
        {
          "regex": "(?i).*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*due (?:by|on) ([0-9a-z-/]+)",
          "account_type": "phone",
          "pattern_UID": "460004",
          "sort_UID": "460004",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "group_id": -1
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000046",
      "senders": [
        "RELIANCE",
        "53738"
      ]
    },
    {
      "patterns": [
        {
          "regex": "(?i)A\\/c \\dX+(\\d+) .*debited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) total bal: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .* bal: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "470001",
          "sort_UID": "470001",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)your A\\/c \\dX+(\\d+) is debited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) bal after debit is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) cr.(minimum bal not maintained)",
          "account_type": "bank",
          "pattern_UID": "470002",
          "sort_UID": "470002",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type": "net_banking",
            "note": {
              "group_id": 4
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .* centralbank (credit card) ending ([\\d]+) on ([\\d\\:\\-]*)at (.*)avl bal - (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d+).curr o\\/s - (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d+)",
          "account_type": "credit_card",
          "pattern_UID": "470006",
          "sort_UID": "470006",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd:hh:mm"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 5
            },
            "pan": {
              "group_id": 3
            },
            "outstanding_balance": {
              "group_id": 7
            },
            "account_balance": {
              "group_id": 6
            },
            "transaction_type": "credit_card"
          }
        },
        {
          "regex": "(?i).* bill for card no \\d+x+(\\d+) is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is due for payment on (.*). Pls.*centralcard",
          "account_type": "credit_card",
          "pattern_UID": "470007",
          "sort_UID": "470007",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)stmt.* ending (\\d+) .* (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) total due (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).* on ([\\d\\-\\w]+)",
          "account_type": "credit_card",
          "pattern_UID": "470008",
          "sort_UID": "470008",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 3
            },
            "min_due_amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)a\\/c:x*\\d*(\\d{4}) clr bal (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "470009",
          "sort_UID": "470009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) (?:is |)credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* clr bal: (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "470011",
          "sort_UID": "470011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i) loan account no:(\\d*) repayment of (?:Rs|INR)[\\s.,:]*([\\d,]*\\.?\\d{2}) due (?:on|for) (.*?)\\.",
          "account_type": "loan",
          "account_name_override": "CNTRLBK Loan",
          "pattern_UID": "470013",
          "sort_UID": "470013",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": true,
                  "format": ""
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)your vpa.*linked to central.*account no.? x*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) and credited to vpa (.*) \\((upi ref no (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "470014",
          "sort_UID": "470014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:debit card|card) (?:ending)?\\s*x*(\\d{4}) used (?:on|at) (pos\\s*|ecom\\s*|atm).*? at (.*) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) bal (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "470015",
          "sort_UID": "470015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "value": "pos"
                },
                {
                  "txn_type": "debit_atm",
                  "value": "atm"
                },
                {
                  "txn_type": "debit_card",
                  "value": ""
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 4
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c credited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?failed.*?(pos|ecom|atm).*?at (.*?) bal (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "470016",
          "sort_UID": "470016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 2
            },
            "transaction_category": "walnut_refund",
            "pos": {
              "value": "Debit Card Reversal",
              "set_no_pos": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?credited to your a\\/c[\\s\\S]*\\d*x*(\\d{4}) on.*?(neft|rtgs) vide (ref no\\.(\\w+))\\s*by\\.(.*?)$",
          "account_type": "bank",
          "pattern_UID": "470017",
          "sort_UID": "470017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 6
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 6
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 3,
              "type_rules": [
                {
                  "value": "neft",
                  "is_neft": true
                },
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)your account number x*(\\d{4}) has been credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?funds transfer on",
          "account_type": "bank",
          "pattern_UID": "470018",
          "sort_UID": "470018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\/\\- received.*?and credited to your card.*?available limit is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "470019",
          "sort_UID": "470019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(cheque no[\\s\\:]*\\d+) of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is credited to[\\s\\S]*a\\/c no\\:\\d*x*(\\d{4}) on.*?avl[\\s\\.]*bal[\\s\\:]*(?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "470020",
          "sort_UID": "470020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your account x*(\\d{4}) has been credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for (.*?) on [\\d\\/]+",
          "account_type": "bank",
          "pattern_UID": "470021",
          "sort_UID": "470021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)card ending\\s*x*(\\d{4}) used at atm (.*?) for\\s*(?:cash wdl of|txn) (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{0,2}) bal (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "470022",
          "sort_UID": "470022",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "transaction_type": "debit_atm",
            "amount": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)card ending x*(\\d{4}) used (?:for|at) (?:pos|ecom) (.*?) for txn (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) bal (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "470023",
          "sort_UID": "470023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "amount": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)charges of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?have been deducted from a\\/c[\\s\\:x\\d]*(\\d{4}) for not maintaining",
          "account_type": "bank",
          "pattern_UID": "470024",
          "sort_UID": "470024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c [\\dx]*(\\d{4}) debited for neft of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) to .*?ref no[\\s\\:]*(\\w+)",
          "account_type": "bank",
          "pattern_UID": "470025",
          "sort_UID": "470025",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 3,
              "is_neft": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.\\dx]*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .*?and .*?credited.*imps ref no[\\s\\.]*(\\d+)",
          "account_type": "bank",
          "pattern_UID": "470026",
          "sort_UID": "470026",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 3,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c[\\s\\.\\dx]*(\\d{4}) is credited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .*?linked to mobile.*imps ref no[\\s\\.]*(\\d+)",
          "account_type": "bank",
          "pattern_UID": "470027",
          "sort_UID": "470027",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 3,
              "is_imps": true
            }
          }
        }
      ],
      "sender_UID": "90000047",
      "full_name": "Central Bank of India",
      "name": "CNTRLBK",
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09555244442"
                ]
              }
            ]
          }
        ]
      },
      "senders": [
        "CENTBK",
        "CBIOTP"
      ]
    },
    {
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) .*spent .*card \\d*x*(\\d+) on ([\\d+\\-\\:\\,]*) at (.*). (?:avl|Available).* (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "490001",
          "sort_UID": "490001",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "group_id": 4
            },
            "transaction_type": "debit_card",
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy,HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) .*withdrawn.* card \\d*x*(\\d+) on ([\\d+\\-\\:\\,]*) at (?:\\+)*(.*)(?:atm).*(?:available|avl).* (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "490002",
          "sort_UID": "490002",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "transaction_type": "debit_atm",
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy,HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|Account) .+(\\d{4}) .*debited (?:by|with) (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) by (?:uco bank)?\\s*(ebanking|mbanking|transfer|clearing|cash).*?(?:avl|available).*?(?:INR|Rs)*[\\.:,\\s|v]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "490004",
          "sort_UID": "490014",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "clearing",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": "ebanking",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": "mbanking",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": "cash",
                  "pos_override": "Debit"
                },
                {
                  "txn_type": "net_banking",
                  "value": "transfer",
                  "pos_override": "Net Banking"
                }
              ],
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(pos|mobile banking) .* on ([\\d\\-]+).* reversed.* (?:account|acc|a\\/c)*(?:no|number)?(?:\\.)* (?:[x+\\d]*)(\\d{4}) .* (?:with|by) (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})\\.\\s*(?:avl|available) (?:bal|balance).*? (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "490006",
          "sort_UID": "490006",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Debit Card Reversal",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "mobile banking",
                  "pos_override": "Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 1
            },
            "transaction_category": "walnut_refund",
            "amount": {
              "group_id": 4
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:avl|available) (?:bal|balance) .* on ([\\d\\w\\-\\/\\:\\s]+)(?: ist) for .* (?:no|number)(?:\\.)* x+\\d*(\\d{4}).* (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "490008",
          "sort_UID": "490008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "group_id": 1,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x*(\\d{4}) .*credited.*?(?:by|with) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .* (?:bal|balance).*? (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "490009",
          "sort_UID": "490009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)atm .* on ([\\d\\-]+) .*credited (?:with|by)* (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}). (?:avl|available) (?:bal|balance).*? (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "490011",
          "sort_UID": "490011",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 1,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "pan": {
              "value": "XXXX"
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your (?:a\\/c no)[\\s\\.]*X+(\\d{4}).*debited.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{1,2}).*credited.\\((IMPS REf no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "490012",
          "sort_UID": "490012",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|Account) x*\\d*(\\d{4}).*debited (?:by|with) (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}).*?to (?:self)?\\s*(.*) by (?:uco bank)?\\s*(?:ebanking|mbanking).*(?:avl|available).* (?:INR|Rs)*[\\.:,\\s|v]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "490013",
          "sort_UID": "490013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|Account) .+(\\d{4}) .*debited (?:by|with) (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) by (ebanking|mbanking|transfer|clearing|cash).*(?:avl|available).*?(?:INR|Rs)*[\\.:,\\s|v]*([\\d,-]+\\.?\\d{0,2}).*(\\d{4}\\-\\d{2}\\-\\d{2} [\\d{2}\\:]*)",
          "account_type": "bank",
          "pattern_UID": "490014",
          "sort_UID": "490004",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "clearing",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": "ebanking",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": "mbanking",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": "cash",
                  "pos_override": "Debit"
                },
                {
                  "txn_type": "net_banking",
                  "value": "transfer",
                  "pos_override": "Net Banking"
                }
              ],
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:bal|cr\\,).*?a\\/c no x*\\d*(\\d{4}) is (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "490015",
          "sort_UID": "490015",
          "reparse": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?ucopay wallet no[\\s\\.]*x*(\\d{4}) on.*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "account_name_override": "Ucopay",
          "set_account_as_expense": false,
          "pattern_UID": "490016",
          "sort_UID": "490016",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been received.*?ucopay no[\\s\\.]*x*(\\d{4}).*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "account_name_override": "Ucopay",
          "set_account_as_expense": false,
          "pattern_UID": "490017",
          "sort_UID": "490017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)ucopay wallet no[\\s\\.]*x*(\\d{4}) has been debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) o.*?ucopay balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "account_name_override": "Ucopay",
          "set_account_as_expense": false,
          "pattern_UID": "490018",
          "sort_UID": "490018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}) debited with (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*?by uco\\-upi\\.\\s*Avl bal (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "490019",
          "sort_UID": "490019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000049",
      "full_name": "UCO Bank",
      "name": "UCO",
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09278792787"
                ]
              }
            ]
          }
        ]
      },
      "senders": [
        "UCOBNK"
      ]
    },
    {
      "patterns": [
        {
          "regex": "(?i)[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}).* debited to .*(?: no | number | no. )\\d*x+\\d*(\\d{4}) (?:by|through|vide) ([neft|rtgs].*) on (\\d{2}\\-[a-z]{3}\\-\\d{2} \\d{2}:\\d{2}:\\d{2}).*credit (?:INR|Rs) [\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500001",
          "sort_UID": "500001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}).* debited to .*(?: no | number | no. )\\d*x+\\d*(\\d{4}) (?:by|through|vide) ([neft|rtgs].*) on (\\d{2}\\-[a-z]{3}\\-\\d{2} \\d{2}:\\d{2}:\\d{2}).*debit (?:INR|Rs) [\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500010",
          "sort_UID": "500002",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) (?:INR|Rs) .* debited to .*(?: no | number | no. )\\d*x+\\d*(\\d{4}) (?:by|through) (.*)(?:[. \\s])on ([\\d\\w\\-: ]*)(?:\\.|) now.* (?:INR|Rs) [\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500002",
          "sort_UID": "500003",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm transaction.",
                  "pos_override": "ATM",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "cash",
                  "value": "cash transaction",
                  "pos_override": "Cash",
                  "acc_type_override": "bank"
                },
                {
                  "txn_type": "debit_card",
                  "value": "pos transaction.",
                  "pos_override": "Debit Card Purchase",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "net_banking",
                  "value": "net banking transaction.",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": "(sweep) fund transfer",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": "fund transfer",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "debit_card",
                  "value": "eft / atm card transaction.",
                  "pos_override": "Debit Card Purchase",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "net_banking",
                  "value": "gbm transaction",
                  "pos_override": "Net Banking"
                }
              ],
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) (?:INR|Rs) .* debited to .*(?: no | number | no. )\\d*x+\\d*(\\d{4}) (?:by|through) (.*)(?:.*) on ([\\d\\w\\-: ]*) for",
          "account_type": "debit_card",
          "pattern_UID": "500003",
          "sort_UID": "500004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "value": "pos transaction.",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "debit_atm",
                  "value": "atm transaction.",
                  "pos_override": "ATM"
                }
              ],
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)balance in your (?:a\/c|account no) \\d*x*\\d*(\\d{4}).* on ([\\d\\w\\-]*) is (?:credit )*(?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500004",
          "sort_UID": "500005",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MMM-yyyy"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x+\\d{3}(\\d{4}) is\\s*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500005",
          "sort_UID": "500021",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)amount of [\\.,\\s]*([\\d,]*\\.?\\d{0,2}) INR .*credited .* x*\\d*(\\d{4}) by .*balance is (?:debit|credit) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500011",
          "sort_UID": "500018",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:account|a\\/c) \\d*x+\\d*(\\d{4}).*?debited.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on date ([\\da-z\\-]* [\\d\\:]*) by (upi ref no-\\s*(\\d*))",
          "account_type": "bank",
          "pattern_UID": "500012",
          "sort_UID": "500012",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)txn of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was made.*ending with x+(\\d{4}) on (.*) at (.*).now clear balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500013",
          "sort_UID": "500013",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)account x*\\d*(\\d{4}) is credited (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) due to reversal.* (upi ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "500014",
          "sort_UID": "500014",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no\\. x+\\d*(\\d{4}).*debited for (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*) and .*credited \\((imps ref no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "500015",
          "sort_UID": "500015",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yyyy hh:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x+\\d*(\\d{4}) debited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) by (.*) on (.*)\\..*clear balance is credit (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500016",
          "sort_UID": "500016",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "value": "eft/",
                  "pos_override": "Debit Card Purchase",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "debit_atm",
                  "value": "atm txn",
                  "pos_override": "ATM",
                  "acc_type_override": "debit_card"
                },
                {
                  "pos_override": "Cheque",
                  "value": "chq",
                  "txn_type": "cheque"
                }
              ],
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)amount of[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})\\s(?:INR|Rs).*?debited to a\\/c no x*(\\d{4}) for (.*?) on(.*?)\\..*?clear balance .*?(?:INR|Rs) [\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500017",
          "sort_UID": "500017",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)amount of [\\.,\\s]*([\\d,]*\\.?\\d{0,2}) INR .*credited .* x*\\d*(\\d{4}) by interest payment.*balance is (?:debit|credit) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "500018",
          "sort_UID": "500011",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_interest",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit Interest",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your (?:account|a\\/c no)[\\s\\.]*x*\\d*(\\d{4}) is credited (?:by|with)?\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (?:date)?\\s*(.*?) by .*?((?:imps|upi) ref no[\\s\\.\\-]*\\d+|imps txn)",
          "account_type": "bank",
          "pattern_UID": "500019",
          "sort_UID": "500019",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(cheque.*?no \\d+) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) deposited.*?cleared.*?credited in your a\\/c x*\\d*(\\d{4})",
          "account_type": "bank",
          "pattern_UID": "500020",
          "sort_UID": "500020",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 1
            }
          }
        }
      ],
      "sender_UID": "90000050",
      "full_name": "Oriental Bank of Commerce",
      "name": "OBC",
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "9915622622"
                ],
                "format": "ACBAL <Account number>"
              }
            ]
          }
        ]
      },
      "senders": [
        "OBCBNK",
        "EMPBNK"
      ]
    },
    {
      "full_name": "GOIBIBO",
      "name": "GOIBIBO",
      "patterns": [
        {
          "regex": "(?i)(?:PNR is|and) (\\w+).*?flight (\\w+).*?, (\\d+ \\w+) from (\\w+) to (\\w+) at (\\d+\\:\\d+)",
          "account_type": "generic",
          "pattern_UID": "510001",
          "sort_UID": "510001",
          "sms_type": "event",
          "reparse": true,
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "GOIBIBO"
            },
            "pnr": {
              "group_id": 1
            },
            "event_location": {
              "group_ids": [
                4,
                5
              ]
            },
            "event_info": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "group_ids": [
                3,
                6
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM HHmm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd MMM HH:mm"
                }
              ]
            },
            "time": {
              "group_id": 6
            },
            "event_reminder_span": {
              "value": 90
            }
          }
        }
      ],
      "sender_UID": "90000051",
      "senders": [
        "GOIBIB"
      ]
    },
    {
      "full_name": "Cleartrip",
      "name": "Cleartrip",
      "patterns": [
        {
          "regex": "(?i)Trip ID:\\s*(\\w+)\\n*.*?\\n*-\\s*(\\d{2}\\s*\\w+\\s*\\d{2}),\\s*(\\d{2}:\\d{2})\\s*(.*?)\\s*PNR:\\s*(\\w+)",
          "account_type": "generic",
          "pattern_UID": "520001",
          "sort_UID": "520001",
          "sms_type": "event",
          "reparse": true,
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "Clear Trip"
            },
            "pnr": {
              "group_id": 5
            },
            "contact": {
              "prefix": "Trip ID:",
              "group_id": 1
            },
            "event_info": {
              "group_id": 4
            },
            "date": {
              "group_id": 2,
              "group_ids": [
                2,
                3
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy HH:mm"
                }
              ]
            },
            "time": {
              "group_id": 3
            },
            "event_reminder_span": {
              "value": 90
            }
          }
        },
        {
          "regex": "(?i).*-\\s*(\\d{2}\\s*\\w+\\s*\\d{2}),\\s*(\\d{2}:\\d{2})\\s*(.*?)\\s*PNR:\\s*(\\w+)",
          "account_type": "generic",
          "pattern_UID": "520002",
          "sort_UID": "520002",
          "sms_type": "event",
          "reparse": true,
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "Clear Trip"
            },
            "pnr": {
              "group_id": 4
            },
            "event_info": {
              "group_id": 3
            },
            "date": {
              "group_id": 1,
              "group_ids": [
                1,
                2
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy HH:mm"
                }
              ]
            },
            "time": {
              "group_id": 2
            },
            "event_reminder_span": {
              "value": 90
            },
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "contact",
                    "child_field": "contact"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Clear Trip"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "sms_time",
                  "match_value": 0,
                  "child_field": {
                    "field": "sms_time"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)trip details\\:[\\s\\S\\-](?:\\-[\\s\\S])?(\\w+.*)[\\s\\S](.*)[\\s\\S]pnr[\\s\\:]*(\\w+)[\\sS][\\w\\,\\s]*?(\\d{1,2}\\s\\w{3}\\s\\d{4})[\\s\\S][\\s\\,]*(\\d{2}\\:\\d{2})\\s\\-",
          "account_type": "generic",
          "pattern_UID": "520003",
          "sort_UID": "520003",
          "sms_type": "event",
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "Clear Trip"
            },
            "pnr": {
              "group_id": 3
            },
            "event_location": {
              "group_id": 1
            },
            "event_info": {
              "group_id": 2
            },
            "date": {
              "group_ids": [
                4,
                5
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy HH:mm"
                }
              ]
            },
            "event_reminder_span": {
              "value": 90
            }
          }
        }
      ],
      "sender_UID": "90000052",
      "senders": [
        "CLRTRP"
      ]
    },
    {
      "full_name": "Yatra",
      "name": "Yatra",
      "patterns": [
        {
          "regex": "(?i)ref number: (\\w+) and .*?origin-destination:(.*?)-(.*?)\\s*,.*?date :([\\d\\w,: -]*),.*?flight number: (.*?),",
          "account_type": "generic",
          "pattern_UID": "530001",
          "sort_UID": "530001",
          "obsolete": true,
          "sms_type": "event",
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "Yatra"
            },
            "event_location": {
              "group_ids": [
                2,
                3
              ]
            },
            "event_info": {
              "group_id": 5
            },
            "contact": {
              "prefix": "Ref no:",
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy hh:mm a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yyyy hh:mm a"
                }
              ]
            },
            "event_reminder_span": {
              "value": 90
            }
          }
        },
        {
          "regex": "(?i)reference number is (\\w+)\\..*? PNR for (.*?)@(\\d{2}:\\d{2}) on (.*?) from (.*?) to (.*?) is (\\w+)",
          "account_type": "generic",
          "pattern_UID": "530002",
          "sort_UID": "530002",
          "sms_type": "event",
          "reparse": true,
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "Yatra"
            },
            "pnr": {
              "group_id": 7
            },
            "event_location": {
              "group_ids": [
                5,
                6
              ]
            },
            "event_info": {
              "group_id": 2
            },
            "contact": {
              "prefix": "Ref no:",
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "group_ids": [
                4,
                3
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "EEE dd MMM yy HH:mm"
                }
              ]
            },
            "time": {
              "group_id": 3
            },
            "event_reminder_span": {
              "value": 90
            }
          }
        },
        {
          "regex": "(?i)PNR for (.*?)@(\\d{2}:\\d{2}) on (.*?)\\s*(?:from|\\,) (.*?) to (.*?) is (\\w+)",
          "account_type": "generic",
          "pattern_UID": "530005",
          "sort_UID": "530005",
          "sms_type": "event",
          "reparse": true,
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "Yatra"
            },
            "pnr": {
              "group_id": 6
            },
            "event_location": {
              "group_ids": [
                4,
                5
              ]
            },
            "event_info": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "group_ids": [
                3,
                2
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "EEE dd MMM yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm"
                }
              ]
            },
            "time": {
              "group_id": 2
            },
            "event_reminder_span": {
              "value": 90
            },
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "contact",
                    "child_field": "contact"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Yatra"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "sms_time",
                  "match_value": 0,
                  "child_field": {
                    "field": "sms_time"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:the|your) airline pnr for (.*?)\\s*\\((.*?) to (.*?) at (\\d{2}\\:\\d{2})\\, (.*?)\\) is (\\w*)",
          "account_type": "generic",
          "pattern_UID": "530006",
          "sort_UID": "530006",
          "sms_type": "event",
          "reparse": true,
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "Yatra"
            },
            "pnr": {
              "group_id": 6
            },
            "event_location": {
              "group_ids": [
                2,
                3
              ]
            },
            "event_info": {
              "group_id": 1
            },
            "date": {
              "group_id": 5,
              "group_ids": [
                5,
                4
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "EEE dd MMM yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm"
                }
              ]
            },
            "time": {
              "group_id": 4
            },
            "event_reminder_span": {
              "value": 90
            },
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "contact",
                    "child_field": "contact"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "Yatra"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "sms_time",
                  "match_value": 0,
                  "child_field": {
                    "field": "sms_time"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000053",
      "senders": [
        "YATRAA"
      ]
    },
    {
      "full_name": "BSNL",
      "name": "BSNL",
      "patterns": [
        {
          "regex": "(?i)landline bill .* (?:account|acc)(?: number| no. )(\\d{10}) .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .* due date is ([\\w\\d\\-]*)",
          "account_type": "phone",
          "pattern_UID": "540002",
          "sort_UID": "540002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)landline bill .*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?(?:account|acc|a\\/c\\.)\\s*(?:number|no\\.)*\\s*x*(\\d{4,10}).*(?:is due by|is due on|by Date is) ([\\w\\d\\-]+)",
          "account_type": "phone",
          "pattern_UID": "540003",
          "sort_UID": "540003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)ph.\\s*no.\\s*(\\d[\\d\\-]+) .*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) o.*due date is ([\\w\\d\\-\\/]*)",
          "account_type": "phone",
          "pattern_UID": "540005",
          "sort_UID": "540005",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .* a\\/c no[\\.,\\s]*(\\d+) is due by ([\\d\\-\\w]*)",
          "account_type": "phone",
          "pattern_UID": "540012",
          "sort_UID": "540012",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000054",
      "senders": [
        "BSNLCARE",
        "BSNL",
        "BSNLKL",
        "BSNLPB",
        "BSNLBB",
        "BSNLBILL",
        "BSNLKT",
        "BSNLDC",
        "BSNLCF",
        "BSNLNZ",
        "NZBSNL",
        "BSNLBR"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "18001035525"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Vijaya Bank",
      "name": "VIJAYA",
      "patterns": [
        {
          "regex": "(?i)a\\/c no[\\.:,\\s]*x+(\\d{3}).* avl[\\.\\s]bal[\\.:,\\s](?:INR|Rs)*[\\.:,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "550001",
          "sort_UID": "550017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|RS)[\\.:,\\s]*([\\d,]*\\.?\\d{0,2}) has.* credit card.* x+(\\d{4}) on (.*) at (.*)avl (?:bal. is|limit-) [\\.:,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "550002",
          "sort_UID": "550002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": true,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]*\\.?\\d{0,2}).*Deposited.+\\*+.+(\\d{4})\\s*(?:Details|det)[\\s\\:]*(.*?)?[\\s\\.]*tot.*?Avl.*Amt:-\\s*([\\d\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "550003",
          "sort_UID": "550015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c \\*+(\\d{4})\\s*balance.+(?:INR|Rs)[\\.:,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "550004",
          "sort_UID": "550004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) withdrawn .* \\*+\\d+(\\d{4}).*details: (.* ret charge.*|.*chq book issue.*).tot.* avl amt:-(?:INR|Rs)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\(([\\d\\-: ]+)\\)",
          "account_type": "bank",
          "pattern_UID": "550005",
          "sort_UID": "550005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) withdrawn .* \\*+\\d+(\\d{4}).*details: (.*cheq.*|.*chq.*|self).tot.* avl amt:-(?:INR|Rs)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\(([\\d\\-: ]+)\\)",
          "account_type": "bank",
          "pattern_UID": "550006",
          "sort_UID": "550006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) withdrawn .* \\*+\\d+(\\d{4}).*det.*:\\s*(atm.*).tot.* avl amt:-(?:INR|Rs)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*\\(([\\d\\-: ]+)\\)",
          "account_type": "bank",
          "pattern_UID": "550007",
          "sort_UID": "550007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\.:,\\s]*withdrawn .* \\*+\\d+(\\d{4}).*details: pos\\/.*?\\/(.*?)\\/.*.tot.* avl amt:-(?:INR|Rs)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\(([\\d\\-: ]+)\\)",
          "account_type": "bank",
          "pattern_UID": "550008",
          "sort_UID": "550008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) withdrawn .* \\*+\\d+(\\d{4}).*det.*:\\s*(.*).tot.* avl amt:-(?:INR|Rs)*[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*\\(([\\d\\-: ]+)\\)",
          "account_type": "bank",
          "pattern_UID": "550010",
          "sort_UID": "550010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]*\\.?\\d{0,2}).*Deposited.+\\*+.+(\\d{4})\\s*(?:Details|det)[\\s\\:]*upi\\/.*?\\/(.*?)\\/.*?Avl.*Amt:-\\s*(-?[\\d]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "550013",
          "sort_UID": "550013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]*\\.?\\d{0,2}).*Deposited.+\\*+.+(\\d{4})\\s*(?:Details|det)[\\s\\:]*(?:neft\\-)\\s*(.*?)[\\.\\s]*(?:tot|subject to).*?Avl.*Amt:-\\s*([\\d\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "550014",
          "sort_UID": "550014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]*\\.?\\d{0,2}).*Deposited.+\\*+.+(\\d{4})\\s*(?:Details|det)[\\s\\:]*salary.*?Avl.*Amt:-\\s*([\\d\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "550015",
          "sort_UID": "550003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?by.*?(imps ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "550016",
          "sort_UID": "550016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]*\\.?\\d{0,2}).*Deposited.+\\*+.+(\\d{4})\\s*(?:Details|det).*?(?:rfnd[\\:\\/]|reversal|refund).*tot.*?Avl.*Amt:-\\s*([\\d\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "550017",
          "sort_UID": "550001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000055",
      "senders": [
        "VIJBNK",
        "VIJBCC",
        "VBKCCD"
      ]
    },
    {
      "patterns": [
        {
          "regex": "(?i).*a\\/c [a-z]+(\\d{4}).*debited.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on (\\d{2}\\-\\d{2}\\-\\d{4}\\s\\d{2}\\:\\d{2}\\:\\d{2}).*from (.*)\\..*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "560001",
          "sort_UID": "560001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "group_id": 1
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 300000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "bank",
                  "value": "pos",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": "mobile",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": "internet using verified by visa services",
                  "pos_override": "Net Banking"
                }
              ],
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i).*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*debited.*(?:account|a\\/c).*x*(\\d{4}) on.*bal.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "560002",
          "sort_UID": "560002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "group_id": 2
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 300000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i).* a\\/c [0-9a-z]+(\\d{4}).*debited.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on (\\d{2}\\-\\d{2}\\-\\d{4}\\s\\d{2}\\:\\d{2}).*\\. (.*)\\..*clear bal.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}).*",
          "account_type": "bank",
          "pattern_UID": "560004",
          "sort_UID": "560004",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type": "net_banking",
            "note": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                }
              ]
            },
            "pan": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i).*cheque\\s(.*)\\sfor\\s(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}).*issued.*account\\s[a-z]+(\\d{4}).*clearing\\son\\s(\\d{2}\\-\\d{2}\\-\\d{4}).*",
          "account_type": "bank",
          "pattern_UID": "560005",
          "sort_UID": "560005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": true,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "note": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i).*bal\\sis\\s[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*on\\s(\\d{2}\\-\\d{2}\\-\\d{4}\\s\\d{2}\\:\\d{2}\\:\\d{2}).*acct\\s[a-z]+(\\d{4})",
          "account_type": "bank",
          "pattern_UID": "560006",
          "sort_UID": "560006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i).*a\\/c\\s[a-z]+(\\d{4}).*credited.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}).*bal.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "560007",
          "sort_UID": "560007",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*credited.*(?:a\\/c|account).*(\\d{4}).*on.*bal.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "560008",
          "sort_UID": "560012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i).*a\\/c [a-z]+(\\d{4}).*debited.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on (\\d{4}\\-\\d{2}\\-\\d{2}\\s\\d{2}\\:\\d{2}\\:\\d{2}).*from (.*)\\..*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "560009",
          "sort_UID": "560009",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "group_id": 1
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 300000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "bank",
                  "value": "pos",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "upi",
                  "acc_type_override": "bank",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": "mobile",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": "internet using verified by visa services",
                  "pos_override": "Net Banking"
                }
              ],
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is debited from a\\/c x*(\\d{4}) being.*done through (.*) on .*clear bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "560010",
          "sort_UID": "560010",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "bank",
                  "value": "pos",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "upi",
                  "acc_type_override": "bank",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": "internet using verified by visa services",
                  "pos_override": "Net Banking"
                }
              ],
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is debited from a\\/c x+\\d*(\\d{4}).*through (atm).*clear balance (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "560011",
          "sort_UID": "560011",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)amount of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*credited.*(?:a\\/c|account).*(\\d{4}).*through Salary on.*bal.*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "560012",
          "sort_UID": "560008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(cheque no[\\s\\.]*\\d+) for amount (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) deposited in ur account x*(\\d{4}) is credited on",
          "account_type": "bank",
          "pattern_UID": "560013",
          "sort_UID": "560013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "note": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) received from .*?(reference no[\\s\\-\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "560014",
          "sort_UID": "560014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "note": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        }
      ],
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "9223175152"
                ],
                "format": "DENARBAL"
              },
              {
                "type": "voice",
                "numbers": [
                  "09289356677"
                ]
              }
            ]
          }
        ]
      },
      "sender_UID": "90000056",
      "full_name": "Dena Bank",
      "name": "DENA",
      "senders": [
        "BKDENA",
        "DENABK"
      ]
    },
    {
      "patterns": [
        {
          "regex": "(?i).*mobile\\s\\d+(\\d{10}).*generated.*amount:\\s(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*due\\sdate\\:\\s([\\d,\\-,A-Z]*).*",
          "account_type": "phone",
          "pattern_UID": "570003",
          "sort_UID": "570003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i).*bill.*generated.*amount:\\s(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}).*due\\sdate\\:\\s([\\d,\\-,A-Z]*).*",
          "account_type": "phone",
          "pattern_UID": "570004",
          "sort_UID": "570004",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": -1
            }
          }
        },
        {
          "regex": "(?i)bill .*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\/\\-,duedt:(\\d{2}\\-[a-z]{3}\\-\\d{2,4})",
          "account_type": "phone",
          "pattern_UID": "570005",
          "sort_UID": "570005",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": -1
            }
          }
        }
      ],
      "sender_UID": "90000057",
      "full_name": "MTNL",
      "name": "MTNL",
      "senders": [
        "MTNLCB",
        "MTNLBL",
        "MTNLPRS",
        "LLBILL"
      ]
    },
    {
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})\\s(?:debited|dr).*a\\/c.*?(\\d{4})\\s*on\\s*(.*)[\\-\\s]for atm txn at\\s*(.*)\\s*Avl Bal\\:\\s*(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "580003",
          "sort_UID": "580003",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "note": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "transaction_type": "debit_atm",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})\\s(?:debited|dr).*a\\/c.*(\\d{4})\\son\\s(.*\\d{2})\\s*-?\\s*for (?:pos|ecom) txn at .*-\\s*(.*?)\\s*Avl Bal:[\\.:,\\s]*(?:rs|inr\\s*|)([\\d,-]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "580004",
          "sort_UID": "580004",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "transaction_type": "debit_card",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*(credited|debited).*(?:account|a\\/c no) .*\\d*(\\d{4}) on\\s*([\\d\\-a-z]*\\s[\\d\\:]* (?:am|pm)|[\\d\\-]* [\\d\\:]*).*(?:balance\\sis|bal)\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580005",
          "sort_UID": "580024",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "net_banking",
                  "value": "debited"
                },
                {
                  "txn_type": "credit",
                  "value": "credited",
                  "pos_override": "Credit"
                }
              ],
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) (?:dr|debited) to a\\/c \\**x*(\\d{4}).* on (\\d{2}\\-\\d{2}\\-\\d{4}\\s[\\d\\:]*).*avl bal\\:?(?:INR|RS|)[\\.,:\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580009",
          "sort_UID": "580009",
          "sms_type": "transaction",
          "data_fields": {
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "transaction_type": "net_banking"
          }
        },
        {
          "regex": "(?i)a\\/c.*(\\d{4}) is debited with (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) on (.*?)\\.? (?:by|for|twds) (.*?)\\.?\\s*avl\\.?\\s*bal\\s*(?:is)?\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580013",
          "sort_UID": "580013",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "transaction_type_rule": {
              "group_id": 4,
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "chq",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "cash wdl",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ]
            },
            "note": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c.*(\\d{4}) is (?:credited|credited with) (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) on (\\d{2}-[a-z]{3}-\\d{4} [\\d\\:]* (?:am|pm)|[\\d\\-]* [\\d\\:]*).* avl[\\s\\.]*bal (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580014",
          "sort_UID": "580022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)transaction of (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) .*credit card \\d*\\**(\\d{4}) at (.*?) at",
          "account_type": "credit_card",
          "pattern_UID": "580015",
          "sort_UID": "580015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)credit card \\d*\\**(\\d{4}) total due (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*minimum due (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*due date: (\\d{2}\\/\\d{2}\\/\\d{4}).*",
          "account_type": "credit_card",
          "pattern_UID": "580016",
          "sort_UID": "580016",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)credit card \\d*\\**(\\d{4}) is due on (\\d{2}\\/\\d{2}\\/\\d{2}) total due (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) minimum due (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "580019",
          "sort_UID": "580019",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 4
            },
            "amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)balance.*(?:a\\/c:|a\\/c) x*\\d*(\\d{4}).*?is (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580017",
          "sort_UID": "580017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*credited to your a\\/c no.\\s*\\**x*(\\d{4}) on (\\d{2}\\-\\d{2}\\-\\d{4} [\\d\\:]*).*avl bal:(?:INR|RS|)[\\.,:\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580018",
          "sort_UID": "580018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c.*(\\d{4}) is (?:credited|credited with) (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) on (\\d{2}-[a-z]{3}-\\d{4} [\\d\\:]* (?:am|pm)|[\\d\\-]* [\\d\\:]*).*clg (chq \\d+).*? avl[\\s\\.]*bal (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580021",
          "sort_UID": "580021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c.*(\\d{4}) is (?:credited|credited with) (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) on (\\d{2}-[a-z]{3}-\\d{4} [\\d\\:]* (?:am|pm)|[\\d\\-]* [\\d\\:]*).*by interest\\..*? avl[\\s\\.]*bal (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580022",
          "sort_UID": "580014",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit Interest",
              "set_no_pos": true
            },
            "transaction_type": "credit",
            "transaction_category": "walnut_interest"
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*?credited to your.*?(?:account|a\\/c no)[\\s\\.]*.*?\\d*(\\d{4}) on\\s*([\\d\\-a-z]*\\s[\\d\\:]* (?:am|pm)|[\\d\\-]* [\\d\\:]*).*?(neft|atm|ecom|rtgs)[\\:\\s].*?[\\:\\-](.*?)(?:\\.|\\s*avl).*?(?:balance\\sis|bal)[\\s\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580023",
          "sort_UID": "580023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "Credit",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "credit",
                  "acc_type_override": "debit_card",
                  "value": "ecom"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 5
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 6
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*credite.*(?:account|a\\/c no) .*\\d*(\\d{4}) on.*?(?:by reversal|refund).*?(?:balance\\sis|bal)\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "580024",
          "sort_UID": "580005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)linked to a\\/c x*\\d*(\\d{4}) credited for (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}) on (\\d{2}\\/\\w{3}\\/\\d{4} [\\d\\:]*)\\((upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "580025",
          "sort_UID": "580025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MMM/yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        }
      ],
      "sender_UID": "90000058",
      "full_name": "Syndicate Bank",
      "name": "Syndicate",
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "9210332255"
                ]
              }
            ]
          }
        ]
      },
      "senders": [
        "SYNDBK",
        "SYBANK",
        "SYNBNK",
        "SYNTST",
        "SYNMOB"
      ]
    },
    {
      "full_name": "Paytm wallet and Bank",
      "name": "PAYTM",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)received Rs\\.\\s*(\\d+\\.?\\d{0,2})\\s*(?:in your paytm wallet|paytm cash)?\\s*from (.*?)\\s*(?:in your paytm wallet)?\\..*?(?:wallet|cash|) balance(?:\\:| is )\\s*Rs\\.\\s*(\\d+\\.?\\d{0,2})\\s*\\.",
          "account_type": "prepaid",
          "pattern_UID": "590004",
          "sort_UID": "590004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2,
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:sent|send) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) to (.*?)(?: via|\\.).* balance(?:\\:| is) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "590009",
          "sort_UID": "590009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Paytm",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            },
            "pan": {
              "value": "Unknown"
            }
          }
        },
        {
          "regex": "(?i)ticket.*for\\s*(.*) (?:on|are\\:)(?:\\s*\\w*,)?\\s*(.*?),?\\s*at (.*),\\s.*seat\\(s\\): (.*)\\s*total amount[\\s\\S]*(?:pick up code|kiosk id): ([\\da-z]*)",
          "account_type": "generic",
          "pattern_UID": "590010",
          "sort_UID": "590010",
          "sms_type": "event",
          "data_fields": {
            "event_type": "movie",
            "name": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMMMM hh:mm a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'st' MMMMM hh:mm a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'nd' MMMMM hh:mm a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'rd' MMMMM hh:mm a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'th' MMMMM hh:mm a"
                },
                {
                  "use_sms_time": false,
                  "format": "MMMMM dd',' hh:mm a"
                }
              ]
            },
            "event_location": {
              "group_id": 3
            },
            "event_info": {
              "group_id": 4
            },
            "pnr": {
              "group_id": 5
            },
            "event_reminder_span": {
              "value": 30
            }
          }
        },
        {
          "regex": "(?i)you paid (.*?) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})(?:\\swith your paytm wallet|\\.)",
          "account_type": "prepaid",
          "pattern_UID": "590013",
          "sort_UID": "590059",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 86400000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:made a payment of|paid) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) \\s*to (.*?)[\\s\\.](?:\\s*wallet txn|at|via|updated|from paytm bal).*(?:bal|balance|Balance: Paytm Wallet-)[:\\s]*(?:INR|Rs|\\s)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "590014",
          "sort_UID": "590014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) refunded in your paytm wallet for your (?:order on)?\\s*(.*?)\\.\\s*updated balance:(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "590015",
          "sort_UID": "590015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been paid to (.*?)\\..*updated balance: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "590018",
          "sort_UID": "590017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2,
              "set_no_pos": true
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) to (.*?)\\. wallet txn.*balance:(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "590021",
          "sort_UID": "590031",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) to (.*?) (?:on|at|from) (?:[a-z]{3}\\s\\d{1,2}|\\d{4}\\-\\d{2}\\-\\d{2}\\s[\\d\\:]*|paytm balance\\.|\\d+\\s\\w{3}\\,\\s*\\d{4}\\s*[\\d\\:]*)",
          "account_type": "prepaid",
          "pattern_UID": "590019",
          "sort_UID": "590052",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for vehicle reg.*at (.*) on",
          "account_type": "prepaid",
          "pattern_UID": "590023",
          "sort_UID": "590023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)successful payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) at (.*)?\\s\\S*for future.*order id is (\\w*)",
          "account_type": "prepaid",
          "pattern_UID": "590024",
          "sort_UID": "590024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 86400000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "note": {
              "prefix": "Order id: ",
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) \\(food wallet: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\) to (.*) at .* balance: food wallet- (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "590041",
          "sort_UID": "590041",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Food Wallet"
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)confirmed.*?\n*?.*?\\(PNR: (\\w+)\\).*\\(PNR: (\\w+)\\)\n*?.*?\n*?(\\w{3} to \\w{3})\\,.*?(\\w{2}\\-\\w{3,4}).*?\n*?dep: (\\d{2}:\\d{2}) \\(\\w{3,4}\\, (\\d{1,2} \\w{3})\\)\n*?",
          "account_type": "generic",
          "pattern_UID": "590051",
          "sort_UID": "590051",
          "sms_type": "event",
          "reparse": true,
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "PAYTM flight"
            },
            "pnr": {
              "group_ids": [
                1,
                2
              ]
            },
            "event_location": {
              "group_id": 3
            },
            "event_info": {
              "group_id": 4
            },
            "date": {
              "group_ids": [
                5,
                6
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "HH:mm dd MMM"
                }
              ]
            },
            "event_reminder_span": {
              "value": 90
            }
          }
        },
        {
          "regex": "(?i)confirmed.*?\n*?.*?\\(PNR: (\\w+)\\)\n*?.*?\n*?(\\w{3} to \\w{3})\\,.*?(\\w{2}\\-\\w{3,4}).*?\n*?dep: (\\d{2}:\\d{2}) \\(\\w{3,4}\\, (\\d{1,2} \\w{3})\\)\n*?",
          "account_type": "generic",
          "pattern_UID": "590052",
          "sort_UID": "590019",
          "sms_type": "event",
          "reparse": true,
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "PAYTM flight"
            },
            "pnr": {
              "group_id": 1
            },
            "event_location": {
              "group_id": 2
            },
            "event_info": {
              "group_id": 3
            },
            "date": {
              "group_ids": [
                4,
                5
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "HH:mm dd MMM"
                }
              ]
            },
            "event_reminder_span": {
              "value": 90
            }
          }
        },
        {
          "regex": "(?i)(\\w{3} to \\w{3})\\,.*?(\\w{2}\\-\\w{3,4})\n*\\s*dep:\\s* (\\d{2}:\\d{2}) \\(\\w{3,4}\\, (\\d{1,2} \\w{3})\\)\n*\\s*",
          "account_type": "generic",
          "pattern_UID": "590053",
          "sort_UID": "590053",
          "sms_type": "event",
          "reparse": true,
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "PAYTM flight"
            },
            "event_location": {
              "group_id": 1
            },
            "event_info": {
              "group_id": 2
            },
            "date": {
              "group_ids": [
                3,
                4
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "HH:mm dd MMM"
                }
              ]
            },
            "event_reminder_span": {
              "value": 90
            },
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "pnr",
                    "child_field": "pnr"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "name",
                  "child_field": {
                    "value": "PAYTM flight"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "sms_time",
                  "match_value": 0,
                  "child_field": {
                    "field": "sms_time"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)confirmed[\\s\\S]*(\\w{3} to \\w{3})\\(PNR: (\\w+)\\)\\s*\n*.*?\n*.*?(\\w{2}\\-\\w{3,4})\\s*\n*dep: (\\d{2}:\\d{2}) \\(\\w{3,4}\\, (\\d{1,2} \\w{3})\\).*\n*arr\n*.*\n*(?:booking|order)",
          "account_type": "generic",
          "pattern_UID": "590054",
          "sort_UID": "590054",
          "sms_type": "event",
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "PAYTM flight"
            },
            "event_location": {
              "group_id": 1
            },
            "event_info": {
              "group_id": 3
            },
            "pnr": {
              "group_id": 2
            },
            "date": {
              "group_ids": [
                4,
                5
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "HH:mm dd MMM"
                }
              ]
            },
            "event_reminder_span": {
              "value": 90
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) successfully paid for (.*?) for (.*?(?:number|no|id)[\\.\\s].*?)\\.",
          "account_type": "prepaid",
          "pattern_UID": "590055",
          "sort_UID": "590055",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(Recharge (?:for|of) .*) (?:for|of) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:was|is) successful",
          "account_type": "prepaid",
          "pattern_UID": "590056",
          "sort_UID": "590056",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Recharge",
              "set_no_pos": true
            },
            "note": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)you paid (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) using paytm postpaid",
          "account_type": "pay_later",
          "set_account_as_expense": true,
          "pattern_UID": "590057",
          "sort_UID": "590057",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Postpaid"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Paytm",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)you paid (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) at (.*) using paytm postpaid",
          "account_type": "pay_later",
          "set_account_as_expense": true,
          "pattern_UID": "590058",
          "sort_UID": "590058",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Postpaid"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\s*transferred to (.*) at .*(Transaction Id (\\d*)).*updated balance.* (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "590061",
          "sort_UID": "590061",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) \\(Gift Voucher: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\) to (.*) at .* balance: Gift Voucher- (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "590062",
          "sort_UID": "590062",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Gift Voucher"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)paytm postpaid.*[\\s\\S]*(?:due|bill) amount\\s*\\=\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*(?:due date|last day to pay)\\s*\\=\\s*(\\w+ \\d{1,2}\\, \\d{2,4}|\\d{2}[\\-\\s][a-zA-Z]{3}[\\-\\s]\\d{2,4})",
          "account_type": "pay_later",
          "set_account_as_expense": true,
          "pattern_UID": "590063",
          "sort_UID": "590063",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "pay_later_bill",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MMMMM dd, yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy"
                }
              ]
            },
            "pan": {
              "value": "Postpaid"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)\\s*(?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) transferred.*?to (.*?\\d+) (?:at|on) (.*?)\\s*\\..*?balance[\\s\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "590064",
          "sort_UID": "590064",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_prepaid",
                  "value": "a/c",
                  "pos_override": "Paytm"
                },
                {
                  "txn_type": "debit_prepaid",
                  "value": ""
                }
              ],
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MMM dd, yyyy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)added (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) in your paytm through.*updated balance[\\s\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?(transaction id\\:\\s*\\d+)",
          "account_type": "prepaid",
          "pattern_UID": "590065",
          "sort_UID": "590066",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Wallet Reload",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(.*?) has added (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) in your paytm.*?updated balance[\\s\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "590066",
          "sort_UID": "590065",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)paytm has added (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) of cashback in your paytm balance .*?transaction at (.*)\\.\\s*updated balance[\\s\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "590067",
          "sort_UID": "590067",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_rewards",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) transferred to paytm wallet linked with (.*?)[\\.\\s*]updated balance[\\s\\:]*(?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "590068",
          "sort_UID": "590068",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2,
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:fastag)?\\s*toll .*?for .*? at (.*?) on\\s*(?:on)?\\s*(?:\\w{3}\\s\\d{0,2}|\\d{0,2}\\s\\w{3}).*?paytm wallet[\\s\\-]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "590069",
          "sort_UID": "590069",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:fastag)?\\s*toll .*?for .*? at (.*?) on\\s*(?:on)?\\s*(?:\\w{3}\\s\\d{0,2}|\\d{0,2}\\s\\w{3})",
          "account_type": "prepaid",
          "pattern_UID": "590070",
          "sort_UID": "590070",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is refunded back to your Paytm Postpaid account\\..*?spend limit is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "pay_later",
          "set_account_as_expense": true,
          "pattern_UID": "590071",
          "sort_UID": "590071",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Postpaid"
            },
            "pos": {
              "value": "Refund",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}) received for paytm postpaid.*?limit is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "pay_later",
          "set_account_as_expense": true,
          "pattern_UID": "590072",
          "sort_UID": "590072",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Postpaid"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Postpaid  Bill Payment",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) via your paytm bank account x*(\\d{4}) at (.*) on (\\d{2}\\-\\d{2}\\-\\d{4} at \\d{2}\\:\\d{2}\\:\\d{2}).*updated balance: (?:INR|RS|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "1450001",
          "sort_UID": "145001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy 'at' HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) using your card x*[x\\-]*(\\d{4}) at (.*) on (\\d{2}\\-\\d{2}\\-\\d{2,4} at \\d{2}\\:\\d{2}:\\d{2})",
          "account_type": "debit_card",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145002",
          "sort_UID": "145002",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy 'at' HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:sent)?\\s*to (.*) from.* (?:a\\/c|account)\\s*\\d*x*(\\d{4}).*((?:upi)?\\s*ref.*: (\\d+))",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145003",
          "sort_UID": "145003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "UPI Funds Transfer",
                  "txn_type": "upi",
                  "value": "xxxxxx",
                  "set_no_pos": true
                },
                {
                  "txn_type": "upi",
                  "value": ""
                }
              ],
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)sent (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).* from.*(?:a\\/c|account)\\s*(?:no\\.)? \\d*x*(\\d{4}) to\\s*(.*[\\s\\S]*(?:a\\/c|account) \\w+|[x\\d]+).*[\\s\\S]*ref no[\\s\\.\\:]+\\w*",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145004",
          "sort_UID": "145004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "note": {
              "prefix": "Sent to:",
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:was withdrawn|debited) .*(?:a\\/c|account) \\d*x+(\\d{4}) (?:for atm withdrawal at|at) (.*) on.*(?:updated balance\\:|avl bal) (?:INR|RS|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145005",
          "sort_UID": "145005",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) using.* debit card at (.*) on.*updated balance\\s*:\\s*(?:INR|RS|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145006",
          "sort_UID": "145006",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) was withdrawn .*(?:a\\/c|account) \\d*x+(\\d{4}) at (.*) on",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145007",
          "sort_UID": "145007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)sent (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*to (.*) using paytm app.*(upi ref.*: (\\d*))",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145008",
          "sort_UID": "145008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) paid at (.*) on.*?using.*?debit card.*(?:updated|avl) bal.*?(?:INR|RS|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?(ref (?:num|no)[\\s\\.\\:]*(\\d+))",
          "account_type": "debit_card",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145009",
          "sort_UID": "145009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:cash)?\\s*withdrawn at (.*) on.*?bal.*?[\\s\\:]*(?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145010",
          "sort_UID": "145010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "note": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) via your a\\/c \\d*x*(\\d{4}) to (.*?) on.*?(ref no[\\s\\:]*(\\d+))",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145011",
          "sort_UID": "145011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)you have sent (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) to (.*?) via a paytm bank partner.*?(reference id[\\s\\:]*(\\d+))",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145012",
          "sort_UID": "145012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is debited.*?account \\d*x*(\\d{4}).*?(ref id (\\d+))",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145013",
          "sort_UID": "145013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from your.*?account \\d*x*(\\d{4}) for",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145014",
          "sort_UID": "145014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) deposited.*?account \\d*x*(\\d{4}) with.*?avl bal[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2})",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145015",
          "sort_UID": "145015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(.*?) has deposited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) in your paytm.*?bank account ending (\\d{4}) with.*?balance[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2})",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145018",
          "sort_UID": "145018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) added to (?:your)?\\s*paytm bank a\\/c ending with [\\dx]*(\\d{4}) .*?reversal of (pos|atm|online) .*?(reference number (\\d+))",
          "account_type": "debit_card",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145019",
          "sort_UID": "145019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "acc_type_override": "bank",
                  "txn_type": "credit",
                  "value": "online",
                  "pos_override": "Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "pos": {
              "value": "Debit Card Reversal",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:is credited|added) to your .*?a\\/c (?:ending with)?\\s*[\\dx]*(\\d{4}) (?:as|due to) refund.*? transaction with ((?:ref|Reference) (?:no|number)[\\s\\:\\.]*(\\d+))\\.",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145020",
          "sort_UID": "145020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Refund",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is added back.*?payments bank a\\/c [x\\d]*(\\d{4}) as your upi transaction.*?has failed",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145021",
          "sort_UID": "145021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) received from (.*?) \\(.*?in your paytm payments bank a\\/c [\\dx]*(\\d{4})\\.\\s*(upi ref[\\s\\:]*(\\d+))",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145022",
          "sort_UID": "145022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)received (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) in your a\\/c [\\dx]*(\\d{4}) from (.*?) (?:on|\\(a\\/c).*?((imps ref|neft ref|ref)\\s*no[\\s\\:]*(\\w+))",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145023",
          "sort_UID": "145023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 6,
              "type_group_id": 5,
              "type_rules": [
                {
                  "value": "neft ref",
                  "is_neft": true
                },
                {
                  "value": "imps ref",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\(.*[\\s\\S]*.?is added to your a\\/c for redemption[\\s\\S]*of fixed deposit.*?a\\/c bal[\\s\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145024",
          "sort_UID": "145024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)your paytm bank.*?a\\/c no[\\s\\.]*x*(\\d{4}) has been credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for (.*?) scheme\\.",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145025",
          "sort_UID": "145025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) credited to your bank a\\/c for (.*?)purity gold\\.bank (?:txn|transaction)[\\#\\s]*\\d+",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145026",
          "sort_UID": "145026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)you have received (?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) in your (?:a\\/c|paytm bank account ending) (\\d{4})[\\s\\S]*via.*debit card",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145027",
          "sort_UID": "145027",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is credited to (?:your)?\\s*(?:savings account|your.*?payments bank account ending) x*(\\d{4})\\s*as salary[\\s\\.].*?updated balance[\\s\\:]*(?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145028",
          "sort_UID": "145028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*to .* from.* (?:a\\/c|account)[\\s\\.]*(upi ref[\\s\\.\\:]*(\\d+))[\\s\\.]*avl bal[\\s\\:]*(?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145029",
          "sort_UID": "145029",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "note": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 3,
              "is_upi": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) received from (.*?) in your paytm payments bank a\\/c [\\dx]*(\\d{4})\\.\\s*(upi ref[\\s\\:]*(\\d+))[\\s\\.]*avl bal[\\s\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145030",
          "sort_UID": "145030",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)your account x*(\\d{4}) has been debited by (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on.*against your nach mandate with (.*?)\\.",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145031",
          "sort_UID": "145031",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)received (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) in your (?:a\\/c|savings account) [\\dx]*(\\d{4}) from (.*?)\\.\\s*ref no[\\s\\:]*(\\w+)",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145032",
          "sort_UID": "145032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is debited.*?a\\/c [\\dx]*(\\d{4}) for auto-payment at (.*) on .*?ref no[\\s\\:]*(\\d+)",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145033",
          "sort_UID": "145033",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been settled .*?paytm payments bank.*?a\\/c [\\d\\*]*(\\d{4}) with reference number (\\w+)\\.",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145034",
          "sort_UID": "145034",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "network_reference_id": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\(.*[\\s\\S]*.?is added to your a\\/c (?:for|from) (?:redemption[\\s\\S]*of fixed deposit|fd )",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145035",
          "sort_UID": "145035",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)paytm bank a\\/c [\\dx]+(\\d{4}) has been debited with (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) as (.*?) with reference number (\\d+)",
          "account_type": "bank",
          "account_name_override": "Paytm Bank",
          "set_account_as_expense": true,
          "pattern_UID": "145036",
          "sort_UID": "145036",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        }
      ],
      "sender_UID": "90000059",
      "senders": [
        "IPAYTM",
        "VPAYTM",
        "PAYTMB"
      ]
    },
    {
      "full_name": "PayZapp",
      "name": "PayZapp",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i) card ending with (\\d{4}) .* for (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}) at (.*)\\. .* balance (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "pattern_UID": "600001",
          "sort_UID": "600001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}) was spent on your (?:payzapp)?\\s*card x+(\\d{4}) at (.*)\\. Available balance\\: (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "pattern_UID": "600002",
          "sort_UID": "600002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been credited .*wallet (\\d{4})\\. Avl Bal\\: (?:INR|Rs)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "600003",
          "sort_UID": "600003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*debited .*payzapp wallet (\\d+).*avl bal: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "600004",
          "sort_UID": "600004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "PayZapp",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}).*txn id: (\\w+).*avl bal: (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "pattern_UID": "600005",
          "sort_UID": "600005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "PayZapp",
              "set_no_pos": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "note": {
              "prefix": "Transaction ID:",
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)you have received (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{0,2}).*?user (.*?)\\..*?balance[\\s\\:]*(?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "600006",
          "sort_UID": "600006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your transaction of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) towards (.*) has been fully refunded",
          "account_type": "prepaid",
          "pattern_UID": "600007",
          "sort_UID": "600007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)transferred (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to payzapp user (.*?)\\.\\s*available balance[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "600008",
          "sort_UID": "600008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000060",
      "senders": [
        "PAYZAP"
      ]
    },
    {
      "full_name": "IMONEY",
      "name": "IMONEY",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) to merchant (.*)(?:successful|\\s)\\..*bal.* is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*((?:Transaction|txn) id:(\\d*))",
          "account_type": "prepaid",
          "pattern_UID": "610001",
          "sort_UID": "610001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)card has been topped up with (?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*(?:bal|balance) is (?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "610003",
          "sort_UID": "610003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Card Top Up",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:current|account) balance.* (?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "610005",
          "sort_UID": "610005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 1
            }
          }
        }
      ],
      "sender_UID": "90000061",
      "senders": [
        "IMONEY"
      ]
    },
    {
      "full_name": "MoboMoney",
      "name": "MoboMoney",
      "set_account_as_expense": false,
      "patterns": [
      ],
      "sender_UID": "90000062",
      "senders": [
        "MYMOBO"
      ]
    },
    {
      "full_name": "MobiKwik",
      "name": "MobiKwik",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i) type:\\s?Debit amnt:\\s?(?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) (?:merchant|service):\\s?(.*) status.* balance:\\s?(?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) (?:orderid|tranx ref):\\s?(.*)",
          "account_type": "prepaid",
          "pattern_UID": "630001",
          "sort_UID": "630001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 4
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:added|received|type\\:\\s?credit|type\\:\\s?refund).*(?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) .* (?:balance:|balance is)?\\s?(?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "630003",
          "sort_UID": "630003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)?[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) paid.*?to (.*?)(?:\\.|for)",
          "account_type": "prepaid",
          "pattern_UID": "630004",
          "sort_UID": "630006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) (?:using|via) mobikwik to (.*) for",
          "account_type": "prepaid",
          "pattern_UID": "630005",
          "sort_UID": "630005",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) paid via mobikwik to (.*) for.*wallet balance[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "pattern_UID": "630006",
          "sort_UID": "630004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your (.*?) recharge of (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}).*?successful[\\s\\.]*available bal.*?(?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "630007",
          "sort_UID": "630007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your (.*?) bill payment of (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}).*?successful.*?[\\s\\.]*available bal.*?(?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bill_pay",
          "pattern_UID": "630008",
          "sort_UID": "630008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "bill_pay",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "pos": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)refund of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) from (.*?) has been successfully processed",
          "account_type": "prepaid",
          "pattern_UID": "630009",
          "sort_UID": "630009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)transfer with (ref no[\\s\\.]*(\\w+)) to (.*?) \\(.*?for (?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is success.*?balance (?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "630010",
          "sort_UID": "630010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 5
            },
            "note": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,,]*\\.?\\d{2}) used from zip by mobikwik for your payment",
          "account_type": "prepaid",
          "pattern_UID": "630011",
          "sort_UID": "630011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "MobiKwik-Zip",
              "set_no_pos": true
            },
            "pan": {
              "value": "Zip"
            }
          }
        },
        {
          "regex": "(?i)zip bill of (?:INR|Rs)[\\.,\\s]*([\\d,,]*\\.?\\d{2}) has been.*?is due on (\\d{2}[\\-\\s]\\w{3}[\\-\\s]\\d{4})",
          "account_type": "loan",
          "pattern_UID": "630012",
          "sort_UID": "630012",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "pan": {
              "value": "Zip"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000063",
      "senders": [
        "MOBIKW"
      ]
    },
    {
      "full_name": "Airtel Payments Bank",
      "name": "Airtel Money",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)payment to (.*) (?:successful!|done|for).* (?:debited by|amt:|of) (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}).* (?:balance is|bal:|bal) (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "640002",
          "sort_UID": "640002",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:transfer|payment|transaction).* (?:amount:|amt:|debited by|debited with)\\s?(?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}).* (?:balance|bal):? (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "account_name_override": "Airtel Bank",
          "set_account_as_expense": true,
          "pattern_UID": "640003",
          "sort_UID": "640003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})(?: is|) credited .*(?:bal|balance|bal:) (?:INR|Rs)?[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "account_name_override": "Airtel Bank",
          "set_account_as_expense": true,
          "pattern_UID": "640004",
          "sort_UID": "640004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:you have added|top up of) (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) (?:in your airtel payments|is successfully received from) .* bal[\\s\\:]*(?:INR|Rs)?[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "640005",
          "sort_UID": "640005",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Wallet Reload",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[.,\\s]*([\\d,]+\\.?\\d{0,2}) using .*card at (.*)\\..*bal (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "account_name_override": "Airtel Bank",
          "set_account_as_expense": true,
          "pattern_UID": "640006",
          "sort_UID": "640006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)successfully done a (.*) for .*(?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) from (?:a\\/c no|wallet)[\\s\\.]*x*\\d*(\\d{4})\\.? avl bal (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "640008",
          "sort_UID": "640008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)payment to (.*) of (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) \\s*from .*(?:balance is|bal:|bal) (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "640009",
          "sort_UID": "640009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)airtel (?:payments bank|money wallet).*credited with (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}).*avl bal.*(?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "640010",
          "sort_UID": "640017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your payment \\[(bbps txn id\\:(\\w+))\\] for (.*) \\: \\w* for amount (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) has been processed successfully.*avl bal\\: (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "640011",
          "sort_UID": "640011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            },
            "note": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:made a payment of|paid) (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) at (.*?) (?:from|of).*avl bal (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "640012",
          "sort_UID": "640012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) on.*?credited.*?\\((upi ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "account_name_override": "Airtel Bank",
          "set_account_as_expense": true,
          "pattern_UID": "640013",
          "sort_UID": "640013",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) on.*credited \\((imps ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "account_name_override": "Airtel Bank",
          "set_account_as_expense": true,
          "pattern_UID": "640014",
          "sort_UID": "640014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)successful transfer of (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) to (.*?) using.*?bank.*?(txn id[\\s\\:]*(\\d+))",
          "account_type": "bank",
          "account_name_override": "Airtel Bank",
          "set_account_as_expense": true,
          "pattern_UID": "640015",
          "sort_UID": "640015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your payment \\[(bbps txn id\\:(\\w+))\\] of (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) for (.*?)\\s\\:.*?has been processed successfully.*?avl bal[\\s\\:]*(?:INR|Rs)?[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "640016",
          "sort_UID": "640016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            },
            "note": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)airtel (?:payments bank|money wallet).*credited with (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}).*avl bal.*(?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})[\\s\\.]*(.*(?:cashback|recharge))",
          "account_type": "prepaid",
          "pattern_UID": "640017",
          "sort_UID": "640010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)you have received payment of (?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*from mobile .*?avl bal (?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\.]*((?:txn|tnx) id (\\w+))",
          "account_type": "prepaid",
          "pattern_UID": "640018",
          "sort_UID": "640018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)you have successfully received (?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) from (.*?) mobile no.*?avl bal (?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\.]*((?:txn|tnx) id (\\w+))",
          "account_type": "prepaid",
          "pattern_UID": "640019",
          "sort_UID": "640019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)you have received a refund of (?:INR|Rs)?[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) from (.*) for .*?(txn id (\\w+))\\,\\s*avl bal (?:INR|Rs)?[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "640020",
          "sort_UID": "640020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)?[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) has been credited to your a\\/c x*(\\d{4}) from (.*?)\\.\\s*a\\/c bal[\\s\\:]*(?:INR|Rs)?[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "account_name_override": "Airtel Bank",
          "set_account_as_expense": true,
          "pattern_UID": "640021",
          "sort_UID": "640021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)?[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) credited in your a\\/c for (.*?salary)\\,",
          "account_type": "bank",
          "account_name_override": "Airtel Bank",
          "set_account_as_expense": true,
          "pattern_UID": "640022",
          "sort_UID": "640022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited by (?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on .*?by a\\/c.*?(imps ref no (\\d+))",
          "account_type": "bank",
          "account_name_override": "Airtel Bank",
          "set_account_as_expense": true,
          "pattern_UID": "640023",
          "sort_UID": "640023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:payment|recharge) of (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) for (.*?)\\:\\s*[\\w\\-]+[\\s\\,]+has been processed successfully on (\\d{4}\\-\\d{2}\\-\\d{0,2} [\\d\\:]*)",
          "account_type": "prepaid",
          "pattern_UID": "640024",
          "sort_UID": "640024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)successfully sent (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) to mobile .*?avl bal (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:tnx|txn) id (\\d+)",
          "account_type": "prepaid",
          "pattern_UID": "640025",
          "sort_UID": "640025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)charge of (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}).*?has been debited .*?your savings a\\/c [x\\d]*(\\d{4})",
          "account_type": "bank",
          "account_name_override": "Airtel Bank",
          "set_account_as_expense": true,
          "pattern_UID": "640026",
          "sort_UID": "640026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)Airtel Payments Bank.*?debited by (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) towards payment of (.*?)\\: .*?txn id (\\w+)\\.",
          "account_type": "bank",
          "account_name_override": "Airtel Bank",
          "set_account_as_expense": true,
          "pattern_UID": "640027",
          "sort_UID": "640027",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)amount (?:INR|Rs)*[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) against aeps cash withdrawal dated (.*?) is successful with txn id\\/rrn (\\d+)[\\s\\.]*avl bal (?:INR|Rs)*[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "account_name_override": "Airtel Bank",
          "set_account_as_expense": true,
          "pattern_UID": "640028",
          "sort_UID": "640028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "network_reference_id": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        }
      ],
      "sender_UID": "90000064",
      "senders": [
        "AIRMNY",
        "AIRBNK"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09210622122",
                  "04442220004"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Indian Overseas Bank",
      "name": "IOB",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) debited to .*-x*\\d*?(\\d{3,4})(?:\\s|\\.)AcBal:[\\.,\\s]*([\\d,-]+\\.?\\d{0,2}).*(?:\\[|\\xc4|\\<|\\sc)(.*?)(?:\\]|\\xd1|\\?*\\>|\\se\\s)",
          "account_type": "bank",
          "pattern_UID": "650001",
          "sort_UID": "650001",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "nfs",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "net_banking",
                  "value": "neft",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "ecs",
                  "acc_type_override": "bank",
                  "value": "ecs",
                  "pos_override": "ECS"
                },
                {
                  "txn_type": "upi",
                  "value": "upi"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) credited to .*-x*\\d*?(\\d{3,4})(?:\\s|\\[|\\.).*(?:Bal|AcBal):[\\.,\\s]*([\\d,-]+\\.?\\d{0,2})[\\s\\.]*(.*?) on [\\d\\-]*",
          "account_type": "bank",
          "pattern_UID": "650003",
          "sort_UID": "650012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)([x\\d]{4}) is (?:INR|Rs)[\\.,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "650004",
          "sort_UID": "650004",
          "reparse": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)stmt .* card \\d+x+(\\d{4}) is generated.*?ttl amt due[\\s\\-]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).min amt due[\\s\\-]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?due date (\\d{2}\\-[a-z]{3}-\\d{2,4})",
          "account_type": "credit_card",
          "pattern_UID": "650007",
          "sort_UID": "650007",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)using iob credit card ending x*(\\d{3}) for [\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:INR|Rs) in (.*) at .*on (.*)\\.avl bal:(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "650010",
          "sort_UID": "650010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy hh:mm:ss a"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) credited to .*-x*\\d*?(\\d{3,4})(?:\\s|\\[|\\.).*(?:Bal|AcBal):[\\.,\\s]*([\\d,-]+\\.?\\d{0,2})[\\s\\.]*.*?salary.*?on [\\d\\-]*",
          "account_type": "bank",
          "pattern_UID": "650011",
          "sort_UID": "650011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) credited to .*-x*\\d*?(\\d{3,4})(?:\\s|\\[|\\.).*(?:Bal|AcBal):[\\.,\\s]*([\\d,-]+\\.?\\d{0,2})[\\s\\.]*[\\[|d](rev[\\:\\.\\-](?:pos|atm|ecom\\-|aeps|payu)|impsrev|reversal)",
          "account_type": "bank",
          "pattern_UID": "650012",
          "sort_UID": "650003",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "pos",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "ecom",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "transaction_category": "walnut_refund",
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c\\s*(?:no)?[\\s\\.]*x*(\\d{3,4}) is credited (?:by)?\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?by.*?(imps ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "650013",
          "sort_UID": "650013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)fund transfer from (.*?) \\- \\+\\d* successful\\. (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to your (?:a\\/c|account).*?(transaction id\\:(\\d+))",
          "account_type": "bank",
          "pattern_UID": "650014",
          "sort_UID": "650014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?a\\/c holder name[\\s\\-]+(.*?)\\) credited[\\s\\.\\(]*imps reference no[\\s\\.]*(\\d*)",
          "account_type": "bank",
          "pattern_UID": "650015",
          "sort_UID": "650015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)fund transfer to (.*?) (?:- [\\+x\\d]*)?\\s*(?:is|\\-) successful[\\s\\.]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:is debited .*?account|debited from) [x\\d]*(\\d{4})[\\,\\s]*(?:with ref|transaction) id[\\s\\.\\:]*(\\d*)",
          "account_type": "bank",
          "pattern_UID": "650016",
          "sort_UID": "650016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "Net Banking",
                  "txn_type": "net_banking",
                  "value": "xxxxx",
                  "set_no_pos": true
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .*?a\\/c.*?credited\\s*\\(imps ref no[\\s\\.]*(\\d*)",
          "account_type": "bank",
          "pattern_UID": "650017",
          "sort_UID": "650017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 3,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)fund transfer to (.*?) a\\/c\\.[x\\d]+ is successful[\\s\\.]*your a\\/c[\\s\\.x]*(\\d{4}) is debited (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .*?neft ref no (\\d+)",
          "account_type": "bank",
          "pattern_UID": "650018",
          "sort_UID": "650018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "pos": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 4,
              "is_neft": true
            }
          }
        },
        {
          "regex": "(?i)using iob credit card ending x*(\\d{3,4}) for (?:INR|Rs)*[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:INR|Rs) in .*? at (.*) on (.*)\\.\\s*avl bal:(?:INR|Rs|Rs\\.Rs\\.)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "650019",
          "sort_UID": "650019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy hh:mm:ss a"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*(\\d{4}) is debited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*\\(upi ref no (\\d*)",
          "account_type": "bank",
          "pattern_UID": "650020",
          "sort_UID": "650020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 3,
              "is_upi": true
            }
          }
        }
      ],
      "sender_UID": "90000065",
      "senders": [
        "IOBCHN"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09266292666"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Karur Vysya Bank",
      "name": "KVB",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*debited .* \\**(\\d{4}) on (\\d{2}-[a-z]{3}-\\d{4} \\d{2}:\\d{2}:\\d{2}) \\*\\s*\\\"(.*)\\\"",
          "account_type": "bank",
          "pattern_UID": "660001",
          "sort_UID": "660001",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "cash withdrawl at",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "cheque",
                  "value": "chq",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "cheque",
                  "value": "clg",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": "neft",
                  "pos_override": "Net Banking"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}) debited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (\\d{2}-[a-z]{3}-\\d{2} \\d{2}:\\d{2}:\\d{2}) \\*\\s*(.*)\\s*\\*.* avl bal is\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "660002",
          "sort_UID": "660002",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "note": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)card no. x*(\\d{4}) debited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (\\d{2}-[a-z]{3}-\\d{2} \\d{2}:\\d{2}:\\d{2}) \\*\\s*(.*)\\s*\\*.* avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "660003",
          "sort_UID": "660003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}) is the balance in a\\/c \\**(\\d{4})",
          "account_type": "bank",
          "pattern_UID": "660004",
          "sort_UID": "660004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c -x*(\\d{4}):\\s*[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "660005",
          "sort_UID": "660017",
          "sms_type": "transaction",
          "reparse": true,
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}) credited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?\\*(.*?)\\*.*?avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "660006",
          "sort_UID": "660009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c x+(\\d{4}) is debited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*) to\\s*(.*) \\.[\\s\\S]*info :P2A\\/(\\d*)",
          "account_type": "bank",
          "pattern_UID": "660007",
          "sort_UID": "660007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "Net Banking",
                  "txn_type": "net_banking",
                  "value": "bank account",
                  "set_no_pos": true
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MM/dd/yy hh:mm:ss a"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "note": {
              "prefix": "Reference number: ",
              "group_id": 5
            },
            "network_reference_id": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*(\\d{4}) is debited for (?:INR|Rs. Rs|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?\\((imps ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "660008",
          "sort_UID": "660008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}) credited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?\\*(.*?\\-(.*?)\\-\\d+.*?)\\*.*?avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "660009",
          "sort_UID": "660006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c x*(\\d{4}) is credited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) from (.*?) on (.*?)\\.",
          "account_type": "bank",
          "pattern_UID": "660010",
          "sort_UID": "660010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "MM/dd/yy hh:mm:ss a"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\**\\d*(\\d{4}) is credited .*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?by.*?\\((imps ref no[\\s\\.]*(\\d*))",
          "account_type": "bank",
          "pattern_UID": "660011",
          "sort_UID": "660011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been credited .*?to a\\/c \\**(\\d{4}) on .*? \\*\\s*\\\"(rev imps.*?|.*refund.*?)\\\"",
          "account_type": "bank",
          "pattern_UID": "660012",
          "sort_UID": "660012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been credited .*?(chq[\\s\\.]*no \\d+)\\)\\s*to a\\/c \\**(\\d{4}) on .*? \\*\\s*\\\"by clg\\:(.*?)\\:.*?\\\"",
          "account_type": "bank",
          "pattern_UID": "660013",
          "sort_UID": "660013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "note": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been credited .*?to a\\/c \\**(\\d{4}) on .*? \\*\\s*\\\"((?:imps.*?\\-\\d+|\\d+|ft[\\s\\-]*cr[\\s\\-]*\\d+\\s*)\\-(.*?)\\-.*?)\\\"",
          "account_type": "bank",
          "pattern_UID": "660014",
          "sort_UID": "660014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been credited .*?to a\\/c \\**(\\d{4}) on .*? \\*\\s*\\\"(.*?)\\\"",
          "account_type": "bank",
          "pattern_UID": "660015",
          "sort_UID": "660015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)credit for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) done to your account \\**\\d*(\\d{4}) on.*?towards lpg subsidy",
          "account_type": "bank",
          "pattern_UID": "660016",
          "sort_UID": "660016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "LPG Subsidy",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}) credited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*\\-(.*?refund.*?)\\* through.*?avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "660017",
          "sort_UID": "660005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i) a\\/c no[\\s\\.]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?credited imps\\-.*x+\\w+\\-(.*?)\\.if not",
          "account_type": "bank",
          "pattern_UID": "660018",
          "sort_UID": "660018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000066",
      "senders": [
        "KVBANK",
        "KVBUPI",
        "KVBMPY"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09223008488"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "South Indian Bank",
      "name": "South Indian",
      "patterns": [
        {
          "regex": "(?i) x*\\d?(\\d{3,4}) (?:is |)debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:@|info:)\\s?((ATM|M-pay|CTS|NEFT|DD|TO|RD|SELF|RECS).*?)(?:Cur|final|) (?:balance is|bal:)\\s?(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "670001",
          "sort_UID": "670001",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "cheque",
                  "value": "cts",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "ecs",
                  "value": "ecs"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i) x*\\d?(\\d{3,4}) (?:is |)debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) Info:\\s?(?:Purchase-|)(.*) (?:Cur|final) (?:bal:|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "670002",
          "sort_UID": "670002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*info[\\s\\:]*(.*?)\\..*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "670003",
          "sort_UID": "670026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)balance (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) in your account x*\\d*(\\d{4}) has .*",
          "account_type": "bank",
          "pattern_UID": "670004",
          "sort_UID": "670004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)balance in x*\\d*(\\d{4}):\\s?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "670005",
          "sort_UID": "670005",
          "sms_type": "transaction",
          "reparse": true,
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)x*\\d*(\\d{4}):\\s?(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "670020",
          "sort_UID": "670020",
          "sms_type": "transaction",
          "reparse": true,
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*?(\\d{3,4})\\s*(?:is)? debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) info[\\s\\:]*transaction\\.",
          "account_type": "bank",
          "pattern_UID": "670021",
          "sort_UID": "670021",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?(?:neft|from a\\/c)[\\s\\:]*(.*?)\\.\\s*final balance is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "670022",
          "sort_UID": "670022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*(?:upi|imps)\\/.*?\\/.*?\\/(.*?)(?:\\/|\\.\\s*final).*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "670023",
          "sort_UID": "670023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*(mob\\/.*?\\/(.*))\\..*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "670024",
          "sort_UID": "670024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{3,4}) is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?) for reversal.*?(upi ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "670025",
          "sort_UID": "670025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd HH.mm.ss"
                }
              ]
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*info[\\s\\:]*.*?(refund|upi\\/?rev|reversed|impsrev|reversal).*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "670026",
          "sort_UID": "670003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "upi",
                  "pos_override": "Rev-Upi"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your account is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on ([\\d\\-]* [\\d\\\\.]*) by (upi ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "670027",
          "sort_UID": "670027",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd HH.mm.ss"
                }
              ]
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c[\\s\\.]*x*(\\d{4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?linked to mobile [x\\d]+ (imps ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "670028",
          "sort_UID": "670028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:account no|netc a\\/c)[\\s\\.]*\\w*(\\d{4}) has been credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?via (transaction id (\\w+))\\.\\s*.*?account balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "670029",
          "sort_UID": "670029",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*(\\d{4}) having a mobile no.*?has been credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.",
          "account_type": "bank",
          "pattern_UID": "670030",
          "sort_UID": "670030",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)netc a\\/c.*?debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?for (\\w+) via .*? at +(.*)\\.\\s*updated acct bal is (?:INR|Rs)[\\.\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "SIB FASTag",
          "pattern_UID": "670031",
          "sort_UID": "670031",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}) debit\\:(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}) (upi\\/.*?|mob|neft to)[\\/\\:].*?[\\/\\:](.*?)(?:\\/.*?|\\s)bal\\:(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "670032",
          "sort_UID": "670032",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}) debit\\:(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}) (.*?) bal\\:(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "670033",
          "sort_UID": "670033",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "atm-",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        }
      ],
      "sender_UID": "90000067",
      "senders": [
        "SIBSMS",
        "NKOTP"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "9278177444"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "City Union Bank",
      "name": "CUB",
      "patterns": [
        {
          "regex": "(?i)x*([\\dx]{4}) debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards to (?:ecom|pos):.*-(.*): on.*avl bal[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "680001",
          "sort_UID": "680001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)x*([\\dx]{4}) debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards to atm wdl:.*-(.*)[:\\s]*on.*avl bal[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "680002",
          "sort_UID": "680002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)x*([x\\d]{4}) debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards to (?:onl |)(loan|neft|cash\\swithdrawal|cheque|int\\stransfer|transfer|clearing|chq transfer|clg chq|ecs|debit).*avl bal[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "680003",
          "sort_UID": "680003",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": false
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x*([\\dx]{4}) debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards to onl :?(.*?):.* on.*avl bal[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "680004",
          "sort_UID": "680004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)x*([\\dx]{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*(IMPS Ref no\\.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "680005",
          "sort_UID": "680005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)x*([x\\d]{4}) credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards (.*?)avl bal[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "680006",
          "sort_UID": "680015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:savings|current\\saccount) no x*([x\\d]{4})\\s*is\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "680007",
          "sort_UID": "680007",
          "reparse": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was spent on (.*?) using cub credit card ending \\d*(\\d{4}).*at (.*?)\\..*credit limit\\:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "680008",
          "sort_UID": "680008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*(\\d{3,4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?credited.*?\\((upi ref no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "680009",
          "sort_UID": "680009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)x*([x\\d]{4}) credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards by (pos|atm|ecom) rev(?:\\-csh wdl)?\\:\\w+\\-(.*?)\\:.*\\.*avl bal[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "680010",
          "sort_UID": "680010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "pos": {
              "group_id": 4
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)x*([x\\d]{4}) credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards .*(?:neft|rtgs) trf[\\s\\:]*(.*?) \\w+\\:.*?avl bal[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "680011",
          "sort_UID": "680011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x*([x\\d]{4}) credited with (?:INR|Rs)([\\.,\\s]*[\\d,]*\\.?\\d{0,2}) towards by chq .*avl bal[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "680012",
          "sort_UID": "680012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)x*([x\\d]{4}) credited with (?:INR|Rs)([\\.,\\s]*[\\d,]*\\.?\\d{0,2}) towards by .*salary.*?avl bal[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "680013",
          "sort_UID": "680013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)x*([x\\d]{4}) credited with (?:INR|Rs)([\\.,\\s]*[\\d,]*\\.?\\d{0,2}) towards by (?:clearing|cheque).*[\\-\\:]([a-z\\s\\/]*)\\:.*avl bal[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "680014",
          "sort_UID": "680014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)x*([x\\d]{4}) credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards by .*?(?:rev\\-rup|refund|atm rev|amt rev\\-|reversal|\\sint rev|\\sow rev|rev\\-mds|rev[\\_\\-]\\d+|imps rev).*avl bal[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "680015",
          "sort_UID": "680006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{2,4}) is credited (?:for|by) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?(?:from|by).*?\\(((upi|imps) ref no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "680016",
          "sort_UID": "680016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:account|savings) no[\\s\\.]*x*(\\d{2,4}) credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards clg (cheque no\\:\\d+) on",
          "account_type": "bank",
          "pattern_UID": "680017",
          "sort_UID": "680017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*([x\\d]{4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?reversal of.*?\\((imps ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "680018",
          "sort_UID": "680018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        }
      ],
      "sender_UID": "90000068",
      "senders": [
        "CUBANK",
        "CUBLTD",
        "CUBSMS"
      ]
    },
    {
      "full_name": "Jammu & Kashmir Bank",
      "name": "J&K Bank",
      "patterns": [
        {
          "regex": "(?i)(?:a\\/c|account) (?:[x+\\d]+)([x\\d]{4}) is\\s*debited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*account of (.*)(?:\\.\\sa\\/c|\\sat) .* (?:available\\sbal|account\\sbalance) is\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "690001",
          "sort_UID": "690001",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "cwdr",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|account) (?:[x\\d]*)([x\\d]{4}) is\\s*credited[\\s\\S]*by (?:an amount of |)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?on account of (.*?)\\..*?(?:available\\sbal|account\\sbalance) is\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "690003",
          "sort_UID": "690010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i) purchase of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been .* credit card\\s*\\d*x*\\d*(\\d{4}) at (.*) on.* balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "690005",
          "sort_UID": "690016",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)card\\s*(?:acct ending)?\\s*\\d*x*(\\d{4}) .* due (?:date|on) (\\d{2}-[a-z]{3}-\\d{2}|\\d{2}[\\/\\-]\\d{2}[\\-\\/]\\d{4}).*total\\s*(?:amount)?\\s*due\\s*(?:is|\\:)\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*?min.*?\\s*(?:amount due)? (?:is|due\\:)\\s*(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "690006",
          "sort_UID": "690006",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 3
            },
            "min_due_amount": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x+(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*\\(((UPI|imps) Ref no.? (\\d*))",
          "account_type": "bank",
          "pattern_UID": "690007",
          "sort_UID": "690007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": "imps"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|account) (?:[x+\\d]+)([x\\d]{4}) is\\s*credited by (?:an amount of |)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?salary.*? (?:available\\sbal|account\\sbalance) is\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "690008",
          "sort_UID": "690008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was spent at (.*?) on (\\d{2}\\-\\w{3}\\-\\d{4} [\\d\\:]*) .*?credit card \\d*x*(\\d{4}).*?limit is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "690009",
          "sort_UID": "690009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 4
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|account) (?:[x+\\d]+)([x\\d]{4}) is\\s*credited by (?:an amount of |)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?neft[\\s\\-]*(.*?)\\..*?(?:available\\sbal|account\\sbalance) is\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "690010",
          "sort_UID": "690003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)you have received (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from (.*?)\\s*\\(.*?credited to your a\\/c x*(\\d{4}).*?(upi txn ref id[\\s\\:]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "690011",
          "sort_UID": "690011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) successfully credited to your a\\/c x*(\\d{4}) with (rrn no[\\s\\.]*(\\d+)) .*?received from (.*?) having",
          "account_type": "bank",
          "pattern_UID": "690012",
          "sort_UID": "690012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)Transaction of (INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) at (.*?) has been made on (.*?) for .*?credit card \\d*x*(\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "690013",
          "sort_UID": "690013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 5
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)credit card [\\dx]*(\\d{4}) for.*?minimum due is (?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*?total due is (?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2}).*?due date is (\\d{2}\\-\\w{3}\\-\\d{2,4})",
          "account_type": "credit_card",
          "pattern_UID": "690014",
          "sort_UID": "690014",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 3
            },
            "min_due_amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)fund transfer from (.*?)\\s*\\-.*?successful[\\s\\.]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to your account\\..*?dated on[\\s\\:]*(.*?)\\, (transaction id\\:(\\d+))",
          "account_type": "bank",
          "pattern_UID": "690015",
          "sort_UID": "690015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            },
            "pos": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|account) (?:[x\\d]*)([x\\d]{4}) is\\s*credited[\\s\\S]*by (?:an amount of |)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?on.*?(?:refund|\\srfnd\\s|account of (?:rev[\\.\\s\\/\\-]|revsl\\.)|\\sreverse|atm rev|ns\\-rev|reversal).*?(?:available\\sbal|account\\sbalance) is\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "690016",
          "sort_UID": "690005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)you have sent (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to .*?\\((.*)\\) from your a\\/c x*(\\d{4}) .*?upi txn ref id[\\s\\:]*(\\d+)",
          "account_type": "bank",
          "pattern_UID": "690017",
          "sort_UID": "690017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)transaction of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) with upi txn ref id[\\s\\:]*(\\d+) has been refunded",
          "account_type": "bank",
          "pattern_UID": "690018",
          "sort_UID": "690018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "network_reference_id": {
              "group_id": 2,
              "is_upi": true
            }
          }
        }
      ],
      "sender_UID": "90000069",
      "senders": [
        "JKBANK",
        "JKCARD"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "9223040000"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Saraswat Bank",
      "name": "Saraswat Bank",
      "patterns": [
        {
          "regex": "(?i)a\\/c x*\\d*?(\\d{1,4}) is dr for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.? .*(?:pos|ecom)\\/(.*?)\\/.* clear bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "700001",
          "sort_UID": "700001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*?(\\d{1,4}) is dr for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.? (.*)\\. clear bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700002",
          "sort_UID": "700015",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:ac |a\\/c.|acct no.|account no.)\\d*?(\\d{2,4}) is (debited|credited) for.*? (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .* (?:balance\\sis\\,?\\s*|bal)(?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700004",
          "sort_UID": "700004",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "net_banking",
                  "value": "debited"
                },
                {
                  "txn_type": "credit",
                  "value": "credited",
                  "pos_override": "Credit"
                }
              ],
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)\\d*?(\\d{2,4}) is (debited|credited) for (cheque no \\d*) for .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700005",
          "sort_UID": "700005",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "amount": {
              "group_id": 4
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 5
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "debited"
                },
                {
                  "txn_type": "credit",
                  "value": "credited",
                  "pos_override": "Credit"
                }
              ],
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*?(\\d{1,4}) is cr for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* clear bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700006",
          "sort_UID": "700020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)balance for ac x*\\/*\\d*?(\\d{2,4}) .*? bal: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700007",
          "sort_UID": "700007",
          "sms_type": "transaction",
          "reparse": true,
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was (debited|credited) .* debit card \\d*x+(\\d{4}) on (.*) at (.*) - .* balance in your account is: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "700008",
          "sort_UID": "700008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "credited",
                  "pos_override": "Credit"
                },
                {
                  "txn_type": "debit_card",
                  "value": ""
                }
              ],
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 5
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*?(\\d{1,4}) is dr for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.? on (\\d{2}\\/\\d{2}\\/\\d{2} \\d{2}\\:\\d{2}\\:\\d{2}) (.*)\\. clear bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700011",
          "sort_UID": "700011",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no. x+\\d*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*) and credited to (VPA|a\\/c no)\\.? (.*) \\((upi ref no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "700012",
          "sort_UID": "700012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "vpa"
                },
                {
                  "txn_type": "upi",
                  "value": "a/c",
                  "pos_override": "UPI Funds Transfer",
                  "set_no_pos": true
                }
              ],
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 5
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 6
            },
            "network_reference_id": {
              "group_id": 7,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was credited.* debit card on (.*) at (.*?)\\-.*?available balance.*account is\\: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) \\(",
          "account_type": "debit_card",
          "pattern_UID": "700013",
          "sort_UID": "700013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yyyy hh:mm:ss a"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[.\\s]*x+\\d*?(\\d{2,4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.* credited\\s*\\((imps ref no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "700014",
          "sort_UID": "700014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|account no ending with) x*\\d*?(\\d{2,4}) is (?:dr for|debited with) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.? .*?(?:upi\\-.*?\\@.*?|upi\\:.*?\\@.*?|upi\\s?)[\\/\\:\\-](.*?)(?:\\/|\\:|[\\-\\d\\:]*\\.\\s*your).* (?:clear|current) bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700015",
          "sort_UID": "700002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|ending with) x*\\d*?(\\d{1,4}) is (?:cr for|credited with) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*(?:neft|rtgs|upi|trf )[\\s\\/\\:]*(?:m\\/s\\.)?(.*?)(?:\\.\\s*clear|[\\/\\:]).*?bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700016",
          "sort_UID": "700016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*?(\\d{1,4}) is cr for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?(?:salary|sal (?:pd for|for)?\\s*(?:jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)).*?bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700017",
          "sort_UID": "700017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)tranx of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) using credit card no (\\d{4}) is made at (.*?) \\w+ on (\\d{2}\\-\\d{2}\\-\\d{4} [\\d\\:]*)\\.\\s*avail.*?limit is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "700018",
          "sort_UID": "700018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)stmt.*?saraswat bank credit card (\\d+) is.*?min\\.amt\\.due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) total amt\\.\\s*due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) pymt due by (\\d{2}\\-\\d{2}\\-\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "700019",
          "sort_UID": "700019",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 3
            },
            "min_due_amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|ending with) x*\\d*?(\\d{1,4}) is (?:cr for|credited with) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*(revupi|reversal|refund|\\srevsl|[_\\s]rev[\\d\\:]+|upirev|imps rev).* (?:clear|current) bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700020",
          "sort_UID": "700006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "revupi",
                  "pos_override": "Rev-Upi"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\**\\d*(\\d{4}) is credited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on(.*?) by.*?\\((imps ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "700021",
          "sort_UID": "700021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy 'at' HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*?(\\d{3,4}) is dr for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*?at (.*?) for (vehicle \\w+)\\.\\s*clear bal.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700022",
          "sort_UID": "700022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)account no ending with x*\\d*(\\d{4}) is debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*?) towards[\\s\\:\\.]*(ach debit|rupaypos|nfs\\:cw|visaecom|netc\\/\\w+|rupayecom|visapos)[\\s\\:\\/]*(.*?)(?:[\\s\\:\\.\\d]+)\\s*your current bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "700023",
          "sort_UID": "700023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "nfs",
                  "pos_override": "ATM"
                },
                {
                  "acc_type_override": "bank",
                  "txn_type": "net_banking",
                  "value": "netc"
                },
                {
                  "txn_type": "ecs",
                  "acc_type_override": "bank",
                  "value": "ach"
                },
                {
                  "txn_type": "debit_card",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 6
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)account no[\\s\\.]*ending with x*\\d*(\\d{4}) is debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*?)[\\s\\.]*(?:towards|rtgs\\/neft utr no\\.) .*?\\.\\s*your current bal is (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700024",
          "sort_UID": "700024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[.\\s]*x*\\d{0,2} is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.* and a\\/c.* is credited\\s*\\(imps ref no (\\d+)\\)",
          "account_type": "bank",
          "pattern_UID": "700025",
          "sort_UID": "700025",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 2,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)account.*?ending with x*\\d*(\\d{4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*?) towards (?:neft \\w+\\s|upi\\-|by\\s|rtgs \\w+\\s)([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+|.*?)(?:\\-|\\.\\s*your).*?bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700026",
          "sort_UID": "700026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)account.*?ending with x*\\d*(\\d{4}) is credited (?:with|for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*?) towards .*?current bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700027",
          "sort_UID": "700027",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)account no[\\s\\.]*ending with x*\\d*(\\d{4}) is debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*?)[\\s\\.]*against (cheque no[\\s\\.]*\\d+)\\s*\\-(.*?)\\.\\s*your.*?bal is (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "700028",
          "sort_UID": "700028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 5
            },
            "note": {
              "group_id": 4
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 6
            }
          }
        }
      ],
      "sender_UID": "90000070",
      "senders": [
        "SARBNK",
        "SRCBNK",
        "SBCARD"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "9015431345"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "United Bank of India",
      "name": "United Bank",
      "patterns": [
        {
          "regex": "(?i)(?:account|ac) x*\\d*(\\d{4}) .* debited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\s\\:]*).*?(debit card|NEFT\\/RTGS|)\\..*(?:bal|balance\\sis) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "720001",
          "sort_UID": "720001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "pos_override": "Debit Card Purchase",
                  "value": "debit card"
                },
                {
                  "txn_type": "net_banking",
                  "value": "neft"
                },
                {
                  "txn_type": "default",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)transaction of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has .* credit card \\d*\\**(\\d{4}) at (.*) at .*avbl lmt is [\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "720002",
          "sort_UID": "720002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\s\\:]*).*(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "720004",
          "sort_UID": "720017",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)balance .* x+\\d*(\\d{4}) is [\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "720005",
          "sort_UID": "720005",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)credit card \\d*\\**(\\d{4}) .*total amt due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*and min amt due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* pay by (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "720006",
          "sort_UID": "720006",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)credit card \\d*\\**(\\d{4}) .*min due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) total due (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}).*due by (\\d{2}\\-[a-z]{3}\\-\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "720007",
          "sort_UID": "720007",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yyyy"
                }
              ]
            },
            "amount": {
              "group_id": 3
            },
            "min_due_amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on .*\\(((upi|imps) ref no (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "720008",
          "sort_UID": "720008",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi"
                },
                {
                  "txn_type": "net_banking",
                  "value": "imps",
                  "pos_override": "Net Banking"
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) was spent on.*credit card ending x*\\d*(\\d{4}) on (.*) at (.*?)\\.avl bal [\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\, curr o\\/s -(?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "720009",
          "sort_UID": "720009",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            },
            "outstanding_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)card ending with x*\\d*(\\d{4}) bill of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is due on (\\d{2}\\-[a-z]{3}\\-\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "720010",
          "sort_UID": "720010",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yyyy"
                }
              ]
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (?:[\\d\\-\\s\\:]*).*(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}).*?info[\\s\\:]*.*?(?:imps_rev|refund|reversal|_rev_|reversed|[\\s\\:]rev\\_\\d+|aeps\\-rev)",
          "account_type": "bank",
          "pattern_UID": "720011",
          "sort_UID": "720011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (?:[\\d\\-\\s\\:]*) by.*?upi\\_+rev\\_+.*(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "720012",
          "sort_UID": "720012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\s\\:]*).*? upi[\\s\\:]*(.*?)\\/.*?(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "720014",
          "sort_UID": "720014",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\s\\:]*).*(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?neftin\\/.*?\\/(\\w.*?)(?:\\/|$|\\.\\s*welcome)",
          "account_type": "bank",
          "pattern_UID": "720015",
          "sort_UID": "720015",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 5
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?for reversal .*?(imps ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "720013",
          "sort_UID": "720013",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\s\\:]*).*(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}).*?info[\\s\\:]*(.*?)(?:$|\\.\\s*welcome)",
          "account_type": "bank",
          "pattern_UID": "720016",
          "sort_UID": "720016",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 5
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 5
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:ac|account) x*\\d*(\\d{4}) .* credited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\-\\s\\:]*).*(?:bal|balance is) (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}).*?info[\\s\\:]*(interest cr|salary)",
          "account_type": "bank",
          "pattern_UID": "720017",
          "sort_UID": "720004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 5
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 5,
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?debited from.*?(upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "720018",
          "sort_UID": "720018",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)fund transfer from.*?is successful[\\s\\.]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is credited to your account x*(\\d{4})",
          "account_type": "bank",
          "pattern_UID": "720019",
          "sort_UID": "720019",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000072",
      "senders": [
        "UBIBNK",
        "UBICCR",
        "UNBMPY",
        "WLIUBC"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "8067747700"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Dhanlaxmi Bank",
      "name": "Dhanlaxmi Bank",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is debited from a\\/c x+(\\d{4}) on .*\"debit card purchase-(.*)\". aval bal (?:is |)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "740001",
          "sort_UID": "740001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is debited from (?:a\\/c|ac) x+(\\d{4})\\s*on .*\"(.*)\".*aval bal (?:is |)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "740002",
          "sort_UID": "740002",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "cheque",
                  "value": "clg",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "ecs",
                  "value": "ecs"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)credit card no ending (\\d{4}) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.* at (.*) contact",
          "account_type": "credit_card",
          "pattern_UID": "740003",
          "sort_UID": "740003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*is credited to (?:ac|a\\/c) x+(\\d{4}) on .*\\-\\s*[\\\"\\*](.*?)[\\\"\\*].*?aval bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "740004",
          "sort_UID": "740013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x+(\\d{4}) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "740005",
          "sort_UID": "740005",
          "sms_type": "transaction",
          "reparse": true,
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)credit card number ending (\\d{4}) .*min.amt.due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) total amt.due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) pymt due on (\\d{2}-\\d{2}-\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "740006",
          "sort_UID": "740006",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c bal \\(x+(\\d{4})\\) is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) as on",
          "account_type": "bank",
          "pattern_UID": "740007",
          "sort_UID": "740007",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\.\\s]*x*(\\d{3,4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?credited.*?\\((upi ref no[\\s\\.]*(\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "740008",
          "sort_UID": "740008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*is credited to (?:ac|a\\/c) x+(\\d{4}) on .*?((?:\\\"from[\\s\\:]*|imps cr\\.\\:.*?\\:|mer cr\\/.*?\\/)(.*?)[\\:\\/].*?)\\\".*?aval bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "740009",
          "sort_UID": "740009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*is credited to (?:ac|a\\/c) x+(\\d{4}) on .*?(upi\\-.*?\\-.*?\\-(.*?)\\/.*?)\\\".*?aval bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "740010",
          "sort_UID": "740010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*\\d*(\\d{4}) is credited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*? for reversal.*?(upi ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "740011",
          "sort_UID": "740011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*is credited to (?:ac|a\\/c) x+(\\d{4}) on .*?salary.*?aval bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "740012",
          "sort_UID": "740012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*is credited to (?:ac|a\\/c) x+(\\d{4}) on .*?(refund|rever\\-|reversal|rev imps|rev atm|\\\"rev\\s\\:).*?aval bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "740013",
          "sort_UID": "740004",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited (?:by|for) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*(?:from|by).*?((upi|imps) ref (?:no)?\\s*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "740014",
          "sort_UID": "740014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)thank you for your payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) towards.*?your.*?credit card no ending (\\d{4}) on",
          "account_type": "credit_card",
          "pattern_UID": "740015",
          "sort_UID": "740015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000074",
      "senders": [
        "DHANBK"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09211937373"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Tamilnad Mercantile Bank",
      "name": "TMB",
      "patterns": [
        {
          "regex": "(?i)acc#\\d*(\\d{4}) debited with (?:INR|Rs)[\\.,\\s]+([\\d,]*\\.?\\d{0,2}) for (?:ATM Txn|Txn at ATM).* (?:acc bal|bal in acc) (?:INR|Rs)[\\.,\\s\\+]+([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "760001",
          "sort_UID": "760001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:acc#|acc )\\d*(\\d{4}) is debited with (?:INR|Rs)[\\.,\\s]+([\\d,]*\\.?\\d{0,2}) for Txn at (.*) card.* (?:acc bal.|bal in acc )(?:INR|Rs)[\\.,\\s\\+]+([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "760002",
          "sort_UID": "760002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)\\w+ \\d*(\\d{4}) (credited|debited) by (?:INR|Rs)[\\.,\\s]+([\\d,]*\\.?\\d{0,2}).*avbl bal (?:INR|Rs)[\\.,\\s]+([\\d,-]*\\.?\\d{0,2}).*?as on (\\d{2}-\\d{2}-\\d{4}\\s\\d{2}:\\d{2})",
          "account_type": "bank",
          "pattern_UID": "760004",
          "sort_UID": "760004",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "default",
                  "value": "debited"
                },
                {
                  "txn_type": "credit",
                  "value": "credited",
                  "pos_override": "Credit"
                }
              ],
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]+([\\d,]*\\.?\\d{0,2}) .*deposited .* (?:a\\/c \\w* |acc#)\\d*(\\d{4}) at .* (?:bal .* is|accbal) (?:INR|Rs)[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "760005",
          "sort_UID": "760005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c no|a\\/c|ur)[\\s\\.].*?(\\d{4}) (?:is credited|has been credited|credited) with (?:INR|Rs)[\\.,\\s]+([\\d,]*\\.?\\d{0,2}).*?(?:by|a\\/c linked to) (.*?)(?: from|\\.curr|\\().*?bal.*?(?:INR|Rs)[\\.,\\s]+([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "760006",
          "sort_UID": "760015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:balance on [\\w\\-]+ [\\d\\:]+ (?:am|pm) for|\\,) \\w*(\\d{4})\\s*is (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "760007",
          "sort_UID": "760016",
          "reparse": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]x+\\d*(\\d{4}) .*debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*) and.* linked to (.*) is credited \\((UPI ref no.(\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "760009",
          "sort_UID": "760009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy hh:mm a"
                }
              ]
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 5
            },
            "network_reference_id": {
              "group_id": 6,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)\\w+ \\d*(\\d{4}) credited (?:INR|Rs)[\\.,\\s\\+]+([\\d,]*\\.?\\d{0,2}) on (.*?)\\..*?(?:neft|rtgs)\\-\\w+\\-(.*?)\\-.*?clr bal (?:INR|Rs)[\\.,\\s\\+]+([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "760010",
          "sort_UID": "760010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c \\w+\\s*(\\d{4}) has been debited with (?:INR|Rs)[\\.,\\s]+([\\d,-]*\\.?\\d{0,2}) for (txn ref no[\\s\\.\\:]*(\\d+)).*?avbl bal is (?:INR|Rs)[\\.,\\s]+([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "760011",
          "sort_UID": "760011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*\\d*(\\d{4}) is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?) as a reversal.*?(upi ref no\\.(\\d+))",
          "account_type": "bank",
          "pattern_UID": "760012",
          "sort_UID": "760012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy hh:mm a"
                }
              ]
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c.*?credited with (?:INR|Rs)[\\.,\\s]+([\\d,-]*\\.?\\d{0,2}) towards refund for.*? at (.*?) using card\\#\\d*(\\d{4})",
          "account_type": "debit_card",
          "pattern_UID": "760013",
          "sort_UID": "760013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)ur acc.*?credited with (?:INR|Rs)[\\.,\\s\\+]*([\\d,-]*\\.?\\d{0,2}) for failure atm txn[\\s\\.]*card\\#\\d*(\\d{4}).*?acc bal (?:INR|Rs)[\\.,\\s\\+]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "760014",
          "sort_UID": "760014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "value": "ATM Reversal",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c[\\s\\.].*?(\\d{4}) has been credited with (?:INR|Rs)[\\.,\\s]+([\\d,]*\\.?\\d{0,2}).*?by a\\/c linked to.*?for (ref no[\\s\\:](\\d+)).*?bal.*?(?:INR|Rs)[\\.,\\s]+([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "760015",
          "sort_UID": "760006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on.*?credited \\((imps ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "760016",
          "sort_UID": "760007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)your account no[\\s\\.]*\\d*(\\d{4}) credited with (?:INR|Rs)[\\.,\\s]+([\\d,-]*\\.?\\d{0,2}) on .*?(ref no\\s*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "760017",
          "sort_UID": "760017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)tmb credit card ending with (\\d{4}) for (INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) in .*? at (.*?) on ([\\d\\-]+ [\\d\\:]+)\\..*?avail[\\s\\.]*credit limit[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "760018",
          "sort_UID": "760018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "pan": {
              "group_id": 1
            },
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)credit card ending with \\d*(\\d{4}) is generated[\\s\\.]*total amt due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?min amt due (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?due date (\\d{2}\\-\\w{3}\\-\\d{2,4})",
          "account_type": "credit_card",
          "pattern_UID": "760019",
          "sort_UID": "760019",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your\\s*(?:payment to)? (.*?)\\s*(?:payment through tmb econnect for|\\(\\w+\\) for) (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:is)?\\s*successful.*?avbl bal in \\w*(\\d{4}) is (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "760020",
          "sort_UID": "760020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "Net Banking",
                  "txn_type": "net_banking",
                  "value": "online"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your self transfer from \\w*(\\d{4}) to .*?for (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) successful.*?bal in \\w+ is (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "760021",
          "sort_UID": "760021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)\\w+ \\d*(\\d{4}) debited (?:INR|Rs)[\\.,\\s\\+]*([\\d,-]*\\.?\\d{0,2}).*?on ([\\d\\-]* [\\d\\:]*)[\\s\\.]*info[\\s\\:]*(?:neft|rtgs)\\-\\w+\\-(.*?)\\-\\w+\\.clr bal (?:INR|Rs)[\\.,\\s\\+]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "760022",
          "sort_UID": "760022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                }
              ]
            },
            "pos": {
              "group_id": 4
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            }
          }
        }
      ],
      "sender_UID": "90000076",
      "senders": [
        "TMBANK"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "9282441155"
                ],
                "format": "LVBBAL <Customer Id>"
              }
            ]
          }
        ]
      },
      "full_name": "Lakshmi Vilas Bank",
      "name": "Lakshmi Vilas",
      "patterns": [
        {
          "regex": "(?i)transaction of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) made on lvb card x+(\\d{4}) at \\+(.*) on .* balance .* is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "770001",
          "sort_UID": "770001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)transaction of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) made on lvb card x+(\\d{4}) at (.*) on .* balance .* is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "770002",
          "sort_UID": "770002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c \\d*x*(\\d{4}) debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .* txn (.*) and bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770003",
          "sort_UID": "770003",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "Cheque",
                  "value": "to clg",
                  "txn_type": "cheque"
                },
                {
                  "pos_override": "Net Banking",
                  "txn_type": "net_banking",
                  "value": "neft"
                },
                {
                  "pos_override": "Debit",
                  "txn_type": "default",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {},
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c \\d*x*(\\d{4}) credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*towards txn (.*?) and bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770004",
          "sort_UID": "770004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .* balance .* a\\/c \\d*x*(\\d{4}) as of ([\\d\\/\\s:]*)",
          "account_type": "bank",
          "pattern_UID": "770005",
          "sort_UID": "770005",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "account_balance": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)a\\/c no.? x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*and credited to a\\/c no.? (x*\\d*) \\((upi ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "770006",
          "sort_UID": "770006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited from a\\/c x+(\\d{4}) towards (.*) value.*clear bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770007",
          "sort_UID": "770007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": "imps",
                  "pos_override": "Net Banking"
                },
                {
                  "pos_override": "Net Banking",
                  "txn_type": "net_banking",
                  "value": "neft"
                },
                {
                  "pos_override": "Net Banking",
                  "txn_type": "net_banking",
                  "value": "rtgs"
                },
                {
                  "pos_override": "Cheque",
                  "value": "chq",
                  "txn_type": "cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)balance in (?:your account|a\\/c) [\\dx]*(\\d{4}).* is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770008",
          "sort_UID": "770008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:credited|deposited).*(?:account|a\\/c) x+\\d*x*(\\d{4}) towards (.*?)\\d{2}\\-\\w{3}\\-\\d{2,4}.*?(?:bal|available) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770009",
          "sort_UID": "770015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:credited|deposited).*(?:account|a\\/c) x+\\d*x*(\\d{4}) towards (?:reversal|refund|rev imps|rev upi cr).*(?:bal|available) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770010",
          "sort_UID": "770010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*(\\d{4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?for reversal.*?\\((upi ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "770011",
          "sort_UID": "770011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:credited|deposited).*(?:account|a\\/c) x+\\d*x*(\\d{4}).*towards (upi.*?\\d{12} (.*?) cr .*?)value.*?(?:bal|available) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770012",
          "sort_UID": "770012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:credited|deposited).*(?:account|a\\/c) x+\\d*x*(\\d{4}).*((?:imps|neft|ft\\s-\\scr).*?\\-\\s*\\w+\\s*\\-\\s*(.*?)(?:\\-| value).*?)\\d{2}\\-\\w{3}\\-\\d{2,4}.*?(?:bal|available) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770013",
          "sort_UID": "770013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:credited|deposited).*(?:account|a\\/c) x+\\d*x*(\\d{4}) towards chq dep.*?(?:bal|available) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770014",
          "sort_UID": "770014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:credited|deposited).*(?:account|a\\/c) x+\\d*x*(\\d{4}) towards (?:upirev|upi.*?(?:refund|reversal)|upi cr rev).*\\d{7} (.*?) cr value.*(?:bal|available) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770015",
          "sort_UID": "770009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{3,4}) is credited (?:by|for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on.*?(?:by|from).*?((imps|upi) ref no[\\.\\s]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "770016",
          "sort_UID": "770016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) credited to your lvb account x*(\\d{4}) on.*?(ref no\\s*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "770017",
          "sort_UID": "770017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        }
      ],
      "sender_UID": "90000077",
      "senders": [
        "LVBANK",
        "LVBSMS"
      ]
    },
    {
      "full_name": "Royal Bank of Scotland",
      "name": "RBS",
      "patterns": [
        {
          "regex": "(?i)balance .* x+(\\d{4}) is\\s*(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}) on (\\d{2}-\\d{2}-\\d{4} at \\d{2}:\\d{2}:\\d{2})",
          "account_type": "bank",
          "pattern_UID": "780006",
          "sort_UID": "780006",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy 'at' HH:mm:ss"
                }
              ]
            }
          }
        }
      ],
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09227148472"
                ]
              }
            ]
          }
        ]
      },
      "sender_UID": "90000078",
      "senders": [
        "RBSIND"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "18002700720"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "IDFC First Bank",
      "name": "IDFC",
      "patterns": [
        {
          "regex": "(?i)(?:a\\/c|ac) x*\\d*(\\d{4}) has been debited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\/\\s:\\.]*) (.*)\\. new balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "750002",
          "sort_UID": "750005",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                },
                {
                  "use_sms_time": true,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "cheque",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|ac) x*\\d*(\\d{4})\\s*(?:has been|is) credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) \\s*on ([\\d\\/\\s:\\.]*?)\\s*\\..* new balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "750003",
          "sort_UID": "750009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                },
                {
                  "use_sms_time": true,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)balance in a\\/c x*(\\d{4}) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "750004",
          "sort_UID": "750016",
          "sms_type": "transaction",
          "reparse": true,
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)purchase (?:for|worth) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .* on (.*) using idfc.*debit card\\..*?new balance is (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "750005",
          "sort_UID": "750002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c (?:no|ending)[\\.\\s]*x*(\\d{3,4}) is debited (?:for|by) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*credited \\((imps ref no (\\d+))\\s*\\)",
          "account_type": "bank",
          "pattern_UID": "750006",
          "sort_UID": "750006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x+\\d*(\\d{4}) .*?debited .*? (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*?) via (cheque no.? \\d+)\\. new balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "750007",
          "sort_UID": "750007",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                }
              ]
            },
            "note": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|ac) x*\\d*(\\d{4})\\s*has been credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) \\s*on ([\\d\\/\\s:\\.]*?)\\s*\\..*?(?:neft|rtgs)\\/.*?\\/(.*?)\\..*?new balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "750008",
          "sort_UID": "750008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                },
                {
                  "use_sms_time": true,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|ac) x*\\d*(\\d{4})\\s*has been credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) \\s*on (?:[\\d\\/\\s:\\.]*?)\\s*\\..*?neft\\/.*\\/(.*refund.*)\\.\\s*new balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "750009",
          "sort_UID": "750003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)fastag.*?credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\w{0,2}) on (.*?)[\\s\\.]*(ref no[\\s\\-]*(\\w+))[\\s\\.]*avbl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\w{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "pattern_UID": "750010",
          "sort_UID": "750010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                }
              ]
            },
            "pan": {
              "value": "FASTag"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "value": "FasTag Recharge",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\w{0,2}) toll debited from tag.*?for .*?at (.*?) on (.*?)\\.\\s*avbl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\w{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "pattern_UID": "750011",
          "sort_UID": "750011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                }
              ]
            },
            "pan": {
              "value": "FASTag"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 2
            },
            "pos": {
              "value": "Toll",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c x*\\d*(\\d{4}) (?:has been|is) debited by[\\s\\S]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?new balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "750012",
          "sort_UID": "750012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{3,4}) is credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on.*?by.*?(imps ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "750013",
          "sort_UID": "750013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) debited on (?:card|IDFC FIRST Bank Credit Card ending) x*(\\d{4}) at (.*?)[\\s\\.]+on .*?avbl[\\s\\.]*(?:lmt|limit)[\\s\\:]*(?:INR|Rs)?[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "750014",
          "sort_UID": "750014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "use_sms_time": true
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)you have just sent (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) through .*? to (.*?) using your upi",
          "account_type": "bank",
          "pattern_UID": "750015",
          "sort_UID": "750015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|ac) x*\\d*(\\d{4}) has been debited .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (?:[\\d\\/\\s:\\.]*) info (?:neft|rtgs)\\/.*?\\/(.*?)\\.\\s*new balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "750016",
          "sort_UID": "750004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(cheque no \\d+) to (.*?) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been presented .*?your a\\/c x*\\d*(\\d{4})[\\s\\;]*.*?will be paid.*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "750017",
          "sort_UID": "750017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "pan": {
              "group_id": 4
            },
            "amount": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(cheque number \\d+) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) deposited in your .*?ending with x*\\d*(\\d{4})[\\s\\,]*.*?has been presented",
          "account_type": "bank",
          "pattern_UID": "750018",
          "sort_UID": "750018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)you got an interest credit of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on your.*?account",
          "account_type": "bank",
          "pattern_UID": "750019",
          "sort_UID": "750019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_interest",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)credit card ending x*(\\d{4}) is due by (\\d{2}\\-\\d{2}\\-\\d{2,4})\\.\\s*min amt due[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.\\s*total amt due[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "750020",
          "sort_UID": "750020",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 4
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was spent.*?account ending (\\d{4}) on .*?online payment done.*?internet banking",
          "account_type": "bank",
          "pattern_UID": "750021",
          "sort_UID": "750021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was paid to (.*?) from your account.*?transaction id (\\w+).*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "IDFC FamPay Card",
          "pattern_UID": "750022",
          "sort_UID": "750022",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "YYYY"
            },
            "pos": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was sent to your account by (.*?) with transaction id (\\w+)\\..*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "IDFC FamPay Card",
          "pattern_UID": "750023",
          "sort_UID": "750023",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "YYYY"
            },
            "pos": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was credited to your account.*?transaction id (\\w+)\\..*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "IDFC FamPay Card",
          "pattern_UID": "750024",
          "sort_UID": "750024",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "YYYY"
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "network_reference_id": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)total outstanding on card ending with x*(\\d{4}) is ([\\d,]*\\.?\\d{0,2}) (?:INR|Rs) .*minimum amount due is [\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:INR|Rs) .*?due date of (\\d{1,2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "credit_card",
          "pattern_UID": "750025",
          "sort_UID": "750025",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)payment received.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) was received for your .*?credit card ending x*(\\d{4}) on [\\d\\-]+",
          "account_type": "credit_card",
          "pattern_UID": "750026",
          "sort_UID": "750026",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bill_payment",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit Card Bill Payment",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)statement.*?credit card x*(\\d{4}) has .*[\\s\\S]due date[\\s\\:]*(\\d{2}\\-\\d{2}\\-\\d{2,4})[\\s\\S]total amount due[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\S]minimum amount due[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "750027",
          "sort_UID": "750027",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "min_due_amount": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)spent (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*?idfc.*?debit card at (.*) on .*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "750028",
          "sort_UID": "750028",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000075",
      "senders": [
        "IDFCBK",
        "IDFCFB",
        "IDFCTS",
        "FAMPAY"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "77767"
                ],
                "format": "BALANCE XXXX"
              }
            ]
          }
        ]
      },
      "full_name": "DBS Bank",
      "name": "DBS",
      "patterns": [
        {
          "regex": "(?i)(?:cash withdrawal|withdrawn).*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) using (?:card no|card) x*\\**\\s*(\\d{4}).*?(?:balance in a\\/c|bal) is (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "790001",
          "sort_UID": "790001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)account \\**(\\d{4}) had a ATM .* (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d\\/]* at [\\d\\:]*).*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "790002",
          "sort_UID": "790002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:purchase transaction|payment) (?:at|to) (.*) using card no\\.? x*\\**(\\d{4}) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .* balance.*?is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "790003",
          "sort_UID": "790003",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)transfer request\\s*to (.*) for [\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:INR|Rs) from \\**(\\d{4}) has been successfully.*time: ([\\d\\/\\s\\:]*(?:am|pm))",
          "account_type": "bank",
          "pattern_UID": "790004",
          "sort_UID": "790004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy hh:mm a"
                }
              ]
            },
            "pos": {
              "group_id": 1,
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:transfered|transferred) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) from your account ending with \\**(\\d{4}) to pay (.*?)\\.",
          "account_type": "bank",
          "pattern_UID": "790005",
          "sort_UID": "790005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)linked to DBS BANK.*?a\\/c no. \\**(\\d{4}) is debited for (?:\\u20b9|Rs|INR)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) and.*credited to VPA \"?(.*)\"?\\s\\((UPI Ref no (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "790006",
          "sort_UID": "790006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)account no \\**(\\d{4}) is debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*current balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "790007",
          "sort_UID": "790007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)account (?:no|ending with) \\**(\\d{4}) (?:is|has been) credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})(?:\\son|\\.) .*(?:current|updated account) balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "790008",
          "sort_UID": "790008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs|[a-z]{3}) ([\\d,]*\\.?\\d{0,2}).*?spent on card x*\\s?\\d*(\\d{4}) .*?at (.*?)(?:\\.|[\\d\\-]+ \\w+ on).*?avl bal\\s*(?:is|\\:)\\s*(?:INR|Rs)?[\\.:,\\s|]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "790009",
          "sort_UID": "790009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "currency": {
              "group_id": 1
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:txn|withdrawal) of (?:INR|Rs)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}).*?debit card no \\**\\d*(\\d{4}) on.*?reversed",
          "account_type": "debit_card",
          "pattern_UID": "790010",
          "sort_UID": "790010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "value": "Debit Card Reversal",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s|]*([\\d,]*\\.?\\d{0,2}) was spent at (.*?) on card x*\\s*(\\d{4}) on.*?avl bal is (?:INR|Rs)[\\.:,\\s|]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "790011",
          "sort_UID": "790011",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your account .*? \\**x*\\d*(\\d{4}) .*?credited (?:with|for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*account balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "790012",
          "sort_UID": "790012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no. \\**(\\d{4}) is credited (?:for|with) (?:\\u20b9|Rs|INR)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?due to reversal.*?\\((UPI Ref no (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "790013",
          "sort_UID": "790013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)linked to DBS BANK.*?a\\/c no. \\**(\\d{4}) is credited (?:for|with) (?:\\u20b9|Rs|INR)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) by (.*?) \\((UPI Ref no (\\d*))\\)",
          "account_type": "bank",
          "pattern_UID": "790014",
          "sort_UID": "790014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s|]*([\\d,]*\\.?\\d{0,2})\\/\\s*[\\d\\/]+\\s*in was spent at (.*?) on card x*\\s*(\\d{4})",
          "account_type": "debit_card",
          "pattern_UID": "790015",
          "sort_UID": "790015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) withdrawn via card (\\d{4}) on [\\d\\-\\/\\s\\.]+avl bal[\\s\\:]*(?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.",
          "account_type": "debit_card",
          "pattern_UID": "790016",
          "sort_UID": "790016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)account no[\\s\\.]*\\**(\\d{4}) is debited with (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*? for (.*)\\.\\s*current balance is (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "790017",
          "sort_UID": "790017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited from dbs a\\/c no[\\s\\.]*\\**(\\d{4}) .*?via neft \\(utr ref no (\\w+)\\)",
          "account_type": "bank",
          "pattern_UID": "790018",
          "sort_UID": "790018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 3,
              "is_neft": true
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited from dbs a\\/c no[\\s\\.]*\\**(\\d{4}) .*? to (.*?) via rtgs \\(utr ref no (\\w+)\\)",
          "account_type": "bank",
          "pattern_UID": "790019",
          "sort_UID": "790019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 4,
              "is_rtgs": true
            }
          }
        },
        {
          "regex": "(?i)transaction of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) made on lvb card x+(\\d{4}) at \\+(.*) on .* balance .* is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "770001",
          "sort_UID": "770001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)transaction of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) made on lvb card x+(\\d{4}) at (.*) on .* balance .* is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "770002",
          "sort_UID": "770002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)balance in (?:your account|a\\/c) [\\dx]*(\\d{4}).* is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770008",
          "sort_UID": "770008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:credited|deposited).*(?:account|a\\/c) x+\\d*x*(\\d{4}) towards (?:reversal|refund|rev imps|rev upi cr).*(?:bal|available) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770010",
          "sort_UID": "770010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*(\\d{4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?for reversal.*?\\((upi ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "770011",
          "sort_UID": "770011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:credited|deposited).*(?:account|a\\/c) x+\\d*x*(\\d{4}).*towards (upi.*?\\d{12} (.*?) cr .*?)value.*?(?:bal|available) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770012",
          "sort_UID": "770012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:credited|deposited).*(?:account|a\\/c) x+\\d*x*(\\d{4}).*((?:imps|neft|ft\\s-\\scr).*?\\-\\s*\\w+\\s*\\-\\s*(.*?)(?:\\-| value).*?)\\d{2}\\-\\w{3}\\-\\d{2,4}.*?(?:bal|available) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770013",
          "sort_UID": "770013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:credited|deposited).*(?:account|a\\/c) x+\\d*x*(\\d{4}) towards chq dep.*?(?:bal|available) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770014",
          "sort_UID": "770014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:credited|deposited).*(?:account|a\\/c) x+\\d*x*(\\d{4}) towards (?:upirev|upi.*?(?:refund|reversal)|upi cr rev).*\\d{7} (.*?) cr value.*(?:bal|available) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770015",
          "sort_UID": "770009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{3,4}) is credited (?:by|for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) on.*?(?:by|from).*?((imps|upi) ref no[\\.\\s]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "770016",
          "sort_UID": "770016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) credited to your lvb account x*(\\d{4}) on.*?(ref no\\s*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "770017",
          "sort_UID": "770017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:credited|deposited).*(?:account|a\\/c) x+\\d*x*(\\d{4}) towards (.*?)\\d{2}\\-\\w{3}\\-\\d{2,4}.*?(?:bal|available) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770018",
          "sort_UID": "770018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) debited from a\\/c x*(\\d{4}) towards (upi|imps|neft|ft|rtgs)[\\s\\-]*(?:dr)?[\\s\\-]*\\w+[\\s\\-]+(?:Request fr\\s|payment fr\\s)?(.*?)(?:\\svalue|\\-\\w+.*? value).*?clear bal is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770019",
          "sort_UID": "770019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) debited from a\\/c x*(\\d{4}) towards (.*?) value .*?clear bal is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "770020",
          "sort_UID": "770020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "chq paid",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        }
      ],
      "sender_UID": "90000079",
      "senders": [
        "DBSBNK",
        "DIGIBK",
        "DBSLVB"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "18004251445"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Karnataka Bank",
      "name": "Karnataka Bank",
      "patterns": [
        {
          "regex": "(?i)(?:account\\s*|a\\/c-|)([x\\d]{4})* (?:has been debited|debited|spent) (?:for|with) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*(?:pos|ecom)-(.*?)(?:-x|\\)|clear|-).*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*\\((.*\\))",
          "account_type": "debit_card",
          "pattern_UID": "800001",
          "sort_UID": "800001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy:HH:mm:ss')'"
                },
                {
                  "use_sms_time": false,
                  "format": "dd:MM:yy:HH:mm:ss')'"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss')'"
                },
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd HH:mm:ss')'"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:account\\s*|a\\/c-|a\\/c\\s*|)([x\\d]{4})* (?:has been\\s* debited|debited|withdrawn) (?:for|with) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})(.*?)(?:balance|bal|clear balance) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*.*\\((.*\\))",
          "account_type": "debit_card",
          "pattern_UID": "800002",
          "sort_UID": "800002",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy:HH:mm:ss')'"
                },
                {
                  "use_sms_time": false,
                  "format": "dd:MM:yy:HH:mm:ss')'"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss')'"
                },
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd HH:mm:ss')'"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_atm",
                  "value": "nfs",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_atm",
                  "value": "by cash",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": ""
                }
              ],
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:account\\s*|a\\/c-|a\\/c\\s*|)([x\\d]{4})* (?:has been\\s*credited|credited) (?:for|with) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*[\\/\\-\\(]+(.*?)(?:clear)?\\s*(?:balance|bal) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "800003",
          "sort_UID": "800012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)balance in your account ([x\\d]{4})* is (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}) \\((.*)\\)",
          "account_type": "bank",
          "pattern_UID": "800004",
          "sort_UID": "800009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy:HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd:MM:yy:HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i) a\\/c no. ([x\\d]{4})* is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*((UPI|IMPS) ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "800005",
          "sort_UID": "800005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": "imps"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:account\\s*|a\\/c-|a\\/c\\s*|)([x\\d]{4})* (?:has been\\s*credited|credited) (?:for|with) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*(salary|pension).*(?:balance|bal) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "800006",
          "sort_UID": "800006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*\\d*(\\d{4}) is credited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*? for reversal.*?(upi ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "800007",
          "sort_UID": "800007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:account\\s*|a\\/c-|a\\/c\\s*|)([x\\d]{4})* (?:has been\\s*credited|credited) (?:for|with) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*(?:neft|ecs|rtgs)[\\s\\-\\/](?:m\\/s)?(.*?)(?:clear|\\-|\\/).*?(?:balance|bal) is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "800008",
          "sort_UID": "800008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "cash",
                  "pos_override": "Credit"
                },
                {
                  "txn_type": "credit",
                  "value": "clg",
                  "pos_override": "Credit"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:account\\s*|a\\/c-|a\\/c\\s*|)([x\\d]{4})* (?:has been\\s*credited|credited) (?:for|with) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*[\\/\\-\\s]+ mbs\\/by (.*)\\-.*?(?:balance|bal) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*\\(.*\\)",
          "account_type": "bank",
          "pattern_UID": "800009",
          "sort_UID": "800004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited (?:for |by)\\s*(?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}) on.*?(?:from|by).*?((upi|imps) ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "800010",
          "sort_UID": "800010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)ur ac has recvd.*?credit of (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}).*?sent by (.*?) \\-",
          "account_type": "bank",
          "pattern_UID": "800011",
          "sort_UID": "800011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:account\\s*|a\\/c-|a\\/c\\s*|)([x\\d]{4})* (?:has been\\s*credited|credited) (?:for|with) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*[\\/\\-].*?(?:-rfnd\\/|refund|reversal|reversed|\\/rfnd).*?(?:balance|bal) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.\\s*([\\d\\-]+\\s*[\\d\\:]+)",
          "account_type": "bank",
          "pattern_UID": "800012",
          "sort_UID": "800003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your account\\s*([x\\d]{4})* has been debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards (debit card.*?charges)\\s*\\.",
          "account_type": "bank",
          "pattern_UID": "800013",
          "sort_UID": "800013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)account ([x\\d]{4})* has been debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\/\\-\\s*(?:achinwdr\\-|neft\\-|rtgs\\-)*(.*?)(?:\\/\\d{0,2}\\-\\d{2}\\-\\d{2,4}|\\/\\w{12}|[\\s\\.]*balance).*is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "800014",
          "sort_UID": "800014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            }
          }
        }
      ],
      "sender_UID": "90000080",
      "senders": [
        "KTKBNK",
        "KBLBNK"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "9820620454"
                ],
                "format": "SBAL <Account number>"
              }
            ]
          }
        ]
      },
      "full_name": "Shamrao Vithal Co-operative Bank",
      "name": "SVC Bank",
      "patterns": [
        {
          "regex": "(?i)a\\/c \\w*\\/\\w*\\/\\d*?(\\d{1,4}) at .* debited (?:with|for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*clear bal.(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}).* category:(.*)",
          "account_type": "debit_card",
          "pattern_UID": "810001",
          "sort_UID": "810001",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4,
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "value": "pos",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "net_banking",
                  "acc_type_override": "bank",
                  "value": ""
                }
              ],
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c (?:\\w*\\/\\w*\\/\\d*?|[x\\d]*?)(\\d{1,4}) .* credited .*(?:with|FOR) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*(?:clear|clr) bal.(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}).*",
          "account_type": "bank",
          "pattern_UID": "810002",
          "sort_UID": "810012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)clearing chq\\(s\\) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) in \\w*\\/\\w*\\/\\d*?(\\d{1,4}) has .*clear bal [\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "810003",
          "sort_UID": "810003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)bal - (.*) at .* \\w*\\/\\w*\\/\\d*?(\\d{1,4}) is clear (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "810004",
          "sort_UID": "810004",
          "reparse": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "group_id": 1,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{3,4}) is debited (?:with|for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*clr bal.(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}) .*ATM\\/POS at\\:(\\w*[\\s\\-\\.\\/]*\\w*)",
          "account_type": "debit_card",
          "pattern_UID": "810005",
          "sort_UID": "810005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)balance is (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}) on ([a-z]{3} \\d{1,2} \\d{4} \\d{1,2}\\:\\d{1,2}(?:am|pm))",
          "account_type": "bank",
          "pattern_UID": "810006",
          "sort_UID": "810006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MMM dd yyyy hh:mma"
                },
                {
                  "use_sms_time": false,
                  "format": "MMM d yyyy hh:mma"
                }
              ]
            },
            "pan": {
              "value": "XXXX"
            },
            "account_balance": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*?(\\d{2,4}) is debited (?:with|for) (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}).*clr bal\\.(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}).*?[\\)\\.]+\\s*(.*?)\\s*if not",
          "account_type": "bank",
          "pattern_UID": "810007",
          "sort_UID": "810007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)trxn amt (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}).*?recd in your a\\/c.*?(\\d{1,4}) at (.*?)\\..*?avlbl (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "810008",
          "sort_UID": "810008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c \\w*\\/\\w*\\/\\d*?(\\d{1,4}) .* credited .*send[\\s\\:]*(.*?) tranrefno.*?with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*clear bal.(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}).*",
          "account_type": "bank",
          "pattern_UID": "810009",
          "sort_UID": "810009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)a\\/c \\w*\\/\\w*\\/\\d*?(\\d{1,4}) .* credited .*with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*clear bal.(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}).*?tran category\\:(.*?)$",
          "account_type": "bank",
          "pattern_UID": "810010",
          "sort_UID": "810010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\**\\d*(\\d{4}) is credited .*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?by.*?\\((imps ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "810011",
          "sort_UID": "810011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}) is credited (?:with|for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\.\\(]*clr bal[\\s\\.]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?upi[\\/\\\\]rev",
          "account_type": "bank",
          "pattern_UID": "810012",
          "sort_UID": "810002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c no\\. x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2}) on (\\d{2}\\/\\d{2}\\/\\d{4} [\\d\\:]+) and .*?credited .*imps ref no (\\d+)",
          "account_type": "bank",
          "pattern_UID": "810013",
          "sort_UID": "810013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MM/dd/yy HH:mm"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        }
      ],
      "sender_UID": "90000081",
      "senders": [
        "SVCBNK"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "sms",
                "numbers": [
                  "+919821878789"
                ],
                "format": "BAL"
              },
              {
                "type": "voice",
                "numbers": [
                  "+917506660011"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "DCB Bank",
      "name": "DCB",
      "patterns": [
        {
          "regex": "(?i)a\\/c no. \\*(\\d{4}) is debited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on account of (.*)\\. avail bal in a\\/c (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) DT: (\\d{2}\\/\\d{2}\\/\\d{4} [\\d\\:]* (?:am|pm))",
          "account_type": "bank",
          "pattern_UID": "820001",
          "sort_UID": "820001",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy hh:mm:ss a"
                }
              ]
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "pos_override": "ATM",
                  "value": "atm"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "pos_override": "Debit Card Purchase",
                  "value": "pos"
                },
                {
                  "txn_type": "net_banking",
                  "value": "transfer"
                },
                {
                  "txn_type": "default",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(chq no \\d*) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited to a\\/c \\*(\\d{4}). avail bal in a\\/c (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) DT:\\s*(\\d{2}\\/\\d{2}\\/\\d{4} [\\d\\:]* (?:am|pm))",
          "account_type": "bank",
          "pattern_UID": "820002",
          "sort_UID": "820002",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy hh:mm:ss a"
                }
              ]
            },
            "note": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "transaction_type": "cheque"
          }
        },
        {
          "regex": "(?i)chq .*for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) credited to a\\/c \\*(\\d{4}). avail bal in a\\/c (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) DT:\\s*(\\d{2}\\/\\d{2}\\/\\d{4} [\\d\\:]* (?:am|pm))",
          "account_type": "bank",
          "pattern_UID": "820003",
          "sort_UID": "820003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy hh:mm:ss a"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no. \\*(\\d{4}) is credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*avail bal in a\\/c (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}) DT: (\\d{2}\\/\\d{2}\\/\\d{4} [\\d\\:]* (?:am|pm))",
          "account_type": "bank",
          "pattern_UID": "820004",
          "sort_UID": "820010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy hh:mm:ss a"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)clear bal in \\w+ a\\/c \\*(\\d{4}) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "820005",
          "sort_UID": "820005",
          "sms_type": "transaction",
          "reparse": true,
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:bal|balance) in.* a\\/c \\*(\\d{4}) (?:at.*available bal -|is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "820006",
          "sort_UID": "820006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no. \\*(\\d{4}) is debited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on account of (.*) DT: (\\d{2}\\/\\d{2}\\/\\d{4} [\\d\\:]* (?:am|pm))",
          "account_type": "bank",
          "pattern_UID": "820007",
          "sort_UID": "820007",
          "sms_type": "transaction",
          "data_fields": {
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy hh:mm:ss a"
                }
              ]
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "pos_override": "ATM",
                  "value": "atm"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "pos_override": "Debit Card Purchase",
                  "value": "pos"
                },
                {
                  "txn_type": "net_banking",
                  "value": "transfer"
                },
                {
                  "txn_type": "default",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c number \\d*x*(\\d{4}): a\\/c.*available bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:dr|cr),",
          "account_type": "bank",
          "pattern_UID": "820008",
          "sort_UID": "820008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?credited to your dcb a\\/c no[\\s\\.]*x*(\\d{4})\\.\\sreversal upi.*?(ref[\\s\\.]*no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "820009",
          "sort_UID": "820009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no. \\*(\\d{4}) is credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?credit of salary.*avail bal in a\\/c (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2}) DT: (\\d{2}\\/\\d{2}\\/\\d{4} [\\d\\:]* (?:am|pm))",
          "account_type": "bank",
          "pattern_UID": "820010",
          "sort_UID": "820004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy hh:mm:ss a"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your (?:dcb)?\\s*a\\/c no[\\s\\.]*[\\*x]*(\\d{4}) (?:is|has been) credited (?:by|with) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?(?:from upi id|from) (.*?)[\\s\\.]*((upi ref|ref)[\\s\\.]*no[\\s\\.]*(\\w+))",
          "account_type": "bank",
          "pattern_UID": "820011",
          "sort_UID": "820011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 6,
              "type_group_id": 5,
              "type_rules": [
                {
                  "value": "upi ref",
                  "is_upi": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been debited.*?your dcb a\\/c no[\\s\\.]*x*(\\d{4}) and sent to (?:a\\/c no\\.)?\\s*(.*?)\\.\\s*(upi transaction ref[\\s\\.]*no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "820012",
          "sort_UID": "820012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "UPI Funds Transfer",
                  "txn_type": "upi",
                  "value": "xxxxx",
                  "set_no_pos": true
                },
                {
                  "txn_type": "upi",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?by.*?(imps ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "820013",
          "sort_UID": "820013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        }
      ],
      "sender_UID": "90000082",
      "senders": [
        "DCBANK",
        "DCBBNK"
      ]
    },
    {
      "full_name": "Ticket",
      "name": "Ticket",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)ending with (\\d{4}) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) at (.*?) on (?:\\d{2}\\/\\d{2}\\/\\d{2})\\. avl bal.*is (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "pattern_UID": "830001",
          "sort_UID": "830001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)ending with (\\d{4}) .* credited with (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2}) .*avl bal.* is (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "pattern_UID": "830002",
          "sort_UID": "830002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000083",
      "senders": [
        "TICKET",
        "WLITIC",
        "EDENRD"
      ]
    },
    {
      "full_name": "Tata Sky",
      "name": "Tata Sky",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)tata sky id (\\d{10})[\\s\\S]*recharge amount (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\S]*next recharge date (\\d{2}-[a-z]{3})[\\s\\S*]monthly (?:charge|charges) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid_dth",
          "pattern_UID": "840001",
          "sort_UID": "840001",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "pan": {
              "group_id": 1
            },
            "create_txn": {
              "amount": {
                "group_id": 2
              }
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                }
              ]
            },
            "amount": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)tata sky id (\\d{10})[\\s\\S]*.*?valid till (\\d{2}-[a-z]{3}\\-\\d{2}|\\d{2}-[a-z]{3})[\\s\\S]*.*?monthly (?:charge of |charges )(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid_dth",
          "pattern_UID": "840002",
          "sort_UID": "840002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                }
              ]
            },
            "amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)tata sky id (\\d{10})[\\s\\S]*?.*?recharge (?:amount|amt) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?[\\s\\S]*monthly (?:charge|charges) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\S]*next (?:recharge|due) date (\\d{2}-[a-z]{3}-\\d{2})",
          "account_type": "prepaid_dth",
          "pattern_UID": "840003",
          "sort_UID": "840003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "pan": {
              "group_id": 1
            },
            "create_txn": {
              "amount": {
                "group_id": 2
              }
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000084",
      "senders": [
        "MYTSKY"
      ]
    },
    {
      "full_name": "Videocon D2H",
      "name": "Videocon D2H",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)cust id (\\d*) (?:recharged with|amt recvd)[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*due\\s*date[\\s\\:]*(\\d{1,2}\\/\\d{1,2}\\/\\d{4})",
          "account_type": "prepaid_dth",
          "pattern_UID": "850001",
          "sort_UID": "850001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "create_txn": {
              "amount": {
                "group_id": 2
              }
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)recharge due date is (\\d{2}-[a-z]{3}-\\d{4}).* customer id is (\\d*)",
          "account_type": "prepaid_dth",
          "pattern_UID": "850002",
          "sort_UID": "850002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "amount",
                    "child_field": "amount"
                  }
                ]
              },
              "parent_nomatch": {
                "child_override": [
                  {
                    "deleted": true
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "value": 0
            },
            "date": {
              "group_id": 1,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)d2h id (\\d*) with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) against your monthly.* on (\\d{2}-[a-z]{3}-\\d{2})",
          "account_type": "prepaid_dth",
          "pattern_UID": "850003",
          "sort_UID": "850003",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000085",
      "senders": [
        "VIDDTH",
        "DTHVID",
        "MYDTUH"
      ]
    },
    {
      "full_name": "Sun DTH",
      "name": "Sun DTH",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)topup done for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) successfully for SMC no (\\d+)\\. valid till (\\d{2}-[a-z]{3}-\\d{4})",
          "account_type": "prepaid_dth",
          "pattern_UID": "860002",
          "sort_UID": "860002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "create_txn": {
              "amount": {
                "group_id": 1
              }
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000086",
      "senders": [
        "SUNDTH"
      ]
    },
    {
      "full_name": "Dish TV",
      "name": "Dish TV",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)for vc no.(\\d+) basis .* valid till (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "prepaid_dth",
          "pattern_UID": "870002",
          "sort_UID": "870002",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "amount",
                    "child_field": "amount"
                  }
                ]
              },
              "parent_nomatch": {
                "child_override": [
                  {
                    "deleted": true
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "exact"
                },
                {
                  "parent_field": "sms_time",
                  "match_value": 172800000,
                  "child_field": {
                    "field": "sms_time"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "value": 0
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)VC (\\d+) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) rcvd against Total Monthly Amt (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid_dth",
          "pattern_UID": "870003",
          "sort_UID": "870003",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "deleted": true,
            "statement_type": "dth_recharge",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "create_txn": {
              "amount": {
                "group_id": 2
              }
            },
            "date": {
              "formats": [
                {
                  "use_sms_time": true,
                  "format": ""
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)vc no.?(\\d+).*recharge by (\\d{2}\\-\\d{2}\\-\\d{2,4}) with total monthly recharge of.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) \\.",
          "account_type": "prepaid_dth",
          "pattern_UID": "870004",
          "sort_UID": "870004",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "dth_recharge",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000087",
      "senders": [
        "DISHTV"
      ]
    },
    {
      "full_name": "Sodexo",
      "name": "Sodexo",
      "patterns": [
        {
          "regex": "(?i)made a purchase for an amount of (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*card \\d+\\-?x+\\-?(\\d{4}) on .* at (.*)\\. the available balance .* is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "880001",
          "sort_UID": "880001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your card \\d+\\-?x+\\-?(\\d{4}) is credited with [\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:INR|rs) on .*card balance is (?:INR|RS) [\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "880002",
          "sort_UID": "880002",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)sodexo.* loaded with (?:INR|Rs|)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2}) .*bal.*? is (?:INR|Rs|)[\\.:,\\s|]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "880003",
          "sort_UID": "880003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Card Top Up",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)made a purchase for an amount of (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s+on \\d{0,2}.* at (.*)\\. the available balance .* is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "880004",
          "sort_UID": "880004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "unknown"
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was spent.*(?:card|a\\/c).*?\\d*\\-?x+\\-?(\\d{4}) (?:at|on) .* at (.*?)\\..*?(?:Account|a\\/c) bal.*?is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "880005",
          "sort_UID": "138001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to (.*) using (.*?) (?:your balance|balance|your bal)",
          "account_type": "prepaid",
          "account_name_override": "Zeta",
          "pattern_UID": "138001",
          "sort_UID": "880005",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was spent.*(?:card|meal).*?(?:at|on).*?at (.*?)\\..*?(?:Card|meal) \\s*(?:Account|a\\/c) bal.*?is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "880006",
          "sort_UID": "880006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)card x*(\\d{4}) .*?credited with (?:INR|RS)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:towards.*?card account on|on) (.*?) as a reversal",
          "account_type": "prepaid",
          "pattern_UID": "880007",
          "sort_UID": "880007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "EEE MMM dd yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your (?:sodexo\\-)?zeta business (\\d{6}) .*?has successfully received (?:INR|RS)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) from (.*?)\\.\\s*your .*?balance is (?:INR|RS)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "account_name_override": "Zeta",
          "pattern_UID": "138002",
          "sort_UID": "138002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        }
      ],
      "sender_UID": "90000088",
      "senders": [
        "SODEXO",
        "ZETAAA",
        "ZETAMB",
        "57575701"
      ]
    },
    {
      "full_name": "MSEB",
      "name": "MSEB",
      "patterns": [
        {
          "regex": "(?i)energy bill for cons \\d+(\\d{4})[\\/\\d]* of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is due on ((?:\\d{2}-[a-z]{3}-\\d{2})|(?:\\d{2}\\/\\d{2}\\/\\d{2}))",
          "account_type": "electricity",
          "pattern_UID": "890001",
          "sort_UID": "890001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000089",
      "senders": [
        "BILINF",
        "MSEDCL"
      ]
    },
    {
      "full_name": "BESCOM",
      "name": "BESCOM",
      "patterns": [
        {
          "regex": "(?i)bill of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) due on (\\d{4}-\\d{2}-\\d{2}) for account id (\\d+) has been generated",
          "account_type": "electricity",
          "pattern_UID": "900001",
          "sort_UID": "900001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000090",
      "senders": [
        "BESCOM"
      ]
    },
    {
      "full_name": "Tata Power",
      "name": "Tata Power",
      "patterns": [
        {
          "regex": "(?i)bill for (?:cons|consumer) no.\\s*(\\d+) (?:is|has been raised for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:which is |)due by (\\d{2}[\\/\\-]\\d{2}[\\/\\-]\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "910001",
          "sort_UID": "910001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*(?:consumer|ca)\\s*no[\\s\\.]*(\\d+)\\s*is due by (\\d{2}[\\/\\.]\\d{2}[\\/\\.]\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "910002",
          "sort_UID": "910002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000091",
      "senders": [
        "TATAPR",
        "TPDDLD"
      ]
    },
    {
      "full_name": "BSES",
      "name": "BSES",
      "patterns": [
        {
          "regex": "(?i)ca no.? (\\d+) .*(?:of|for) .*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) due (?:date|on) (\\d{2}-[a-z]{3}-\\d{2})",
          "account_type": "electricity",
          "pattern_UID": "920001",
          "sort_UID": "920001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000092",
      "senders": [
        "BSESRP",
        "BSESYP"
      ]
    },
    {
      "full_name": "GUVNL",
      "name": "GUVNL",
      "patterns": [
        {
          "account_type": "electricity",
          "regex": "(?i)con.*?no[\\s\\.\\:]*(\\d+) .*?(?:is|of|for).*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* (?:last|due) (?:date.* is|on|date)\\s*(\\d{2}\\-\\d{2}\\-\\d{2,4}|\\d{2}\\-\\w{3}\\-\\d{2,4})[\\s\\.]",
          "pattern_UID": "930001",
          "sort_UID": "930001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000093",
      "senders": [
        "DGVCLG",
        "MGVCLG",
        "UGVCLG",
        "PGVCLG"
      ]
    },
    {
      "full_name": "UPPCL",
      "name": "UPPCL",
      "patterns": [
        {
          "regex": "(?i)acid (\\d+) .*?(?:bill amount|is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?due\\s*(?:on|date) (\\d{2}-\\d{2}-\\d{2})",
          "account_type": "electricity",
          "pattern_UID": "940001",
          "sort_UID": "940001",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)amount (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).* accid (\\d+) is due on (.*) and disc date (\\d{2}-\\d{2}-\\d{2})",
          "account_type": "electricity",
          "pattern_UID": "940002",
          "sort_UID": "940002",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)\u0938\u0902\u092f\u094b\u091c\u0928 \u0938\u0902\u0970\\s(\\d+) .*\u0935\u093f\u0926\u094d\u092f\u0941\u0924 \u092c\u093f\u0932 (?:INR|Rs|\u0930\u0941)[\\.,\\s\u0966]*([\\d,]*\\.?\\d{0,2}) \u0939\u0948.*?\u0905\u0902\u0924\u093f\u092e \u0924\u093f\u0925\u093f (\\d{2}\\-\\d{2}\\-\\d{2}) \u0939\u0948",
          "account_type": "electricity",
          "pattern_UID": "940003",
          "sort_UID": "940003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000094",
      "senders": [
        "UPPCLT",
        "BIJILI"
      ]
    },
    {
      "full_name": "TSSPDCL",
      "name": "TSSPDCL",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]*\\.?\\d{0,2}) is due.* uscno.\\s*(\\d+).*(?:pay on or before|pay by) (\\d{2}-\\d{2}-\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "950002",
          "sort_UID": "950002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)electricity bill for uscno (?:no)?\\s*(\\d+).*(?:for|total due).*?[\\s\\)]*(?:INR|Rs)[\\.:,\\s]*([\\d,]*\\.?\\d{0,2})\\.(?:please pay before|pl[\\s\\.]*pay by) (\\d{2}-\\d{2}-\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "950003",
          "sort_UID": "950003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000095",
      "senders": [
        "TSSPDC"
      ]
    },
    {
      "full_name": "CESC",
      "name": "CESC",
      "patterns": [
        {
          "regex": "(?i)(?:consumer no|customer id)[\\s\\:\\(\\-]+(\\d+).* (?:net amount|is|amounting to) (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[,\\.\\s]*(?:due date|is due on) (\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "electricity",
          "pattern_UID": "960002",
          "sort_UID": "960002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)bill of (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) due on (\\d{4}\\-\\d{2}\\-\\d{0,2}) for ac id (\\d+)",
          "account_type": "electricity",
          "pattern_UID": "960003",
          "sort_UID": "960003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000096",
      "senders": [
        "CESCLM",
        "CESCMY"
      ]
    },
    {
      "full_name": "Life Insurance Corporation",
      "name": "LIC",
      "patterns": [
        {
          "regex": "(?i)policy no. (\\d+) of (?:INR|Rs)[\\.,\\s\\*]*([\\d,]*\\.?\\d{0,2}) is due on (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "insurance",
          "pattern_UID": "970001",
          "sort_UID": "970001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)premium of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*\\/- for policy no.\\s*(\\d+) .*due on (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "insurance",
          "pattern_UID": "970002",
          "sort_UID": "970002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i).*(INR|RS|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*card x*(\\d{4}) on\\s(\\d{2}-[a-z]{3}-\\d{2}) at\\s(.*)avbl (?:cr |)lmt[\\:\\s]*(?:INR|Rs)[\\.,\\s]*([\\d,-]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "970003",
          "sort_UID": "970003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 5
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i).*card x*(\\d{4}) payment of (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*due on\\s(\\d{2}-[a-z]{3}-\\d{2}).*min amount due.*(?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "970004",
          "sort_UID": "970004",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)credit card \\d*\\**(\\d{4}) dated .*total amt due (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) and min amt due (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*pay by (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "970005",
          "sort_UID": "970005",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)credit card statement of (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) with due date (\\d{2}\\-[a-z]{3}\\-\\d{2})",
          "account_type": "credit_card",
          "pattern_UID": "970006",
          "sort_UID": "970006",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)lic card no[\\s\\.x]*(\\d{4})[\\s\\S](INR|RS|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]\\d{2}\\-\\d{2}\\-\\d{2}[\\s\\S](.*?)[\\s\\S]avl lmt (?:INR|RS)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "970007",
          "sort_UID": "970007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 5
            }
          }
        }
      ],
      "sender_UID": "90000097",
      "senders": [
        "LICIND",
        "LICCRD"
      ]
    },
    {
      "full_name": "SBI Life Insurance Company",
      "name": "SBI Life",
      "patterns": [
        {
          "regex": "(?i)premium.*pol.*no\\s*(\\d+) due on (\\d{2}-[a-z]{3}-\\d{4}|\\d{2}-\\d{2}-\\d{4}) (?:for|of) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "insurance",
          "pattern_UID": "980001",
          "sort_UID": "980001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000098",
      "senders": [
        "SBILIF"
      ]
    },
    {
      "full_name": "Max Life Insurance",
      "name": "Max Life",
      "patterns": [
        {
          "regex": "(?i).*(?:premium|amount).*(?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2}).*policy[\\s\\#]*(\\d*) .*on (\\d{2}\\-[a-z]{3}\\-\\d{2,4}).*",
          "account_type": "insurance",
          "pattern_UID": "990001",
          "sort_UID": "990001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000099",
      "senders": [
        "MAXLIT",
        "MXLIFE"
      ]
    },
    {
      "full_name": "Kotak Life Insurance",
      "name": "Kotak Life",
      "patterns": [
        {
          "regex": "(?i)premium for your policy (?:no.?\\s|)(\\d+) (?:of (?:INR|Rs)|amounting to)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*(\\d{2}\\/\\d{2}\\/\\d{2,4}|\\d{2}\\-[a-z]{3}\\-\\d{2})",
          "account_type": "insurance",
          "pattern_UID": "111001",
          "sort_UID": "111001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yyyy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)premium of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards policy no.? (\\d+) is due on (\\d{2}-[a-z]{3}-\\d{2})",
          "account_type": "insurance",
          "pattern_UID": "111002",
          "sort_UID": "111002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000111",
      "senders": [
        "KOTAKA",
        "KOTAKL"
      ]
    },
    {
      "full_name": "HDFC Life",
      "name": "HDFC Life",
      "patterns": [
        {
          "regex": "(?i)premium.*?of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*policy (?:no.|\\s)*\\s*(\\d+) .*(?:by|is due on|due on|on) (\\d{2}[\\/\\-]\\d{2}[\\/\\-]\\d{2,4}|\\d{4}\\-\\d{2}\\-\\d{2})",
          "account_type": "insurance",
          "pattern_UID": "112001",
          "sort_UID": "112001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)premium of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:is |)due on ([\\d\\.\\/]*) for .*policy (?:no.|\\s)*\\s*(\\d+)",
          "account_type": "insurance",
          "pattern_UID": "112002",
          "sort_UID": "112002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000112",
      "senders": [
        "HDFCSL",
        "HDFCLI",
        "HDFCSA"
      ]
    },
    {
      "full_name": "HDFC Home",
      "name": "HDFC Home",
      "patterns": [
        {
          "regex": "(?i)hdfc ltd. installment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) twds ac ([\\dx]*) .*?is .* (?:ecs|ach) debit on (\\d{2}-[a-z]{3}-\\d{2})",
          "account_type": "loan",
          "pattern_UID": "113001",
          "sort_UID": "113001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000113",
      "senders": [
        "HDFCLD"
      ]
    },
    {
      "full_name": "Bajaj Finserv",
      "name": "Bajaj Finserv",
      "patterns": [
        {
          "regex": "(?i)emi (?:card payment\\s*)?(?:of)?\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\/\\-\\s]*for (?:loan|your consumer loan\\s*)?(?:#| a\\/c no.| no.|\\s*a\\/c)?\\s*(\\w+) is due on (\\d{2}-[a-z]{3}-\\d{2}|\\d{1,2}\\/\\d{1,2}\\/\\d{2,4}|\\d{2}-\\d{2}-\\d{2,4})",
          "account_type": "loan",
          "pattern_UID": "114001",
          "sort_UID": "114001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)bajaj finserv Rbl bank.*ending.*? (\\d{4}) is due on (\\d{2}\\/\\d{2}\\/\\d{2}).*total amount due is (?:Rs|INR)[\\s.:,]*([\\d+,]*\\.?\\d{0,2}).*minimum amount due is (?:Rs|INR)[\\s.:,]*([\\d+,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "114002",
          "sort_UID": "114002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "min_due_amount": {
              "group_id": 4
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)bajaj finserv Rbl bank.*(?:ending with\\s|\\(x+\\d*)(\\d{4}).*[\\s\\S]*total amount due\\: (?:Rs|INR)[\\s.:,]*([\\d+,]*\\.?\\d{0,2})[\\s\\S]*minimum amount due\\: (?:Rs|INR)[\\s.:,]*([\\d+,]*\\.?\\d{0,2})[\\s\\S]*payment due date\\: (\\d{2}\\/\\d{2}\\/\\d{2,4}|\\w{3}\\s\\d{2}\\,\\s\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "114003",
          "sort_UID": "114003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "MMM dd, yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)you have spent (Rs|INR|[a-z]{3})[\\s.:,]*([\\d+,]*\\.?\\d{0,2}) at (.*?) using your.*?card \\(x*(\\d{4})\\) on.*?available limit is (?:Rs|INR)[\\s.:,]*([\\d+,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "114005",
          "sort_UID": "114005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)your transaction at (.*?) of (?:Rs|INR)[\\s.:,]*([\\d+,]*\\.?\\d{0,2}) on your.*?card ending with \\**(\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "114006",
          "sort_UID": "114006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)transaction of (?:Rs|INR)[\\s.:,]*([\\d+,]*\\.?\\d{0,2}) on (.*?) has been reversed and credited.*?supercard \\((\\d{4})",
          "account_type": "credit_card",
          "pattern_UID": "114007",
          "sort_UID": "114007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)premium of (?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{2}) for bajajallianzlife policy (\\d+) will be debited on (\\d{2}\\-\\w{3})",
          "account_type": "insurance",
          "account_name_override": "Bajaj Allianz Life",
          "pattern_UID": "114008",
          "sort_UID": "114008",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)total amount due on.*?card\\(x*(\\d{4})\\) is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2}) \\& min amount due is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})[\\s\\.]*pay by (\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "credit_card",
          "pattern_UID": "114009",
          "sort_UID": "114009",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "min_due_amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000114",
      "senders": [
        "BAJAJF",
        "SPRCRD",
        "BAJAJC",
        "BAJAJH",
        "BJAZLI"
      ]
    },
    {
      "full_name": "ICICI Prudential Life Insurance",
      "name": "ICICI Prudential",
      "patterns": [
        {
          "regex": "(?i)premium of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for .*policy (\\d+) (?:will be debited|is due) .*on (\\d{2}-[a-z]{3}-\\d{2,4})",
          "account_type": "insurance",
          "pattern_UID": "115001",
          "sort_UID": "115001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)premium due on (\\d{2}\\-\\w{3}\\-\\d{2,4}) for .*policy no (\\d+) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) shall be charged to your",
          "account_type": "insurance",
          "pattern_UID": "115002",
          "sort_UID": "115002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 1,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000115",
      "senders": [
        "ICICIP"
      ]
    },
    {
      "full_name": "JioMoney",
      "name": "JioMoney",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)spent (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*at (.*) on ([\\d\\/\\-]* at [\\s\\d\\:]* (?:am|pm))[\\.,].*(?:transaction|txn|trn) (?:id is|id.) (\\d+)\\..*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "116001",
          "sort_UID": "116001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' hh:mm a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy 'at' hh:mm a"
                }
              ]
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to (.*)\\..*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "116002",
          "sort_UID": "116002",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2,
              "set_no_pos": true
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*debited.*towards (?:payment .*?\\s|)(.*?) (?:at|your).*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "116003",
          "sort_UID": "116003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)you have successfully added (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to your jio money account.*balance is (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "116004",
          "sort_UID": "116004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Wallet Reload",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)transferred (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to (bank account number x*\\d*)\\. .* balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "116005",
          "sort_UID": "116005",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Transfer",
              "set_no_pos": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)refunded (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) from (.*?) for (transaction id (\\d+)) done on.*?jiomoney account balance is now (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "116006",
          "sort_UID": "116006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        }
      ],
      "sender_UID": "90000116",
      "senders": [
        "JIOMNY"
      ]
    },
    {
      "full_name": "TANGEDCO",
      "name": "TANGEDCO",
      "patterns": [
        {
          "regex": "(?i)electricity charges (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for sc.no.(\\d+) is due on (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "117001",
          "sort_UID": "117001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000117",
      "senders": [
        "TANGED"
      ]
    },
    {
      "full_name": "FreeCharge",
      "name": "FreeCharge",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .* freecharge(?: account|) at (.*) \\((.*)\\)\\..* updated (?:bal|balance is) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "118001",
          "obsolete": true,
          "sort_UID": "118001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:refunded|credited|added)(?: a cash back of|) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*freecharge balance(?:\\:| is )\\s*(?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "118003",
          "sort_UID": "118011",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been added.* updated balance is (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "118004",
          "sort_UID": "118012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,4}) .*(?:to|at) (.*)(?:\\s|\\,)\\(*(?:against order|orderid).*(?:bal|balance is|balance:)\\s*(?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "118005",
          "sort_UID": "118005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .* freecharge(?: account|) at (.*) \\((.*)\\)\\.",
          "account_type": "prepaid",
          "pattern_UID": "118006",
          "sort_UID": "118006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)bill payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for (.*) is successful",
          "account_type": "prepaid",
          "pattern_UID": "118007",
          "sort_UID": "118007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2,
              "set_no_pos": true
            },
            "note": {
              "prefix": "Bill Payment for: ",
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)recharge of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for (\\d*) is successful",
          "account_type": "prepaid",
          "pattern_UID": "118008",
          "sort_UID": "118008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Recharge",
              "set_no_pos": true
            },
            "note": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)recharge of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) successful for (\\d+)",
          "account_type": "prepaid",
          "pattern_UID": "118009",
          "sort_UID": "118009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Recharge",
              "set_no_pos": true
            },
            "note": {
              "prefix": "Recharge for: ",
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)DTH recharge of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is successful",
          "account_type": "prepaid",
          "pattern_UID": "118010",
          "sort_UID": "118010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "DTH Recharge",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)\\,\\s*(.*?) has refunded (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) against.*(?:freecharge|updated) balance(?:\\:| is )\\s*(?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "118011",
          "sort_UID": "118003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been added as cashback to wallet by freecharge.* updated balance is (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "118012",
          "sort_UID": "118004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Cashback",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) received successfully.*(?:you have received a payment)?\\s*from (.*?) at (\\w{3} \\d{1,2}\\,\\d{4} at [\\d\\:]* (?:am|pm))",
          "account_type": "prepaid",
          "pattern_UID": "118013",
          "sort_UID": "118013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MMM dd,yyyy 'at' hh:mm a"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)refunded (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:to your wallet|\\()\\s*.*?order\\s*.*? on (.*?)\\.\\s*updated bal (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "118014",
          "sort_UID": "118014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)transaction of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) at (.*) on \\d{2}\\s\\w{3}\\s\\d{2,4} is successful.*?balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "118015",
          "sort_UID": "118015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000118",
      "senders": [
        "FCHRGE",
        "FRCHGE",
        "FTRANS",
        "FCHARG"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "9223984344"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Punjab & Sind Bank",
      "name": "PSB",
      "patterns": [
        {
          "regex": "(?i)(?:a\\/c|a\\/c no) \\*+\\d*?(\\d{3,4}) debited\\s*with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\-]*by atm.*?clr bal [\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*\\(\\s*(.*)\\s*\\)",
          "account_type": "debit_card",
          "pattern_UID": "119001",
          "sort_UID": "119001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|a\\/c no) \\*+\\d*?(\\d{3,4}) .*debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?clr bal [\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*\\(\\s*(.*)\\s*\\)",
          "account_type": "bank",
          "pattern_UID": "119002",
          "sort_UID": "119002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "default",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|a\\/c no) \\*+\\d*?(\\d{3,4}) .*credited\\s*with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?clr bal [\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*\\(\\s*(.*)\\s*\\)",
          "account_type": "bank",
          "pattern_UID": "119003",
          "sort_UID": "119011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)balance for a\\/c \\*+\\d*?(\\d{3,4}) on ([\\d-]*\\s*[\\d\\:]* (?:am|pm)) is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "119004",
          "sort_UID": "119013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy  hh:mm:ss a"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?credited.*?\\((upi ref no[\\s\\.]*(\\d+)\\))",
          "account_type": "bank",
          "pattern_UID": "119005",
          "sort_UID": "119005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*\\**(\\d{4}) debited.*?(cheque no\\s*\\d+) with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\-]*(.*?) \\(clr bal [\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*\\(\\s*(.*)\\s*\\)",
          "account_type": "bank",
          "pattern_UID": "119006",
          "sort_UID": "119006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "cash",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "cheque",
                  "value": "self",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "cheque",
                  "value": "neft",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "cheque",
                  "value": "rtgs",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "cheque",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pos": {
              "group_id": 4
            },
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "note": {
              "group_id": 2
            },
            "date": {
              "group_id": 6,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|a\\/c no) \\*+\\d*?(\\d{3,4}) .*credited\\s*with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?(?:upi\\/|imps).*?\\/.*?\\/(.*?)(?:\\/|\\().*?clr bal [\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*\\(\\s*(.*)\\s*\\)",
          "account_type": "bank",
          "pattern_UID": "119007",
          "sort_UID": "119007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|a\\/c no) \\*+\\d*?(\\d{3,4}) .*credited\\s*with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?neft\\/(.*?)\\s\\(clr bal [\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*\\(\\s*(.*)\\s*\\)",
          "account_type": "bank",
          "pattern_UID": "119008",
          "sort_UID": "119008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|a\\/c no) \\*+\\d*?(\\d{3,4}) .*credited\\s*with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?salary.*?clr bal [\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*\\(",
          "account_type": "bank",
          "pattern_UID": "119009",
          "sort_UID": "119009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|a\\/c no) \\*+\\d*?(\\d{3,4}) .*credited\\s*with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\s*\\--(.*?)\\(?clr bal [\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*\\(",
          "account_type": "bank",
          "pattern_UID": "119010",
          "sort_UID": "119010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|a\\/c no) \\*+\\d*?(\\d{3,4}) .*credited\\s*with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?(chq \\d+).*?clr bal [\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*\\(",
          "account_type": "bank",
          "pattern_UID": "119011",
          "sort_UID": "119003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no.? x*\\**\\d*(\\d{4}) is credited .*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?(?:by|from).*?\\(((imps|upi) ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "119012",
          "sort_UID": "119012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|a\\/c no) \\*+\\d*?(\\d{3,4}) .*credited\\s*with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?(upi\\/rev|pos txn rev|amt rev|refund|reversed|atm txn rev|aeps rev|int[\\.\\s]*rev\\.|reversal).*?clr bal [\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*\\(\\s*(.*)\\s*\\)",
          "account_type": "bank",
          "pattern_UID": "119013",
          "sort_UID": "119004",
          "sms_type": "transaction",
          "data_fields": {
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "upi/",
                  "pos_override": "Rev-Upi"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "pos",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        }
      ],
      "sender_UID": "90000119",
      "senders": [
        "PSBANK"
      ]
    },
    {
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "9223984344"
                ]
              }
            ]
          }
        ]
      },
      "full_name": "Punjab & Maharashtra Co-op Bank",
      "name": "PMC",
      "patterns": [
        {
          "regex": "(?i)wdl of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*) frm ac no x+(\\d{4}) .* by card x+(\\d{4}). clr bal:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "121001",
          "obsolete": true,
          "sort_UID": "121001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMM HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)debit trn of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*) from a\\/c no x+(\\d{4}) .* by card x+(\\d{4}) at(.*) clr bal:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "121002",
          "sort_UID": "121002",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMM HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 4
            },
            "pos": {
              "group_id": 5
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)debit trn of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*) from a\\/c no x+(\\d{4}) .* by card x+(\\d{4}) clr bal:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "121003",
          "sort_UID": "121003",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMM HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 4
            },
            "pos": {
              "value": "Debit Card Purchase",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)cash (deposit|withdrawal) of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*) made (?:from|in) a\\/?c no.\\s*x+(\\d{4}) .*clr bal:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "121004",
          "sort_UID": "121004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "default",
                  "value": "withdrawal"
                },
                {
                  "txn_type": "credit",
                  "value": "deposit",
                  "pos_override": "Credit"
                }
              ],
              "group_id": 1
            },
            "pos": {
              "value": "Cash Withdrawal",
              "set_no_pos": true
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMM HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)avail bal of (?:a\\/c no|a\\/c)\\s*\\d*x+(\\d{3,4}) .*?clr bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "121005",
          "sort_UID": "121005",
          "obsolete": true,
          "reparse": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)chq\\/s debited on.* for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) in a\\/?c no.\\s*x+(\\d{4}) .*clr bal:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "121006",
          "sort_UID": "121006",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)Account.*?x+(\\d{4}).*(?:is|clear balance) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "121007",
          "sort_UID": "121007",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\.\\s]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*?) and credited to (vpa|a\\/c no)[\\s\\.]*(.*?)\\s\\((upi ref no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "121008",
          "sort_UID": "121008",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "a/c no",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "upi",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 5
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            },
            "note": {
              "group_id": 6
            },
            "network_reference_id": {
              "group_id": 7,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)acc[\\.\\s]*x*(\\d{4}).*?debited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for upi txn on (.*?)\\. clr bal[\\:\\s]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "121009",
          "sort_UID": "121009",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "transaction_type": "upi",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMM HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 4
            }
          }
        }
      ],
      "sender_UID": "90000121",
      "senders": [
        "PMCBNK"
      ]
    },
    {
      "full_name": "PhonePe",
      "name": "PhonePe",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)sent (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to (.*) via PhonePe wallet.*wallet balance (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "122001",
          "sort_UID": "122001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2,
              "set_no_pos": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to (.*) via PhonePe wallet.*wallet balance (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "122002",
          "sort_UID": "122002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to (.*) via PhonePe.*",
          "account_type": "prepaid",
          "pattern_UID": "122004",
          "sort_UID": "122004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)you have added (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to your phonepe wallet (?:from|using).*? balance (?:is |)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "122005",
          "sort_UID": "122009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Wallet Reload",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your (.*?) fare of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been paid.*(transaction id[\\s\\-]*(\\w+))",
          "account_type": "prepaid",
          "pattern_UID": "122006",
          "sort_UID": "122006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) via phonepe wallet for (.*?)\\..*?(?:wallet|remaining) bal.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "122007",
          "sort_UID": "122007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) cashback from .*?into your phonepe wallet.*?wallet balance (?:is |)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "122008",
          "sort_UID": "122008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_rewards",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Cashback",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been reversed back to your.*?wallet by (.*)\\..*? balance (?:is |)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "122009",
          "sort_UID": "122005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)received (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) from (.*?) via phonepe for (txn (\\w+))\\.",
          "account_type": "prepaid",
          "pattern_UID": "122010",
          "sort_UID": "122010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(.*?) has provided you with a credit of (?:INR|Rs)?\\??[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "pattern_UID": "122011",
          "sort_UID": "122011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "pos": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?has been paid for .*? on (.*?) via phonepe",
          "account_type": "prepaid",
          "pattern_UID": "122012",
          "sort_UID": "122012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            }
          }
        }
      ],
      "sender_UID": "90000122",
      "senders": [
        "PHONPE"
      ]
    },
    {
      "full_name": "Mahanagar Gas",
      "name": "Mahanagar Gas",
      "patterns": [
        {
          "regex": "(?i).*due of[\\.,:\\s](?:INR|Rs|)[\\.,\\s]*([\\d\\,]*\\.?\\d{2}).*due by[\\.,:\\s]([\\d\\/]* [\\d:]* (?:am|pm)|\\d{1,2}[\\/.]\\d{1,2}[\\/.]\\d{2,4})",
          "account_type": "gas",
          "pattern_UID": "123001",
          "sort_UID": "123001",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MM/dd/yy hh:mm:ss a"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yyyy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)bill for crn no (\\d+) dispatched.*?due date (\\d{2}\\/\\d{2}\\/\\d{2,4}) for (?:INR|Rs|)[\\.,\\s]*([\\d\\,]*\\.?\\d{2})",
          "account_type": "gas",
          "pattern_UID": "123002",
          "sort_UID": "123002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000123",
      "senders": [
        "MGLLTD"
      ]
    },
    {
      "full_name": "Adani Gas",
      "name": "Adani Gas",
      "patterns": [
        {
          "regex": "(?i).*of\\s(?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2}).*customer ID[\\.:\\s]*(\\d*).*due on (\\d{2}\\-[a-z]{3}-\\d{2,4}).*",
          "account_type": "gas",
          "pattern_UID": "124001",
          "sort_UID": "124001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000124",
      "senders": [
        "AGLGAS"
      ]
    },
    {
      "full_name": "Sabarmati Gas",
      "name": "Sabarmati Gas",
      "patterns": [
        {
          "regex": "(?i)customer (\\d*) .*due date (\\d{2}\\.\\d{2}\\.\\d{4}).* bill amt (?:INR|Rs)[\\.,:\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "gas",
          "pattern_UID": "125001",
          "sort_UID": "125001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000125",
      "senders": [
        "SABGAS",
        "SGLINF"
      ]
    },
    {
      "full_name": "Gujarat Gas",
      "name": "Gujarat Gas",
      "patterns": [
        {
          "regex": "(?i)gas bill.*(?:INR|Rs)[\\.,\\s]*([\\d\\,\\-]*\\.?\\d{2}).* due (?:date is|on) (\\d{2}\\/\\d{1,2}\\/\\d{2,4}).*",
          "account_type": "gas",
          "pattern_UID": "126001",
          "sort_UID": "126001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "pan": {
              "value": "unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)bill of (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{2})\\/\\- is generated.*?consumer no[\\s\\.]*(\\d+) based.*?is due on (\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "gas",
          "pattern_UID": "126002",
          "sort_UID": "126002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000126",
      "senders": [
        "GUJGAS"
      ]
    },
    {
      "full_name": "India Post Payments Bank",
      "name": "India Post",
      "patterns": [
        {
          "regex": "(?i)no. x*(\\d{4}) (debit|credit) with amount (?:INR|Rs)[\\.,\\s]+([\\d,]*\\.?\\d{0,2}) on .* balance: (?:INR|Rs)[\\.,\\s\\+]+([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "127001",
          "sort_UID": "127001",
          "sms_type": "transaction",
          "data_fields": {
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 3
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "default",
                  "value": "debit"
                },
                {
                  "pos_override": "Credit",
                  "txn_type": "credit",
                  "value": "credit"
                }
              ],
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|account) x*\\d*(\\d{4}) has been debited (?:for|with|by) (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?(?:by|via|towards|as|ref) (upi|imps|neft|payment|rtgs|cash withdrawal|Standing Instr|transfer).*?(?:avl|Available) (?:bal|balance) (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "127002",
          "sort_UID": "127002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "cash withdrawal",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c .*? has been debited for (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*?ecom purchase at (.*?) on card\\s*x*(\\d{3,4})\\..*?avl bal (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "127003",
          "sort_UID": "127003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c x*(\\d{4}) has been debited with (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*on account of sweep\\-out",
          "account_type": "bank",
          "pattern_UID": "127004",
          "sort_UID": "127004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is debited to (?:your)?\\s*a\\/c x*(\\d{4}).*? (?:for|towards)(.*?)(?:including.*?|\\.)\\s*avl bal\\s*(?:is)?[\\:\\s]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "127005",
          "sort_UID": "127005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c[\\s\\.]*x*(\\d{4}) .*?credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?vide reversal of imps.*?avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "127006",
          "sort_UID": "127006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*(\\d{4}) .*?credited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?for reversal of transaction\\s*\\((upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "127007",
          "sort_UID": "127007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your (?:ippb)?\\s*(?:a\\/c|account) x*(\\d{4}) (?:has been|is) credited (?:with|by) (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:on|at) .*?(?:vide|by|aeps) (?:upi|imps|[a-z]+\\d+|transfer|ref|rrn|imps|cash deposit|\\w+\\-)[\\s\\S]*.*?(?:avl bal|Available balance) (?:in remitted a\\/c)?\\s*(?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "127008",
          "sort_UID": "127008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your ippb account credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?from linked.*?avl bal (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "127009",
          "sort_UID": "127009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)an amount of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been credited to your ac no[\\s\\.x\\d]*(\\d{4}) by ref.*?balance (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "127010",
          "sort_UID": "127010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)balance in your\\s*(?:ippb)? (?:account|a\\/c) x*(\\d{4}) (?:on|as).*?is (?:INR|Rs)?[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "127011",
          "sort_UID": "127011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)?[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2}) withdrawn at .*?m-atm .*?aeps rrn (\\d+)[\\s\\.]*avl bal (?:INR|Rs)?[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "127012",
          "sort_UID": "127012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)?[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2}) spent on debit card x*(\\d{3,4}) at (.*?) \\s*\\w+ \\s*on (.*?)\\.\\s\n*ecom ref\\:\\s*(\\d+)[\\s\\.]*avl bal\\:\\s*(?:INR|Rs)?[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "127013",
          "sort_UID": "127013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 5
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}) is debited with (?:INR|Rs)?[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2}) for (imps|neft|rtgs) to (.*?) on (.*?)[\\s\\.]* ref:\\s*(\\w+)[\\s\\.]*avl bal[\\s\\:]*(?:INR|Rs)?[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "127014",
          "sort_UID": "127014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 7
            },
            "network_reference_id": {
              "group_id": 6,
              "type_group_id": 3,
              "type_rules": [
                {
                  "value": "neft",
                  "is_neft": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                },
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}) is credited with (?:INR|Rs)?[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2}) on (.*?) by (.*?)[\\s\\.]+(imps|neft|rtgs) ref:\\s*(\\w+)[\\s\\.]*avl bal[\\s\\:]*(?:INR|Rs)?[\\.,\\s\\+]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "127015",
          "sort_UID": "127015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 7
            },
            "network_reference_id": {
              "group_id": 6,
              "type_group_id": 5,
              "type_rules": [
                {
                  "value": "neft",
                  "is_neft": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                },
                {
                  "value": "rtgs",
                  "is_rtgs": true
                }
              ]
            }
          }
        }
      ],
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "8424046556"
                ]
              },
              {
                "type": "sms",
                "numbers": [
                  "7738062873"
                ],
                "format": "BAL"
              }
            ]
          }
        ]
      },
      "sender_UID": "90000127",
      "senders": [
        "DOPBNK",
        "IPBMSG"
      ]
    },
    {
      "full_name": "APEPDCL",
      "name": "APEPDCL",
      "patterns": [
        {
          "regex": "(?i)(?:power|electricity) bill for (?:uscno|scno)[\\s(](\\d*).*is (?:INR|Rs|)[\\.\\s]*([\\d,]+\\.?\\d{0,2}).*pay on or before[:\\s]*(\\d{2}\\/\\d{2}\\/\\d{2,4}|\\d{2}\\-[a-z]{3}\\-\\d{2})",
          "account_type": "electricity",
          "pattern_UID": "128001",
          "sort_UID": "128001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000128",
      "senders": [
        "APEPDC"
      ]
    },
    {
      "full_name": "APSPDCL",
      "name": "APSPDCL",
      "patterns": [
        {
          "regex": "(?i)electricity bill for (?:uscno|scno)[\\s(](\\d*).*is (?:INR|Rs|)[\\.\\s]*([\\d,]+\\.?\\d{0,2}).*pay on or before[:\\s]*(\\d{2}\\/\\d{2}\\/\\d{2,4}|\\d{2}\\-[a-z]{3}\\-\\d{2})",
          "account_type": "electricity",
          "pattern_UID": "129001",
          "sort_UID": "129001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000129",
      "senders": [
        "APSPDC",
        "APSPSC"
      ]
    },
    {
      "full_name": "UHBVN",
      "name": "UHBVN",
      "patterns": [
        {
          "regex": "(?i)electricity bill for[\\s\\S]*account number[\\s\\:]*(\\w+)[\\s\\S]*bill amt[\\s\\:]*(?:INR|Rs)?[\\.,\\-\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*due date[\\s\\:]*(\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "electricity",
          "pattern_UID": "131002",
          "sort_UID": "131002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)\u0915\u0928\u0947\u0915\u094d\u0936\u0928[\\s\\S]*a\\/c no (\\d+) \u0915\u0947 \u092c\u093f\u0932 (?:INR|Rs)[\\.,\\s]?([\\d,]*\\.?\\d{2}).*?\u0926\u0947\u092f \u0924\u093f\u0925\u093f \u0939\u0948[\\s\\S]*(\\d{2}\\-\\w{3}\\-\\d{2,4})",
          "account_type": "electricity",
          "pattern_UID": "131003",
          "sort_UID": "131003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000131",
      "senders": [
        "UHBVNL"
      ]
    },
    {
      "full_name": "DHBVN",
      "name": "DHBVN",
      "patterns": [
        {
          "regex": "(?i)bill.*of (?:INR|Rs)[\\.,\\-\\s]*([\\d,]+\\.?\\d{0,2}) .*for .*connection a\\/c No (\\d*).*(?:due date.*bill is|due on) (\\d{2}\\-[a-z]{3}\\-\\d{2,4})",
          "account_type": "electricity",
          "pattern_UID": "132001",
          "sort_UID": "132001",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)electricity bill for[\\s\\S]*account number[\\s\\:]*(\\w+)[\\s\\S]*bill amt[\\s\\:]*(?:INR|Rs)?[\\.,\\-\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*due date[\\s\\:]*(\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "132002",
          "sort_UID": "132002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000132",
      "senders": [
        "DHBVNL"
      ]
    },
    {
      "full_name": "Bandhan Bank",
      "name": "Bandhan",
      "patterns": [
        {
          "regex": "(?i)(?:Rs|INR)[\\s,.]*([\\d,]*\\.?\\d{2}) debited.* a\\/c x*\\d*(\\d{4}) (?:at|on) (.*?)(?:ledger|\\.).*(?:clear balance|a\\/c bal.) (?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{2})",
          "account_type": "bank",
          "pattern_UID": "133001",
          "sort_UID": "133001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[\\s,.]*([\\d,]*\\.?\\d{2}) credited.* a\\/c x*\\d*(\\d{4}) (?:at|on) (.*?)(?:ledger|\\.).*(?:clear balance|a\\/c bal.) (?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{2})",
          "account_type": "bank",
          "pattern_UID": "133002",
          "sort_UID": "133005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)account number x*\\d*(\\d{4}).*available balance of (?:Rs|INR)[\\s.,]*([\\d,]*\\.?\\d{1,2}) as on ([\\d a-z\\/:-]*)",
          "account_type": "bank",
          "pattern_UID": "133003",
          "sort_UID": "133003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)x*\\d*(\\d{4}) is debited (?:for|with) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .*?[\\(\\s]((ref|IMPS Ref)[\\s\\.]*no[\\s\\.\\:]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "133004",
          "sort_UID": "133004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "imps ref",
                  "is_imps": true
                },
                {
                  "value": "ref"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[\\s,.]*([\\d,]*\\.?\\d{2}) credited.* a\\/c x*\\d*(\\d{4}) (?:at|on) .*?(?:ledger|\\.).*(?:clear balance|a\\/c bal.) (?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{2})[\\s\\.]*salary for",
          "account_type": "bank",
          "pattern_UID": "133005",
          "sort_UID": "133002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your account is credited with (?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{2}) from x*.*? on (\\d{2}\\/\\w{3}\\/\\d{2,4} [\\d\\:]*)\\.\\s*(ref[\\s\\.]*no\\:(\\d+))",
          "account_type": "prepaid",
          "pattern_UID": "133006",
          "sort_UID": "133006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MMM/yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*[x\\d]*(\\d{4}) is credited by (?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{2}) on.*?linked to mobile [\\dx]+ \\((imps ref no[\\s\\.]*(\\d+))",
          "account_type": "prepaid",
          "pattern_UID": "133007",
          "sort_UID": "133007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{2}) credited to saving a\\/c [x\\d]*(\\d{4}) on ([\\d\\/]* at [\\d\\:]*)\\.(\\w+.*) go mobile",
          "account_type": "prepaid",
          "pattern_UID": "133008",
          "sort_UID": "133008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{2}) credited to a\\/c [x\\d]*(\\d{4}) on ([\\d\\/]* at [\\d\\:]*)\\.\\s*available bal[\\s\\.]*(?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{2})",
          "account_type": "prepaid",
          "pattern_UID": "133009",
          "sort_UID": "133009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been debited .*?a\\/c x*\\d*(\\d{4}) on .*towards (.*?) for the ",
          "account_type": "bank",
          "pattern_UID": "133010",
          "sort_UID": "133010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            }
          }
        }
      ],
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09223008666"
                ]
              },
              {
                "type": "sms",
                "numbers": [
                  "9223011000"
                ],
                "format": "BAL <Account No>"
              }
            ]
          }
        ]
      },
      "sender_UID": "90000133",
      "senders": [
        "BNDNBK",
        "BDNSMS"
      ]
    },
    {
      "full_name": "TJSB Sahakari Bank Ltd.",
      "name": "TJSB",
      "patterns": [
        {
          "regex": "(?i)(?:Rs|INR)[\\s,.]*([\\d,]*\\.?\\d{2}).*debited.*debit card \\d*x*\\d*(\\d{4}) on (.*) at (.*)\\-.*available balance.*(?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{2})",
          "account_type": "debit_card",
          "pattern_UID": "134001",
          "sort_UID": "134001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "ATM",
                  "txn_type": "debit_atm",
                  "value": "atm"
                },
                {
                  "pos_override": "ATM",
                  "txn_type": "debit_atm",
                  "value": "branch"
                },
                {
                  "txn_type": "debit_card",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                }
              ]
            },
            "pos": {
              "group_id": 4,
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[\\s,.]*([\\d,]*\\.?\\d{2}).*credited.*(?:debit card|a\\/c.).*?x*(\\d{4}|XXXX).*? at (.*?)\\s\\-.*?balance.*?\\:\\s*(?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "134002",
          "sort_UID": "134002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:account no|ac).*?([x\\d]{4}|\\d{2,4}) (?:has|on).*(?:available|avbl).*?bal.*?[\\s\\:]*(?:Rs|INR)[\\s,.]*([\\d,]*\\.?\\d{2})",
          "account_type": "bank",
          "pattern_UID": "134003",
          "sort_UID": "134003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no. x*\\d*(\\d{4}) is debited for (?:Rs|INR)[\\s,.]*([\\d,]*\\.?\\d{2}).*on (.*?) (?:and|).*((upi|imps) ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "134005",
          "sort_UID": "134005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": "imps"
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 6,
              "type_group_id": 5,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{0,2}) credited.*? to a\\/c.*?(\\d{2,4}).*?balance[\\s\\:]*(?:Rs|INR|)[\\s.,]*([-\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "134006",
          "sort_UID": "134013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is successful for (.*?) on (.*?)\\.",
          "account_type": "bill_pay",
          "pattern_UID": "134007",
          "sort_UID": "134007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "bill_pay",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "value": "Bill payments"
            },
            "pos": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{0,2}) credited.*? to a\\/c.*?\\d*?(\\d{2,4}) .*?(?:neft|fr a\\/c)[\\s\\:]*(.*?)(?:\\d{5}|\\.\\s*bal).*?(?:bal)?ance[\\s\\:]*(?:Rs|INR|)[\\s.,]*([-\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "134008",
          "sort_UID": "134008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{0,2}) credited.*? to a\\/c.*?(\\d{2,4}) by clearing[\\s\\.]*(.*)\\..*?balance[\\s\\:]*(?:Rs|INR|)[\\s.,]*([-\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "134010",
          "sort_UID": "134010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{0,2}) credited.*? to a\\/c.*?(\\d{2,4}) by transfer.*?salary.*?balance[\\s\\:]*(?:Rs|INR|)[\\s.,]*([-\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "134011",
          "sort_UID": "134011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*\\d*(\\d{4}) is credited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?) for reversal.*?(upi ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "134012",
          "sort_UID": "134012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{0,2}) credited.*? to a\\/c.*?(\\d{2,4}).*?(upi rev txn|imps\\s*rev|upi\\s*rev|rev (?:of)?\\s*nfs|visa rev).*?balance[\\s\\:]*(?:Rs|INR|)[\\s.,]*([-\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "134013",
          "sort_UID": "134006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_category": "walnut_refund",
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "upi",
                  "pos_override": "Rev-Upi"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "visa",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*\\d*(\\d{4}) is credited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?) and debited from (a\\/c|vpa) (.*?) \\((upi ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "134014",
          "sort_UID": "134014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "Credit",
                  "txn_type": "credit",
                  "value": "a/c",
                  "set_no_pos": true
                },
                {
                  "txn_type": "credit",
                  "value": "vpa"
                }
              ],
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 5
            },
            "note": {
              "group_id": 6
            },
            "network_reference_id": {
              "group_id": 7,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*\\d*(\\d{4}) is credited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on .*?(imps ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "134015",
          "sort_UID": "134015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        }
      ],
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "09212005550"
                ]
              },
              {
                "type": "sms",
                "numbers": [
                  "9870888210"
                ],
                "format": "SBAL SB <Account No>"
              }
            ]
          }
        ]
      },
      "sender_UID": "90000134",
      "senders": [
        "TJSBNK",
        "TJSBSB",
        "TJCARD",
        "TJIMPS",
        "TJUPIS"
      ]
    },
    {
      "full_name": "PayGo",
      "name": "PayGo",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}).*?spent.*paygo.*at (?:merchant |)(.*)\\. avbl bal (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) as on (\\d{2}\\/\\d{2}\\/\\d{2,4} \\d{2}:\\d{2}:\\d{2})",
          "account_type": "prepaid",
          "pattern_UID": "135001",
          "sort_UID": "135001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) added to your paygo.*avbl bal is (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) as on (\\d{2}\\/\\d{2}\\/\\d{2,4} \\d{2}:\\d{2}:\\d{2})",
          "account_type": "prepaid",
          "pattern_UID": "135002",
          "sort_UID": "135002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            }
          }
        }
      ],
      "sender_UID": "90000135",
      "senders": [
        "IPAYGO"
      ]
    },
    {
      "full_name": "Amazon Pay",
      "name": "Amazon Pay",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) .*?(?:has been added|added) .*?(?:to your|as|to) amazon pay.*?balance\\s*(?:is)?[\\s\\:\\.]*(?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "pattern_UID": "136001",
          "sort_UID": "136012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)you have received a refund.*? (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*balance is now (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "pattern_UID": "136002",
          "sort_UID": "136002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for txn (?:id)?\\s*(.*) on (.*?)[\\s\\.]*is succ",
          "account_type": "prepaid",
          "pattern_UID": "136003",
          "sort_UID": "136003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "prefix": "Transaction ID:",
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*txn (?:id)?\\s*(.*) on (.*) is succ.*?balance\\: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "136004",
          "sort_UID": "136004",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "prefix": "Transaction ID:",
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)payment (?:on.*for|of) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*balance\\s*(?:is now|\\:)\\s* (?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "pattern_UID": "136005",
          "sort_UID": "136005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Amazon Pay",
              "set_no_pos": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:flight booked\\:\\s|^\\s*)(\\w+-\\w+), (\\d{2}:\\d{2}) (\\d{2}-\\w{3}), pnr: (\\w+)\\((\\w{2}-\\w{3,4})\\)\\.",
          "account_type": "generic",
          "pattern_UID": "136006",
          "reparse": true,
          "sort_UID": "136006",
          "sms_type": "event",
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "Amazon Flight"
            },
            "event_location": {
              "group_id": 1
            },
            "event_info": {
              "group_id": 5
            },
            "pnr": {
              "group_id": 4
            },
            "date": {
              "group_ids": [
                2,
                3
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "HH:mm dd-MMM"
                }
              ]
            },
            "event_reminder_span": {
              "value": 90
            }
          }
        },
        {
          "regex": "(?i)(?:flight booked\\:\\s|^\\s*)(\\w+-\\s*\\w+-\\s*\\w+), (\\d{2}:\\d{2}) (\\d{2}-\\w{3}), pnr: (\\w+)\\((\\w{2}-\\w{3,4})\\) (\\w+)\\(\\w{2}-\\w{3,4}\\)\\.",
          "account_type": "generic",
          "pattern_UID": "136007",
          "reparse": true,
          "sort_UID": "136007",
          "sms_type": "event",
          "data_fields": {
            "event_type": "flight",
            "name": {
              "value": "Amazon Flight"
            },
            "event_location": {
              "group_id": 1
            },
            "date": {
              "group_ids": [
                2,
                3
              ],
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "HH:mm dd-MMM"
                }
              ]
            },
            "pnr": {
              "group_id": 4,
              "group_ids": [
                4,
                6
              ]
            },
            "event_info": {
              "group_id": 5
            },
            "event_reminder_span": {
              "value": 90
            }
          }
        },
        {
          "regex": "(?i)paid for (.*?)\\. amount [\\s\\-]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bill_pay",
          "pattern_UID": "136008",
          "sort_UID": "136008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "bill_pay",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "pos": {
              "value": "Bill Payment",
              "set_no_pos": true
            },
            "note": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*?)[\\s\\.]*is successful.*?balance[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "136009",
          "sort_UID": "136009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)cashback (?:of|credited)[\\s\\:]*(?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2}).*?added as amazon pay.*? for (.*)\\..*?balance\\s*(?:is)?[\\s\\:\\.]*(?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "pattern_UID": "136010",
          "sort_UID": "136010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "note": {
              "group_id": 2
            },
            "pos": {
              "value": "Cashback",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)cashback (?:of|credited)[\\s\\:]*(?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) for (.*?) added to your amazon.*?balance\\s*(?:is)?[\\s\\:\\.]*(?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "pattern_UID": "136011",
          "sort_UID": "136011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "note": {
              "group_id": 2
            },
            "pos": {
              "value": "Cashback",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)reload successful[\\s\\:]*(?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) .*?(?:has been added|added) .*?(?:to your|as|to) amazon pay.*?balance\\s*(?:is)?[\\s\\:\\.]*(?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "pattern_UID": "136012",
          "sort_UID": "136001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Wallet Reload",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\,]+(?:has been added to your amazon pay balance for signing.*?credit card|for usage of.*?has been credited to your Amazon Pay balance)",
          "account_type": "prepaid",
          "pattern_UID": "136013",
          "sort_UID": "136013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2}) will be auto\\-debited on (\\d{2}\\-\\d{2}\\-\\d{2}) against.*?dues towards Amazon Pay Later",
          "account_type": "pay_later",
          "set_account_as_expense": true,
          "pattern_UID": "136014",
          "sort_UID": "136014",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "pay_later_bill",
            "pan": {
              "value": "PayLater"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)Refund processed\\:[\\s\\S]Amount refunded to Amazon Pay Later limit\\: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{2})",
          "account_type": "pay_later",
          "set_account_as_expense": true,
          "pattern_UID": "136015",
          "sort_UID": "136015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "PayLater"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Refund",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000136",
      "senders": [
        "AMAZON",
        "51466",
        "57575858",
        "50350375",
        "56161940",
        "5676734",
        "57273",
        "59039000",
        "51460",
        "50350301",
        "56070",
        "59039029",
        "57575022",
        "57273111"
      ],
      "sender_regexes": [
        "^5\\d{5}$"
      ]
    },
    {
      "full_name": "ACT Broadband",
      "name": "ACT Broadband",
      "patterns": [
        {
          "account_type": "generic",
          "regex": "(?i)(?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is reflecting.*ac no:\\s*(\\d*).*pay by (\\d{1,2}.*?\\d{2,4})",
          "pattern_UID": "137004",
          "sort_UID": "137004",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "internet_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "format": "dd'th' MMM'' yy"
                },
                {
                  "format": "dd'th' MMMMM'' yy"
                },
                {
                  "format": "dd'th' MMM''yy"
                },
                {
                  "format": "dd'th' MMMMM''yy"
                },
                {
                  "format": "dd MMM yyyy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\.?\\s*is reflecting.*?ac no:\\s*(\\d*).*?pay by (\\d{1,2}th \\w+)",
          "account_type": "generic",
          "pattern_UID": "137006",
          "sort_UID": "137006",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "internet_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd'st' MMM"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'nd' MMM"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'rd' MMM"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'th' MMM"
                },
                {
                  "format": "dd'th' MMMMM"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)your bill.*?is generated for (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\/\\-\\s*clear.*?before (\\d{2}\\-\\w{3}) for",
          "account_type": "generic",
          "pattern_UID": "137007",
          "sort_UID": "137007",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "internet_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "format": "dd-MMM"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)act bill on a\\/c (\\d+) for .*?[\\s\\S]*due\\s*(?:amount)?[\\s\\:]*(?:INR|Rs)?[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?[\\s\\S]*due date[\\s\\:]*(\\d{2}\\-\\w{3}\\-\\d{2,4})",
          "account_type": "generic",
          "pattern_UID": "137008",
          "sort_UID": "137008",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "internet_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "format": "dd-MMM-yy",
                  "use_sms_time": false
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000137",
      "senders": [
        "ACTTEL",
        "ACTGRP",
        "ACTFBT"
      ]
    },
    {
      "full_name": "Equitas Small Finance Bank",
      "name": "Equitas",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited (?:from|to) a\\/c x*(\\d{4}) towards (.*value).*(?:clear|avl) bal is (?:INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "139001",
          "sort_UID": "139002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited (?:from|to) a\\/c x*(\\d{4}) towards (?:pos) \\d* (.*) pos.*(?:clear|avl) bal is (?:INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "139002",
          "sort_UID": "139001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3,
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)balance in a\\/c x*(\\d{4}) as of.*eod is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "139003",
          "sort_UID": "139010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) deposited to a\\/c x*(\\d{4}) towards (.*?) value.*?clear bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "139004",
          "sort_UID": "139008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no\\. x*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on .*(imps ref no (\\d*))",
          "account_type": "bank",
          "pattern_UID": "139005",
          "sort_UID": "139005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.x]*(\\d{4}) is debited for (?:INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on\\s*(?:\\w{3}|\\s)\\s*(.*?) \\((upi ref no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "139006",
          "sort_UID": "139006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MMM dd HH:mm:ss 'IST' yy"
                }
              ]
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) deposited to a\\/c x*(\\d{4}) towards.*((?:neft|rtgs?) cr\\s*\\-.*?\\-(.*?)\\-.*?\\-.*?)value.*?clear bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "139007",
          "sort_UID": "139007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) deposited to a\\/c x*(\\d{4}) towards chq dep.*?clear bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "139008",
          "sort_UID": "139004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited (?:by|for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*?) (?:by.*?|\\()((imps|upi) ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "139009",
          "sort_UID": "139009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 6,
              "type_group_id": 5,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) deposited to a\\/c x*(\\d{4}) towards (?:imp rev|.*?refund) .*? value.*?clear bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "139010",
          "sort_UID": "139003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)fastag linked to vehicle (\\w+) is recharged with (?:INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?tag balance now is (?:INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Equitas FASTag",
          "pattern_UID": "139011",
          "sort_UID": "139011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "FasTag Recharge",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)toll charge \\((\\w+)\\) for (?:INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited on.*?\\((.*?)\\)[\\s\\.]*bal is (?:INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Equitas FASTag",
          "pattern_UID": "139012",
          "sort_UID": "139012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)available equitas fastag balance for vehicle (\\w+) is (?:INR|Rs|[a-z]{3})[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "set_account_as_expense": false,
          "account_name_override": "Equitas FASTag",
          "pattern_UID": "139013",
          "sort_UID": "139013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        }
      ],
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "18001031222"
                ]
              },
              {
                "type": "sms",
                "numbers": [
                  "8086077575"
                ],
                "format": "BAL"
              }
            ]
          }
        ]
      },
      "sender_UID": "90000139",
      "senders": [
        "EQUTAS",
        "EQUTAT",
        "EQUTAX"
      ]
    },
    {
      "full_name": "LazyPay",
      "name": "LazyPay",
      "patterns": [
        {
          "regex": "(?i)(?:transaction|txn) (.*) on (.*) for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been processed successfully",
          "account_type": "pay_later",
          "pattern_UID": "141001",
          "sort_UID": "141001",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "prefix": "Transaction ID:",
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for (?:transaction|txn) (.*) on (.*) was successful",
          "account_type": "pay_later",
          "pattern_UID": "141002",
          "sort_UID": "141002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "note": {
              "prefix": "Transaction ID:",
              "group_id": 2
            },
            "network_reference_id": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)refund of (?:INR|Rs)[\\.,\\s]*?([\\d,,]*\\.?\\d{0,2}) has been received from (.*?)\\. this",
          "account_type": "pay_later",
          "pattern_UID": "141003",
          "sort_UID": "141003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:with a due date of|is payable towards your LazyPay account by) (\\d{1,2}[a-z]{2} \\w+\\, \\d{4})[\\s\\.]*(?:pay now|has been generated)",
          "account_type": "pay_later",
          "pattern_UID": "141004",
          "sort_UID": "141004",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "pay_later_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMMMM, yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'st' MMMMM, yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'nd' MMMMM, yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'rd' MMMMM, yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'th' MMMMM, yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000141",
      "senders": [
        "LZYPAY"
      ]
    },
    {
      "full_name": "DHFL",
      "name": "DHFL",
      "patterns": [
        {
          "regex": "(?i)(?:EMI|PEMI) (?:of|for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for (.*) (?:no|a\\/c)[\\.,\\s]*([\\w]*) is (?:due|represented) on (\\d{1,2}\\-[a-z]{3,4}\\-\\d{2,4})\\.",
          "account_type": "loan",
          "account_name_override": "DHFL Loan",
          "pattern_UID": "142001",
          "sort_UID": "142001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMMM-yy"
                }
              ]
            },
            "pan": {
              "group_id": 3
            },
            "note": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        }
      ],
      "sender_UID": "90000142",
      "senders": [
        "DHFLTD",
        "DHFLHL"
      ]
    },
    {
      "full_name": "Tata Capital",
      "name": "Tata Capital",
      "patterns": [
        {
          "regex": "(?i)(?:loan EMI\\:|emi of) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?(?:against a\\/c \\#|no ending with) (\\d*) is due on (\\d{2}\\d{2}\\d{4}|\\d{2}\\-\\w{3}\\-\\d{2,4})",
          "account_type": "loan",
          "pattern_UID": "143001",
          "sort_UID": "143001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "ddMMyy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        }
      ],
      "sender_UID": "90000143",
      "senders": [
        "TATACP"
      ]
    },
    {
      "full_name": "Indiabulls",
      "name": "Indiabulls",
      "patterns": [
        {
          "regex": "(?i)debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) towards.*Indiabulls Loan Account No. (.*) due on (\\d{2}\\-(?:[a-z]{3}|\\d{2})\\-\\d{2,4})",
          "account_type": "loan",
          "account_name_override": "Indiabulls Loan",
          "pattern_UID": "144001",
          "sort_UID": "144001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:indiabulls|dhani) loan emi of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is due on (\\d{2}\\-\\d{2}|\\d{2}\\-\\w+\\-\\d{4})\\.",
          "account_type": "loan",
          "account_name_override": "Indiabulls Loan",
          "pattern_UID": "144002",
          "sort_UID": "144002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMMMM-yy"
                }
              ]
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)monthly premium of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:for|towards) medical insurance.*?will (?:be)?\\s*debited on (\\d{2} \\w{3})\\.",
          "account_type": "insurance",
          "account_name_override": "Indiabulls Medical Insurance",
          "pattern_UID": "144003",
          "sort_UID": "144003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "pan": {
              "value": "YYYY"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)dhani pay card x*(\\d{4}) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) at (.*?) on.*?avl bal wallet[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})(?:\\,dhani|\\.)",
          "account_type": "prepaid",
          "account_name_override": "Dhani",
          "pattern_UID": "144004",
          "sort_UID": "144004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:cashback|congrats).*?(?:you got|cashback of) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:as cashback)?\\s*for.*(?:card transaction at|payment for|transaction with|your recent) (.*?)\\.\\s*(?:view|enj?oy)",
          "account_type": "prepaid",
          "account_name_override": "Dhani",
          "pattern_UID": "144005",
          "sort_UID": "144005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_rewards",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            }
          }
        },
        {
          "regex": "(?i)credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for refund of.*? \\@ (.*?)\\.\\s*avl bal wallet[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})(?:\\,dhani|\\.)",
          "account_type": "prepaid",
          "account_name_override": "Dhani",
          "pattern_UID": "144006",
          "sort_UID": "144006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:your )?(recharge| .*? bill|datacard) (?:payment|for your mobile|for your datacard).*? of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is successful\\.\\s*avl bal wallet\\:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})(?:\\,dhani|\\.)",
          "account_type": "prepaid",
          "account_name_override": "Dhani",
          "pattern_UID": "144007",
          "sort_UID": "144007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) transfer initiated to a\\/c.*?\\.\\s*avl bal wallet\\:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})(?:\\,dhani|\\.)",
          "account_type": "prepaid",
          "account_name_override": "Dhani",
          "pattern_UID": "144008",
          "sort_UID": "144008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Transfer",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) added to your dhani pay wallet[\\s\\.]*avl bal wallet\\:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "account_name_override": "Dhani",
          "pattern_UID": "144009",
          "sort_UID": "144009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Wallet Reload",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for dhani cash converted to real cash.*?avl bal wallet\\:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})(?:\\,dhani|\\.)",
          "account_type": "prepaid",
          "account_name_override": "Dhani",
          "pattern_UID": "144010",
          "sort_UID": "144010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_rewards",
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(.*?) has sent you (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\.]+avl bal wallet\\:(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})(?:\\,dhani|\\.)",
          "account_type": "prepaid",
          "account_name_override": "Dhani",
          "pattern_UID": "144011",
          "sort_UID": "144011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 3
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 1
            }
          }
        }
      ],
      "sender_UID": "90000144",
      "senders": [
        "IBULLS",
        "IDHANI",
        "DHANIP"
      ]
    },
    {
      "full_name": "Maharashtra Natural Gas Ltd.",
      "name": "MNGL",
      "patterns": [
        {
          "regex": "(?i)mngl customer (\\d*) your gas bill of (?:INR|Rs|)[\\.,\\s]*([\\d\\,]*\\.?\\d{2}) is generated.*due date is (\\d{2}\\.\\d{2}\\.\\d{4})",
          "account_type": "gas",
          "pattern_UID": "146001",
          "sort_UID": "146001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000146",
      "senders": [
        "MNGLPU"
      ]
    },
    {
      "full_name": "OlaMoney",
      "name": "OlaMoney",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)paid (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) ola money to our partner (.*)\\.your transaction .*updated Ola Money balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "147001",
          "sort_UID": "147001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)recharge of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for.*updated Ola Money.*balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "147002",
          "sort_UID": "147002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Recharge",
              "set_no_pos": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for (.*) is successful.*Ola\\s*Money.*balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "147003",
          "sort_UID": "147003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Bill Payment",
              "set_no_pos": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "note": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:has been credited|added).*Ola\\s*Money.*balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "pattern_UID": "147004",
          "sort_UID": "147012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:cashback|refund) of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*Ola Money.*balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "147005",
          "sort_UID": "147005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) using Ola\\s*Money postpaid.*on (.*?) is successful",
          "account_type": "pay_later",
          "set_account_as_expense": true,
          "pattern_UID": "147006",
          "sort_UID": "147006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Postpaid"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:pay|paid|payment) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*(?:on|for clearing) (.*?)(?:\\.|\\sis successful|\\sat\\s).*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "147007",
          "sort_UID": "147007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?refunded.*olamoney wallet by (.*?)\\..*?balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "147008",
          "sort_UID": "147008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?refunded.*?postpaid account by (.*?)\\.",
          "account_type": "pay_later",
          "set_account_as_expense": true,
          "pattern_UID": "147009",
          "sort_UID": "147009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Postpaid"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)account.*?recharged with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?ola money balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "147010",
          "sort_UID": "147010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Wallet Reload",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) towards purchase of (.*?) is successful.*?transaction id is (\\w+)\\.",
          "account_type": "prepaid",
          "pattern_UID": "147011",
          "sort_UID": "147011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "prefix": "Transaction ID:",
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) cashback from Ola\\s*Money into your ola\\s*money wallet.*?transaction on (.*)\\..*?balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\.",
          "account_type": "prepaid",
          "pattern_UID": "147012",
          "sort_UID": "147004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "note": {
              "group_id": 2
            },
            "pos": {
              "value": "Cashback",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)you have received (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) olamoney from .*?olamoney balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "147013",
          "sort_UID": "147013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)olamoney sbi card dues of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) before (\\d{0,2}\\-\\w{3}\\-\\d{4}) to",
          "account_type": "credit_card",
          "account_name_override": "OlaMoney SBI Card",
          "pattern_UID": "147014",
          "sort_UID": "147014",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "value": "XXXX"
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)postpaid bill of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?[\\s\\S]*(?:dues by|pay before) (\\d{2}\\-[a-z]{3}\\-\\d{4}|\\d{4}\\-\\d{2}\\-\\d{2}|\\d{2}\\-\\w+\\-\\d{4})",
          "account_type": "pay_later",
          "set_account_as_expense": true,
          "pattern_UID": "147015",
          "sort_UID": "147015",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "pay_later_bill",
            "pan": {
              "value": "Postpaid"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "yyyy-dd-MM"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMMMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)thanks for using OlaMoney Postpaid to pay (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for your last transaction",
          "account_type": "pay_later",
          "set_account_as_expense": true,
          "pattern_UID": "147016",
          "sort_UID": "147016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "OlaMoney Postpaid",
              "set_no_pos": true
            },
            "pan": {
              "value": "Postpaid"
            },
            "amount": {
              "group_id": 1
            }
          }
        }
      ],
      "sender_UID": "90000147",
      "senders": [
        "OLAMNY",
        "OLACAB"
      ]
    },
    {
      "full_name": "Aegon Life Insurance Company",
      "name": "Aegon",
      "patterns": [
        {
          "regex": "(?i)renewal premium of (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for policy (?:number|no.?) (\\d*) is due on (\\d{2}\\/\\d{2}\\/\\d{2})",
          "account_type": "insurance",
          "pattern_UID": "148001",
          "sort_UID": "148001",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)premium of (?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is (?:due|due for debit).*?on (\\d{2}\\/\\d{2}\\/\\d{2}|\\d{2}\\-\\w{3}\\-\\d{2,4}) for policy (?:number|no.?) ([a-z]*\\d+[a-z\\d]*)\\.",
          "account_type": "insurance",
          "pattern_UID": "148002",
          "sort_UID": "148002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000148",
      "senders": [
        "AEGONL"
      ]
    },
    {
      "full_name": "Bharat Bank",
      "name": "Bharat Bank",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) debited from x*\\d*(\\d{4}) .*on (\\d{2}\\/\\d{2}\\/\\d{2} \\d{2}\\:\\d{2}\\:\\d{2})\\.?avlbl bal.*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) info\\s*:(.*)",
          "account_type": "bank",
          "pattern_UID": "149001",
          "sort_UID": "149001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "pos_override": "ATM",
                  "value": "atm"
                },
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "pos_override": "ATM",
                  "value": "nfs"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "pos_override": "Debit",
                  "value": "ecom"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "pos_override": "Debit",
                  "value": "visa"
                },
                {
                  "txn_type": "ecs",
                  "value": "ecs",
                  "pos_override": "ECS"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 5
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to x*\\d*(\\d{4}) .*avlbl bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?info[\\s\\:]*(.*)",
          "account_type": "bank",
          "pattern_UID": "149002",
          "sort_UID": "149007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)balance\\s*(?:sms for|for) a\\/c x*\\d*(\\d{4}) (?:on|at) (.*?) avlbl bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "149003",
          "sort_UID": "149003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "HH:mm 'hrs on' dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to x*\\d*(\\d{4}) .*avlbl bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?info[\\s\\:]*(?:refund|rev)(?:\\d{0,2}\\w{3}\\d+|[\\s\\:]*nexa\\:\\d+)\\s*(.*)",
          "account_type": "bank",
          "pattern_UID": "149004",
          "sort_UID": "149004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to x*\\d*(\\d{4}) .*avlbl bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?info[\\s\\:]*.*?(rev\\-ip2a|reversed[\\s\\:]*upi\\/|rev\\-atm|visa rev\\s|upi\\/.*?(?:refund|reversal)|refund)",
          "account_type": "bank",
          "pattern_UID": "149005",
          "sort_UID": "149005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "upi/",
                  "pos_override": "Rev-Upi"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "-atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "visa rev",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to x*\\d*(\\d{4}) .*avlbl bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?(?:trf-nexa|cr\\. for (?:neft|rtgs) \\w+|netbkg)[\\s\\:]*(.*)",
          "account_type": "bank",
          "pattern_UID": "149006",
          "sort_UID": "149006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to x*\\d*(\\d{4}) .*avlbl bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?info[\\s\\:]*upi\\/.*?\\/(?:cr\\/)?(.*?)\\/",
          "account_type": "bank",
          "pattern_UID": "149007",
          "sort_UID": "149002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)chq for credit of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) to x*\\d*(\\d{4}) recd .*?avlbl bal (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "149008",
          "sort_UID": "149008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_bank_deposit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        }
      ],
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "9223009999"
                ]
              },
              {
                "type": "sms",
                "numbers": [
                  "9223009999"
                ],
                "format": "BAL <Last 4 Digits>"
              }
            ]
          }
        ]
      },
      "sender_UID": "90000149",
      "senders": [
        "BHARAT",
        "BCBANK"
      ]
    },
    {
      "full_name": "Adani Electricity",
      "name": "Adani Electricity",
      "patterns": [
        {
          "regex": "(?i)(?:Adani Electricity|your) Bill.*?for a\\/c no.? (\\d*) .*?of (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{0,2}) due on (\\d{2}\\-[a-z]{3})",
          "account_type": "electricity",
          "pattern_UID": "151001",
          "sort_UID": "151001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)Payment of (?:INR|Rs)[\\.,\\s]*([\\d\\,]*\\.?\\d{0,2}) for a\\/c no.? (\\d*) is due on (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "151002",
          "sort_UID": "151002",
          "obsolete": true,
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000151",
      "senders": [
        "ADANIE"
      ]
    },
    {
      "full_name": "NIYO",
      "name": "NIYO",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) completed on your niyo card .*?at (.*?)\\. current account balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "165001",
          "sort_UID": "165001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been credited .*niyo account.*account balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "165002",
          "sort_UID": "165002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your (a\\/c|account) balance is\\: [\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "165003",
          "sort_UID": "165003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)your a\\/c \\d+ is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\/\\-\\.",
          "account_type": "prepaid",
          "pattern_UID": "165004",
          "sort_UID": "165004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your salary of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been credited to your niyo card.*? by (.*)\\.\\s*$",
          "account_type": "prepaid",
          "pattern_UID": "165005",
          "sort_UID": "165005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            }
          }
        }
      ],
      "sender_UID": "90000165",
      "senders": [
        "GONIYO"
      ]
    },
    {
      "full_name": "Capital Float",
      "name": "Capital Float",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is due towards your amazon pay (?:emi|later) account on (\\d{2}\\-\\w*\\-\\d{4})",
          "account_type": "loan",
          "account_name_override": "Capital Float Amazon Pay",
          "pattern_UID": "152001",
          "sort_UID": "152001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMMMM-yyyy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yyyy"
                }
              ]
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is due towards your Capital Float loan no\\.? (\\w*) in partnership with think \\& learn.*on (\\d{4}\\-\\d{2}\\-\\d{2})",
          "account_type": "loan",
          "account_name_override": "Capital Float BYJU'S",
          "pattern_UID": "152003",
          "sort_UID": "152003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is due towards your Capital Float loan no\\.? ([a-z]*\\d+[a-z\\d]*) (?:in partnership)?.*?on (\\d{4}\\-\\d{2}\\-\\d{2})",
          "account_type": "loan",
          "pattern_UID": "152004",
          "sort_UID": "152004",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)emi of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\/\\-]*is due on (\\d{2}\\-\\w*\\-\\d{4}|\\d{2}\\w{2}\\s\\w+\\s\\d{2,4}) towards.*?loan\\s*(?:account)? number[\\s\\-]*([a-z]*\\d+[a-z\\d]*) with",
          "account_type": "loan",
          "pattern_UID": "152005",
          "sort_UID": "152005",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "loan_emi",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMMMM-yyyy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'st' MMMMM yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'nd' MMMMM yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'rd' MMMMM yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'th' MMMMM yy"
                }
              ]
            },
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            }
          }
        }
      ],
      "sender_UID": "90000152",
      "senders": [
        "CAPFLT",
        "CFLOAN"
      ]
    },
    {
      "full_name": "Hathway Broadband",
      "name": "Hathway Broadband",
      "patterns": [
        {
          "regex": "(?i)(?:account |a\\/c no: |a\\/c.)(\\d*).*for.*?(\\d{1,2}.*?\\d{1,2}).*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "generic",
          "pattern_UID": "154001",
          "sort_UID": "154001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "internet_bill",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000154",
      "senders": [
        "HATHWY",
        "040801"
      ]
    },
    {
      "full_name": "Aviva",
      "name": "Aviva",
      "patterns": [
        {
          "regex": "(?i)(?:premium of|pay) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*aviva policy no.? (\\d+) .*due on (\\d{1,2}\\-\\w{1,3}\\-\\d{2,4})",
          "account_type": "insurance",
          "pattern_UID": "155001",
          "sort_UID": "155001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        }
      ],
      "sender_UID": "90000155",
      "senders": [
        "ALICIL",
        "AVIVAA"
      ]
    },
    {
      "full_name": "Avantika Gas",
      "name": "Avantika Gas",
      "patterns": [
        {
          "regex": "(?i)(?:consumer|customer|avantika gas ltd)\\s*(?:no:-|\\-)\\s*(\\w*)[\\s\\S]*(?:bill amount|due amount|of)[\\:\\-\\s]*(?:INR|Rs)?[\\.,\\s\\+]+([\\d,]*\\.?\\d{0,2})[\\s\\S]*(?:due date:-|due on)\\s*(\\d{1,2}[\\.\\/]\\d{1,2}[\\.\\/]\\d{2,4}|\\d{2}\\w{2} \\w{3} \\d{4})",
          "account_type": "gas",
          "pattern_UID": "156001",
          "sort_UID": "156001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'st' MMM yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'nd' MMM yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'rd' MMM yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'th' MMM yy"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        }
      ],
      "sender_UID": "90000156",
      "senders": [
        "AGLIND",
        "AVNTKA"
      ]
    },
    {
      "full_name": "NDMC",
      "name": "NDMC",
      "patterns": [
        {
          "regex": "(?i)electricity bill for consumer no.? (\\d+) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is due on (\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "electricity",
          "pattern_UID": "157001",
          "sort_UID": "157001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)consumer no.? (\\d+).*Electricity Bill.*of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\, due date (\\d{2}\\-[a-z]{3}\\-\\d{2,4})",
          "account_type": "electricity",
          "pattern_UID": "157002",
          "sort_UID": "157002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        }
      ],
      "sender_UID": "90000157",
      "senders": [
        "EWNDMC"
      ]
    },
    {
      "full_name": "WBSEDCL",
      "name": "WBSEDCL",
      "patterns": [
        {
          "regex": "(?i)consumer\\(id\\:(\\d+)\\).*(?:monthly|qtrly) bill is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) within 1st due dt\\:(\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "electricity",
          "pattern_UID": "158001",
          "sort_UID": "158001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        }
      ],
      "sender_UID": "90000158",
      "senders": [
        "WBELEC",
        "WBSEDC"
      ]
    },
    {
      "full_name": "Torrent Power",
      "name": "Torrent Power",
      "patterns": [
        {
          "regex": "(?i)bill for.*? (?:ser|sr\\.no\\.).*?(\\d+) (?:of|.*?for|is) (?:INR|Rs|Rupees)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\/\\-]+(?:has been generated and |is ready)?[\\s\\.]*(?:is due on|Due date for payment is) (\\d{2}[\\-\\/\\.]\\d{2}[\\-\\/\\.]\\d{2,4}|\\d{2}\\/\\d{2})",
          "account_type": "electricity",
          "pattern_UID": "159001",
          "sort_UID": "159001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        }
      ],
      "sender_UID": "90000159",
      "senders": [
        "TPOWER"
      ]
    },
    {
      "full_name": "HPSEBL",
      "name": "HPSEBL",
      "patterns": [
        {
          "regex": "(?i)electricity bill for.*?(?:consumer|con) id\\s*(\\d+) (?:is|has been generated for) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?due date[\\s\\:]*(\\d{2}\\.\\d{2}\\.\\d{2,4})",
          "account_type": "electricity",
          "pattern_UID": "161001",
          "sort_UID": "161001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        }
      ],
      "sender_UID": "90000161",
      "senders": [
        "HPSEBL"
      ]
    },
    {
      "full_name": "Jio",
      "name": "Jio",
      "patterns": [
        {
          "regex": "(?i)bill for jio number (\\d+x*\\d*) has.*[\\s\\S]*total amount (?:due|payable)[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})[\\s\\S]*payment due date[\\s\\:]*(\\d{2}\\-[a-z]{3}\\-\\d{2,4})",
          "account_type": "phone",
          "pattern_UID": "162001",
          "sort_UID": "162001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "mobile_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000162",
      "senders": [
        "JIOPAY"
      ]
    },
    {
      "full_name": "ABHYUDAYA CO-OP BANK",
      "name": "Abhyudaya",
      "patterns": [
        {
          "regex": "(?i)your a\\/c no\\.? x*\\d*(\\d{4}).*is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,3}) on (.*?) and.*\\(((imps|billdesk|upi) ref no\\.?.*?(\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "163001",
          "sort_UID": "163001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 6,
              "type_group_id": 5,
              "type_rules": [
                {
                  "value": "upi",
                  "is_upi": true
                },
                {
                  "value": "imps",
                  "is_imps": true
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)your a\\/c \\**x*(\\d{3,4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) by (?:clearing|transfer) on.*your balance is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "163002",
          "sort_UID": "163002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)balance for.*?\\/\\d*?(\\d{2,4}) on.*?is (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "163003",
          "sort_UID": "163003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)you swiped card for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) from (.*?at \\+?(.*)) with txn.*balance is [\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "163004",
          "sort_UID": "163004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM",
                  "set_no_pos": true
                },
                {
                  "txn_type": "debit_card",
                  "value": ""
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Debit Card Purchase",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)your a\\/c x*\\**(\\d{2,4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) by.*your balance is (?:INR|Rs)[\\.,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "163005",
          "sort_UID": "163005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c x*\\**(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) by.*(cheque no \\d+) on.*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "163006",
          "sort_UID": "163006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no\\. is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?) for reversal.*\\((upi ref no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "163007",
          "sort_UID": "163007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm"
                }
              ]
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)alert (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) credit to your x*\\d*?(\\d{2,4}) on.*?info.*?balance\\:\\-(?:INR|Rs)?[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "163008",
          "sort_UID": "163008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c.*?(\\d{3,4}) is credited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) by clearing on",
          "account_type": "bank",
          "pattern_UID": "163009",
          "sort_UID": "163009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        }
      ],
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "18004195511"
                ]
              }
            ]
          }
        ]
      },
      "sender_UID": "90000163",
      "senders": [
        "ACBLBK"
      ]
    },
    {
      "full_name": "Andhra Pradesh Grameena Vikas Bank",
      "name": "APGV",
      "patterns": [
        {
          "regex": "(?i)your a\\/c x*\\d*(\\d{4}) had a (.*?) txn of (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) dr on (.*?)\\.cur bal\\:(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "164001",
          "sort_UID": "164001",
          "sms_type": "transaction",
          "data_fields": {
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "acc_type_override": "debit_card",
                  "value": "atm wdl",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "acc_type_override": "debit_card",
                  "value": "pos",
                  "pos_override": "Debit Card Purchase"
                },
                {
                  "txn_type": "net_banking",
                  "value": "debit",
                  "pos_override": "Debit"
                },
                {
                  "txn_type": "net_banking",
                  "value": "cash",
                  "pos_override": "Net Banking",
                  "set_no_pos": true
                },
                {
                  "txn_type": "net_banking",
                  "value": "trf",
                  "pos_override": "Net Banking",
                  "set_no_pos": true
                },
                {
                  "pos_override": "Cheque",
                  "value": "cheque",
                  "txn_type": "cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": "",
                  "pos_override": "Net Banking"
                }
              ],
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)your a\\/c.*?x*\\d*(\\d{4}).*clear bal\\:(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}).*?on (\\d{2}\\/\\d{2}\\/\\d{2} \\d{2}\\:\\d{2})",
          "account_type": "bank",
          "pattern_UID": "164002",
          "sort_UID": "164002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i) account x*\\d*(\\d{4}).*credited with (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?)\\.\\s*info[\\s\\:]*(.*?)\\..*balance is (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "164003",
          "sort_UID": "164003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c x*\\d*(\\d{4}) had a.*txn of (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) cr on (.*?)\\.cur bal\\:(?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "164004",
          "sort_UID": "164004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no\\. x*\\d*(\\d{4}) is debited for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}).*credited to .*\\((upi ref no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "164005",
          "sort_UID": "164005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)your a\\/c x*\\d*(\\d{4}) had a credit txn at matm for (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?)\\.available bal is (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "164006",
          "sort_UID": "164006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?(imps ref no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "164007",
          "sort_UID": "164007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        }
      ],
      "misc_information": {
        "get_balance": [
          {
            "account_type": "bank",
            "contact_info": [
              {
                "type": "voice",
                "numbers": [
                  "9289222024"
                ]
              }
            ]
          }
        ]
      },
      "sender_UID": "90000164",
      "senders": [
        "APGVBK"
      ]
    },
    {
      "full_name": "Fino Payments Bank",
      "name": "Fino",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to.*?a\\/c x*(\\d{2,4}).*?(?:at|on) (.*?)\\..*?(?:clear|avl) bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "166001",
          "sort_UID": "166016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) debited from a\\/c x*(\\d{3,4}) at (.*) on (.*?)\\. available balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "166002",
          "sort_UID": "166002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?deducted from.*?towards (imps|neft|recharge|billpay).*?available balance\\: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "166003",
          "sort_UID": "166003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "net_banking",
                  "value": "recharge",
                  "pos_override": "Recharge"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited from.*?a\\/c x*(\\d{3,4}) at ([\\d{2}\\/]+\\s[\\d{2}\\:]+)\\..*clear balance (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "166004",
          "sort_UID": "166004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your account no[\\s\\.\\:]*x*(\\d{3,4}) (?:is|has been) debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?towards (.*?)\\. available balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "166005",
          "sort_UID": "166005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "debit_atm",
                  "value": "atm cash",
                  "pos_override": "ATM"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "debit_atm",
                  "value": "aeps cash",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\S]*debited from (?:your)?\\s*(?:account no|a\\/c) x*(\\d{3,4}) on (.*?) (?:for ATM transaction|towards non maintenance) charge.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "166006",
          "sort_UID": "166006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\.\\s\\:]*x*(\\d{3,4}) is debited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on ([\\d{2}\\-]+\\s[\\d{2}\\:]+)\\. a\\/c bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})\\. (ref no\\. (\\d+))",
          "account_type": "bank",
          "pattern_UID": "166007",
          "sort_UID": "166007",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 5
            },
            "network_reference_id": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)your neft payment.*\\((tranID\\: (\\d+))\\) for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is credited to (.*?) \\(.*on (.*?)\\.",
          "account_type": "bank",
          "pattern_UID": "166008",
          "sort_UID": "166008",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy 'at' HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 3
            },
            "note": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 2,
              "is_neft": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been debited.*?your a\\/c no\\. x*(\\d{3,4}) on (.*?) with ((?:imps) ref\\. no\\. (\\d+)) \\- (.*?) x+.*bal.*?a\\/c is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "166009",
          "sort_UID": "166009",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                }
              ]
            },
            "pos": {
              "group_id": 6
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_imps": true
            },
            "account_balance": {
              "group_id": 7
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\.\\s]*x*(\\d{4}) is credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?net balance (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*?)\\.",
          "account_type": "bank",
          "pattern_UID": "166010",
          "sort_UID": "166010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited from a\\/c[\\s\\.]*x*(\\d{4}) on (.*?)\\.avl bal is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?((imps ref|neft ref|ref) no[\\s\\.]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "166011",
          "sort_UID": "166011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 5
            },
            "network_reference_id": {
              "group_id": 7,
              "type_group_id": 6,
              "type_rules": [
                {
                  "value": "neft ref",
                  "is_neft": true
                },
                {
                  "value": "imps ref",
                  "is_imps": true
                }
              ]
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your account x*(\\d{4}) is debited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*?)\\. (ref[\\s\\.]*no[\\s\\:]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "166012",
          "sort_UID": "166012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MMM/yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) debited from your a\\/c x*(\\d{3,4}) on.*?towards ATM cash withdrawal.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "166013",
          "sort_UID": "166013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_atm",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "ATM",
              "set_no_pos": true
            },
            "account_balance": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)neft payment of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) credited to (.*?) \\(.*? on (.*?)\\..*?(txn id[\\s\\:]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "166014",
          "sort_UID": "166014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yyyy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 4
            },
            "network_reference_id": {
              "group_id": 5,
              "is_neft": true
            }
          }
        },
        {
          "regex": "(?i)your account no[\\s\\.]*x*(\\d{4}) .*?credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?) towards.*?refund.* available balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "166015",
          "sort_UID": "166015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "value": "Refund",
              "set_no_pos": true
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy HH:mm:ss"
                }
              ]
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to.*?a\\/c x*(\\d{2,4}).*?(?:at|on).*?towards salary.*?\\..*?(?:clear|avl) bal.*?(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "166016",
          "sort_UID": "166001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{2}) (?:credited to|has been successfully deposited in) your a\\/c x*(\\d{4}) on [\\d\\-]* (?:[\\d\\:]*|by a\\/c linked).*?((imps ref|ref) no[\\s\\.]* (\\d+))",
          "account_type": "bank",
          "pattern_UID": "166017",
          "sort_UID": "166017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 5,
              "type_group_id": 4,
              "type_rules": [
                {
                  "value": "imps ref",
                  "is_imps": true
                }
              ]
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)your account is credited with (?:Rs|INR)[\\s.,]*([-\\d,]*\\.?\\d{2}) from [x\\d]* on (\\d{2}\\/\\w{3}\\/\\d{2,4} [\\d\\:]*)\\.\\s*(ref\\.no\\:(\\d+))",
          "account_type": "prepaid",
          "pattern_UID": "166018",
          "sort_UID": "166018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MMM/yy HH:mm:ss"
                }
              ]
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000166",
      "senders": [
        "FINOBK",
        "FINOIN"
      ]
    },
    {
      "full_name": "Ujjivan Small Finance Bank",
      "name": "Ujjivan",
      "patterns": [
        {
          "regex": "(?i)available balance .*a\\/c no[\\.\\s]*\\**(\\d{4}) is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) as on ([\\d{2}\\-]+ [\\d{2}\\:]+)",
          "account_type": "bank",
          "pattern_UID": "167001",
          "sort_UID": "167001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*? - refund.*?balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "167002",
          "sort_UID": "167002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*on.*?\\s\\-\\s(.*?) a\\/c balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "167003",
          "sort_UID": "167014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*? - (.*? (?:charges|charge|chrg)) .*? balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "167004",
          "sort_UID": "167004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*? - pos\\/(.*?)\\/.*?balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "167005",
          "sort_UID": "167005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*? - (ecom\\/|mb\\/neft).*?\\/(.*?)[\\.\\/].*?balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "167006",
          "sort_UID": "167006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "debit_card",
                  "value": "ecom"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*? - mb\\/.*?\\/.*?\\/(.*?)[\\.\\/].*?a\\/c balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "167007",
          "sort_UID": "167007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*? - (mb|cash|si|emi|atm|upi|ib).*?balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "167008",
          "sort_UID": "167008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "debit_atm",
                  "value": "cash",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "upi",
                  "value": "upi",
                  "pos_override": "UPI Funds Transfer"
                },
                {
                  "value": "si",
                  "pos_override": "Standing Instruction",
                  "txn_type": "net_banking"
                },
                {
                  "value": "emi",
                  "pos_override": "EMI",
                  "txn_type": "net_banking"
                },
                {
                  "value": "",
                  "txn_type": "net_banking"
                }
              ],
              "group_id": 3
            },
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]*x*\\d*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?) and credited to (vpa|a\\/c no\\.) (.*)\\((upi ref no (\\d+))\\)",
          "account_type": "bank",
          "pattern_UID": "167009",
          "sort_UID": "167009",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "UPI Funds Transfer",
                  "txn_type": "upi",
                  "value": "a/c",
                  "set_no_pos": true
                },
                {
                  "txn_type": "upi",
                  "value": "vpa"
                }
              ],
              "group_id": 4
            },
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy HH:mm:ss"
                }
              ]
            },
            "pos": {
              "group_id": 5
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "group_id": 6
            },
            "network_reference_id": {
              "group_id": 7,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) has been debited (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?inward chq.*?\\/(.*?)\\/.*?available bal in a\\/c (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "167010",
          "sort_UID": "167010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "cheque",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cheque",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*on.*?((?:imps|upi\\/cr\\/.*?)\\/.*?\\/(.*?)\\s*(?:a\\/c|\\/).*?) balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "167011",
          "sort_UID": "167011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*on.*?neft cr (.*?)(?:[a-z]*\\d{6}|\\-).*?a\\/c balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "167012",
          "sort_UID": "167012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*on.*salary.*?a\\/c balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "167013",
          "sort_UID": "167013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*\\d*(\\d{4}) is credited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\S]*on.*?(upi\\/rev|imps rev|atm reversal|upi.*?(?:reversal|refund|\\/rev[\\se]*a\\/c)|refund|atmrev|\\srev amc|reversal).*balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "167014",
          "sort_UID": "167003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "upi/",
                  "pos_override": "Rev-Upi"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "atmrev",
                  "pos_override": "ATM Reversal"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "atm reversal",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) debited from x*(\\d{4}) on .*?to vpa (.*?) \\(upi ref no (\\d+)",
          "account_type": "bank",
          "pattern_UID": "167015",
          "sort_UID": "167015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to a\\/c x*(\\d{4}) on .*by .*?linked to vpa .*? upi ref no (\\d+)",
          "account_type": "bank",
          "pattern_UID": "167016",
          "sort_UID": "167016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "network_reference_id": {
              "group_id": 3,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) credited to a\\/c x*(\\d{4}) on .*\\(rev\\/upi ref no (\\d+)",
          "account_type": "bank",
          "pattern_UID": "167017",
          "sort_UID": "167017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "value": "Rev-Upi",
              "set_no_pos": true
            },
            "network_reference_id": {
              "group_id": 3,
              "is_upi": true
            }
          }
        }
      ],
      "sender_UID": "90000167",
      "senders": [
        "UJJIVN"
      ]
    },
    {
      "full_name": "AP Mahesh Bank",
      "name": "AP Mahesh",
      "patterns": [
        {
          "regex": "(?i)ac no.*?(\\d{3,4}) has been credited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*available balance is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "168001",
          "sort_UID": "168015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) was debited.*?debit card x*(\\d{3,4}) on (.*?) at (.*?)[\\s\\.]\\w*[\\s\\.]\\w*?in \\-.*?balance.*?is\\: (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "debit_card",
          "pattern_UID": "168002",
          "sort_UID": "168002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_card",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm:ss a"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "pos": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\.\\s]*x*(\\d{3,4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*credited.*?\\(imps ref no (\\d+)\\)",
          "account_type": "bank",
          "pattern_UID": "168003",
          "sort_UID": "168003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "note",
                  "child_field": {
                    "field": "note"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "prefix": "IMPS Ref No:",
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 3,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\.\\s]*x*(\\d{4}) is debited for (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?\\(upi ref no (\\d+)\\)",
          "account_type": "bank",
          "pattern_UID": "168004",
          "sort_UID": "168004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "note",
                  "child_field": {
                    "field": "note"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "UPI Funds Transfer",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "prefix": "UPI Ref No:",
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 3,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)account no[\\s\\.]*x*(\\d{2,4}) has clear balance (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "168005",
          "sort_UID": "168017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)ac no.*?(\\d{2,4}) has been debited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?by transfer.*?available balance is (?:INR|Rs)[\\.\\:,\\s]*([\\d,\\-]+\\.?\\d{0,2}).*?imps\\/.*?\\/(\\d+)\\/",
          "account_type": "bank",
          "pattern_UID": "168006",
          "sort_UID": "168006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "note",
                  "child_field": {
                    "field": "note"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "prefix": "IMPS Ref No:",
              "group_id": 4
            },
            "account_balance": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)ac no.*?(\\d{2,4}) has been debited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?by transfer.*?available balance is (?:INR|Rs)[\\.\\:,\\s]*([\\d,\\-]+\\.?\\d{0,2})\\s*upi\\/.*?\\/(\\d+)\\/(.*?)\\/",
          "account_type": "bank",
          "pattern_UID": "168007",
          "sort_UID": "168007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "deleted": false,
            "enable_chaining": true,
            "incomplete": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true,
                    "incomplete": false
                  }
                ],
                "child_override": [
                  {
                    "deleted": false,
                    "incomplete": false
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "pan",
                  "child_field": {
                    "field": "pan"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "note",
                  "child_field": {
                    "field": "note"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 3600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                },
                {
                  "parent_field": "deleted",
                  "match_type": "none"
                },
                {
                  "parent_field": "pattern_UID",
                  "match_type": "none"
                }
              ]
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 5
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "prefix": "UPI Ref No:",
              "group_id": 4
            },
            "account_balance": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_upi": true
            }
          }
        },
        {
          "regex": "(?i)ac no.*?(\\d{2,4}) has been debited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?by transfer.*?available balance is (?:INR|Rs)[\\.\\:,\\s]*([\\d,\\-]+\\.?\\d{0,2})\\s*\\:?(.*)\\-mahesh bank",
          "account_type": "bank",
          "pattern_UID": "168008",
          "sort_UID": "168008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "debit_atm",
                  "value": "nfs",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 3
            },
            "note": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)ac no.*?(\\d{2,4}) has been debited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?by (?:clearing )?(cheque.*?|cash)\\. available balance is (?:INR|Rs)[\\.\\:,\\s]*([\\d,\\-]+\\.?\\d{0,2})\\s*(.*)\\-mahesh bank",
          "account_type": "bank",
          "pattern_UID": "168009",
          "sort_UID": "168009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "cheque",
                  "pos_override": "Cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 5
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)imps.*[\\s\\S]bene name\\: (.*?)\\s*a\\/c.*[\\s\\S]*amt\\: (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?[\\s\\S]*rrn\\: (\\w+)",
          "account_type": "bank",
          "pattern_UID": "168010",
          "sort_UID": "168010",
          "obsolete": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "prefix": "Reference No:",
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 3,
              "is_imps": true
            }
          }
        },
        {
          "regex": "(?i)ac no.*?(\\d{3,4}) has been credited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*available balance is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})upi\\/.*?\\/.*?\\/(.*?)\\/",
          "account_type": "bank",
          "pattern_UID": "168013",
          "sort_UID": "168013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)ac no.*?(\\d{3,4}) has been credited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*available balance is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2}).*?salary",
          "account_type": "bank",
          "pattern_UID": "168014",
          "sort_UID": "168014",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)ac no.*?(\\d{3,4}) has been credited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*available balance is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})neft (.*?) \\d+",
          "account_type": "bank",
          "pattern_UID": "168015",
          "sort_UID": "168001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)your a\\/c no[\\s\\.]*x*(\\d{4}) is credited by (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on.*?(imps ref no (\\d+))",
          "account_type": "bank",
          "pattern_UID": "168016",
          "sort_UID": "168016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4,
              "is_imps": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)ac no.*?(\\d{3,4}) has been credited by (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*available balance is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2}).*?(pos[\\s\\-]refund|upi\\/rev\\/|rev[\\s\\-]imps)",
          "account_type": "bank",
          "pattern_UID": "168017",
          "sort_UID": "168005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "upi/",
                  "pos_override": "Rev-Upi"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "pos",
                  "pos_override": "Debit Card Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000168",
      "senders": [
        "APMBNK",
        "APMCUB"
      ]
    },
    {
      "full_name": "NKGSB Cooperative Bank",
      "name": "NKGSB",
      "patterns": [
        {
          "regex": "(?i)a\\/c no[\\.\\s]*\\d*x*(\\d{3,4}) is credited (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*info\\-(.*?)\\.\\s*clear balance is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "169001",
          "sort_UID": "169013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]\\d*x*(\\d{3,4}) is debited (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*info\\-(pos|atm|eco)[\\d\\s\\-]*(.*?)\\.clear balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "169002",
          "sort_UID": "169002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_atm",
                  "value": "atm",
                  "pos_override": "ATM"
                },
                {
                  "txn_type": "debit_card",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 4
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c no\\.\\d*x*(\\d{3,4}) is debited (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*info\\-upi\\/debit\\/.*?\\/(.*?)[\\/\\.].*clear balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "169003",
          "sort_UID": "169003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "upi",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]\\d*x*(\\d{3,4}) is debited (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*imps\\/.*?\\/.*?\\/(\\d+).*clear balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "169004",
          "sort_UID": "169004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "note": {
              "prefix": "Reference No:",
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 3,
              "is_imps": true
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]\\d*x*(\\d{3,4}) is debited (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*\\:neft \\w+ (.*?)\\.clear balance is (?:INR|Rs)[\\.:,\\s\\-]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "169005",
          "sort_UID": "169005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]\\d*x*(\\d{3,4}) is debited (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*info\\-((?:cash|mb|billdesk|loan).*?)\\.clear balance is (?:INR|Rs)[\\.:,\\s\\-]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "169006",
          "sort_UID": "169006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "note": {
              "group_id": 3
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]\\d*x*(\\d{3,4}) is debited (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*info\\-ach debit \\:\\s*(?:tp ach|tp|bd)?[\\s\\-]*(.*?) \\: (\\d+)\\.clear balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "169007",
          "sort_UID": "169007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "ecs",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "note": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]\\d*x*(\\d{3,4}) is debited (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*info\\-trf[\\-\\s]*(.*?)\\.clear balance is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "169008",
          "sort_UID": "169008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\s\\.]\\d*x*(\\d{3,4}) is debited (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*info\\-(.*?)(?: for|\\.)clear balance is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "169009",
          "sort_UID": "169009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\.\\s]*\\d*x*(\\d{3,4}) is credited (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*?((?:upi|imps)\\/.*?\\/.*?\\/((?:m\\/)?.*?)(?:\\/|\\.\\s*clear).*?)(?:clear)? balance is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "169010",
          "sort_UID": "169010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\.\\s]*\\d*x*(\\d{3,4}) is credited (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*neft (.*?) \\w+ \\w+\\.clear balance is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "169011",
          "sort_UID": "169011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\.\\s]*\\d*x*(\\d{3,4}) is credited (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*salary.*clear balance is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "169012",
          "sort_UID": "169012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c no[\\.\\s]*\\d*x*(\\d{3,4}) is credited (?:INR|Rs)*[\\.:,\\s|v]*([\\d,]+\\.?\\d{0,2}) on.*(reversal|rev[\\s\\-](?:imps|atm)|upi rev|rev\\/upi|refund).*clear balance is (?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "169013",
          "sort_UID": "169001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "upi",
                  "pos_override": "Rev-Upi"
                },
                {
                  "acc_type_override": "debit_card",
                  "txn_type": "credit",
                  "value": "atm",
                  "pos_override": "ATM Reversal"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        }
      ],
      "sender_UID": "90000169",
      "senders": [
        "NKGSBK"
      ]
    },
    {
      "full_name": "Zaggle",
      "name": "Zaggle",
      "set_account_as_expense": false,
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was spent.*?meal (?:card|wallet).*?x*\\d{4} on (.*?) at (.*?)\\.\\s*avl bal[\\:\\s]*(?:INR|Rs|)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "171001",
          "sort_UID": "171001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm a"
                }
              ]
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "pan": {
              "value": "Meal Card"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) was spent.*?kuber.*?ending \\d{4} on (.*?) at (.*?)\\.\\s*avl bal[\\s\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "171002",
          "sort_UID": "171002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy hh:mm a"
                }
              ]
            },
            "pos": {
              "group_id": 3
            },
            "account_balance": {
              "group_id": 4
            },
            "pan": {
              "value": "Kuber card"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)meal.*?card.*reloaded with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?available balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "171003",
          "sort_UID": "171003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Meal Card"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Card Top Up",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)fuel.*?card.*reloaded with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?available balance is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "prepaid",
          "pattern_UID": "171004",
          "sort_UID": "171004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_recharge",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Fuel Card"
            },
            "account_balance": {
              "group_id": 2
            },
            "pos": {
              "value": "Card Top Up",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000171",
      "senders": [
        "ZAGGLE"
      ]
    },
    {
      "full_name": "Simpl",
      "name": "Simpl",
      "patterns": [
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for (.*?)\\, (.*?(?:number|\\sid|\\sno|\\scode) [a-z\\-]*\\d+).*?on (.*?) charged",
          "account_type": "pay_later",
          "pattern_UID": "172001",
          "sort_UID": "172001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "group_id": 4,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MMM dd, yy hh:mm a"
                }
              ]
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on (.*?) charged.*?simpl",
          "account_type": "pay_later",
          "pattern_UID": "172002",
          "sort_UID": "172002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)simpl.*?bill of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?is ready.*?due (?:on|by) (\\d{2}\\s\\w{3}(?:\\s|\\,\\s)\\d{2,4})",
          "account_type": "pay_later",
          "pattern_UID": "172003",
          "sort_UID": "172003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "pay_later_bill",
            "pan": {
              "value": "bill"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM, yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?refunded by (.*?)\\.",
          "account_type": "pay_later",
          "pattern_UID": "172004",
          "sort_UID": "172004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)cashback of (?:INR|Rs|Rs\\.Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\.]*[\\s\\S]*(?:for your transaction.*?has been credited to your simpl account|we hope to)",
          "account_type": "pay_later",
          "pattern_UID": "172005",
          "sort_UID": "172005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_rewards",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Cashback",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            }
          }
        }
      ],
      "sender_UID": "90000172",
      "senders": [
        "GSIMPL",
        "SIMPLX",
        "MYSMPL",
        "SMPLPL"
      ]
    },
    {
      "full_name": "AU Small Finance Bank",
      "name": "AU Bank",
      "patterns": [
        {
          "regex": "(?i)(?:a\\/c|account) (?:no\\.)?\\s*x*(\\d{4}).*?credited (?:with|by) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?towards (.*)\\..*?(?:avbl|available).*?(?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173001",
          "sort_UID": "173009",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}).*?debited with (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?towards neft dr\\-.*?\\-(.*?)\\-.*?\\.\\s*avbl bal is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173002",
          "sort_UID": "173002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}).*?debited (?:with|by) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?towards (vde|rdp|rde|vdp)\\-.*?\\-.*?\\-(.*?)\\.\\s*avbl bal (?:is)?\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173003",
          "sort_UID": "173003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "value": "vdp",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)a\\/c x*(\\d{4}).*?debited (?:from)?\\s*(?:with|by) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?towards ((nda|atw|imps|vie|upi|vip|amb|chq paid|trans|neft|ach|aeon).*?)\\.\\s*avbl bal (?:is)?\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173004",
          "sort_UID": "173004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "Cheque",
                  "value": "chq paid",
                  "txn_type": "cheque",
                  "set_no_pos": true
                },
                {
                  "pos_override": "ATM",
                  "txn_type": "debit_atm",
                  "value": "nda",
                  "acc_type_override": "debit_card",
                  "set_no_pos": true
                },
                {
                  "pos_override": "ATM",
                  "txn_type": "debit_atm",
                  "value": "atw",
                  "acc_type_override": "debit_card",
                  "set_no_pos": true
                },
                {
                  "pos_override": "UPI Funds Transfer",
                  "txn_type": "upi",
                  "value": "upi",
                  "set_no_pos": true
                },
                {
                  "txn_type": "ecs",
                  "value": "ach"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 4
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c (?:no)?[\\s\\.]*x*(\\d{4}).*?credited (?:with|by) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?towards.*?((?:neft cr|upi\\/cr|imps|rtgs cr)[\\/\\-].*?[\\-\\/](?:a\\/c|m\\/s)?(.*?)[\\-\\/].*?)(?:avbl bal|Available Balance)[\\s\\:]*(?:is)? (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173005",
          "sort_UID": "173005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)a\\/c (?:no\\.)?\\s*x*(\\d{4}).*?credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?towards refund[\\s\\-]*(.*?)\\-.*?(?:avbl bal is|Available Balance)[\\s\\:]*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173006",
          "sort_UID": "173006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)a\\/c (?:no\\.)?\\s*x*(\\d{4}).*?credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?towards .*?salary.*?bal.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173007",
          "sort_UID": "173007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_salary",
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Salary",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c (?:no\\.)?\\s*x*(\\d{4}) is credited (?:with|by) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?towards (nda|atw|vip|vie|rdp|vdp)\\-.*?\\-.*?\\-(.*?)\\.\\s*(?:avbl bal|Available Balance)[\\s\\:]*(?:is)?\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173008",
          "sort_UID": "173008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "nda",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "credit",
                  "value": "atw",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "credit",
                  "value": "vdp",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 4
            },
            "pos": {
              "group_id": 4
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 5
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)a\\/c (?:no\\.)?\\s*x*(\\d{4}).*?credited with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?towards (upi\\/dr\\-rev|rev imps|rev[\\s\\-]|.*?(?:reversal|\\sreverse\\s)).*?bal.*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173009",
          "sort_UID": "173001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "credit",
                  "value": "upi/",
                  "pos_override": "Rev-Upi"
                },
                {
                  "txn_type": "credit",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Reversal",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)upi payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) received from (.*?)\\.\\s*(reference[\\s\\:]*(\\d+))",
          "account_type": "bank",
          "pattern_UID": "173010",
          "sort_UID": "173010",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                }
              ],
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 2
            },
            "note": {
              "group_id": 3
            },
            "network_reference_id": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)(?:a\\/c|account) x*(\\d{4}).*?debited (?:with|by) (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) on.*?towards (.*)\\.\\s(?:avbl|the available) bal.*?(?:is)?\\s*(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173011",
          "sort_UID": "173011",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "note": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been debited.*?a\\/c x*(\\d{4}) on .*?towards (upi\\/dr|imps\\-.*?\\-.*?|rtgs dr|neft dr|(?:vdp|nda|rdp|vde|atw|rde)\\-.*?|pg\\s*\\-\\s*dr\\s*|ft\\s*\\-\\s*dr\\s*|Money Transfer Dr\\s*)[\\-\\/].*?[\\/\\-](.*?)(?:\\/|\\-|\\.\\savail).*?balance[\\s\\:]*(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173012",
          "sort_UID": "173012",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "ATM",
                  "txn_type": "debit_atm",
                  "value": "nda-",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "debit_card",
                  "value": "vdp-",
                  "acc_type_override": "debit_card"
                },
                {
                  "pos_override": "ATM",
                  "txn_type": "debit_atm",
                  "value": "atw-",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "upi",
                  "value": "upi/"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been debited.*?a\\/c x*(\\d{4}) on .*?towards (.*?)\\.\\s*available balance[\\s:]*(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173013",
          "sort_UID": "173013",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "pos_override": "Cheque",
                  "value": "chq paid",
                  "txn_type": "cheque"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos": {
              "value": "Net Banking",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "note": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)(?:available balance.*?au bank |[\\:\\|]\\s)a\\/c no[\\s\\.]*x*(\\d{3,4}) (?:\\-|is)+[\\s:]*(?:INR|Rs)[\\.:,\\s]*([\\d,\\-]+\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173014",
          "sort_UID": "173014",
          "reparse": true,
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "balance",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(INR|Rs|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) spent .*credit card x*(\\d{4}) at (.*?) on (.*?)\\.\\s*avlb bal (?:INR|Rs)[\\.:,\\s]*([\\d,-]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "173015",
          "sort_UID": "173015",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "date": {
              "group_id": 5,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yyyy 'at' hh:mm:ss a"
                }
              ]
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "account_balance": {
              "group_id": 6
            }
          }
        },
        {
          "regex": "(?i)credited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to a\\/c x*(\\d{4}) .*? ref ((?:neft cr|upi\\/cr|imps|rtgs cr)[\\/\\-].*?[\\-\\/](?:a\\/c|m\\/s)?(.*?)[\\-\\/].*?)(?: bal|Available Balance)[\\s\\:]*(?:is)? (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173016",
          "sort_UID": "173016",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            },
            "pos": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)credited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to a\\/c x*(\\d{4}) .*? ref (?:upi\\/dr\\-rev.*\\/|(?:neft|imps|rtgs) rev\\-\\w+\\-|refund\\-)(.*?)(?:\\-|\\.\\s).*\n?bal (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173017",
          "sort_UID": "173017",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)credited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) to a\\/c x*(\\d{4}) on .*? ref (.*)?\\. bal (?:INR|Rs)[\\.,\\s]*([\\d,\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173018",
          "sort_UID": "173018",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "pos_type_rules": {
              "rules": [
                {
                  "value": "cheque",
                  "category": "walnut_bank_deposit"
                },
                {
                  "value": "salary",
                  "category": "walnut_salary"
                },
                {
                  "value": "interest\\s*(?:credit|cr|on sb|from|54ec bonds|in prudent sweep|on (?:td|fd)|of|on local bill|recovery|charges|booking)|(?:monthly|yearly|quarterly|by|fd|td|tmd|credit|towards|gold bonds|consolidated|fd redeem|account of|credited as|fd\\s*od|debenture|scss|fd\\s*do)\\s*interest",
                  "category": "walnut_interest"
                },
                {
                  "value": "reimbursement",
                  "category": "walnut_reimbursement"
                },
                {
                  "value": "(?:[^a-z]sal|^sal)\\s+(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)",
                  "category": "walnut_salary"
                },
                {
                  "value": "(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).* sal ",
                  "category": "walnut_salary"
                },
                {
                  "value": "chq",
                  "category": "walnut_bank_deposit"
                }
              ],
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            },
            "pos": {
              "group_id": 3
            }
          }
        },
        {
          "regex": "(?i)debited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) from a\\/c x*(\\d{4}) on .*? ref (upi\\/dr|vde|rde|vdp|rtgs dr|neft dr|rdp)[\\/\\-](?:[\\-\\/\\d\\s]+|\\w+\\-)(.*?)(?:[\\/\\-]|\\.\\sbal|\\-\\d+\\/\\d+\\/\\d+).*?(?:INR|Rs)[\\.,\\s]*([\\d,\\\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173019",
          "sort_UID": "173019",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "debit_card",
                  "value": "vdp",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "upi",
                  "value": "upi"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos": {
              "group_id": 4
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 5
            }
          }
        },
        {
          "regex": "(?i)debited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) from a\\/c x*(\\d{4}) on .*? ref (ach|chq|nda|atw|imps|AEOIWDL).*?(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173020",
          "sort_UID": "173020",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type_rule": {
              "rules": [
                {
                  "txn_type": "cheque",
                  "value": "chq",
                  "pos_override": "Cheque"
                },
                {
                  "pos_override": "ATM",
                  "txn_type": "debit_atm",
                  "value": "nda",
                  "acc_type_override": "debit_card"
                },
                {
                  "pos_override": "ATM",
                  "txn_type": "debit_atm",
                  "value": "atw",
                  "acc_type_override": "debit_card"
                },
                {
                  "txn_type": "net_banking",
                  "value": ""
                }
              ],
              "group_id": 3
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "account_balance": {
              "group_id": 4
            }
          }
        },
        {
          "regex": "(?i)debited (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) from a\\/c x*(\\d{4}) on .*? ref .*bal (?:INR|Rs)[\\.,\\s]*([\\d,\\\\-]*\\.?\\d{0,2})",
          "account_type": "bank",
          "pattern_UID": "173021",
          "sort_UID": "173021",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "net_banking",
            "date": {
              "use_sms_time": true
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "account_balance": {
              "group_id": 3
            },
            "pos": {
              "value": "Debit",
              "set_no_pos": true
            }
          }
        }
      ],
      "sender_UID": "90000173",
      "senders": [
        "AUBANK"
      ]
    },
    {
      "full_name": "PSPCL",
      "name": "PSPCL",
      "patterns": [
        {
          "regex": "(?i)pspcl bill.*?account no[\\s\\.]*(\\w+) of\\s*(?:amount)?\\s*(?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?due (?:on|by).*?(\\d{2}\\-[a-z]{3}\\-\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "174001",
          "sort_UID": "174001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000174",
      "senders": [
        "PBGOVT"
      ]
    },
    {
      "full_name": "Bharti AXA Life Insurance",
      "name": "Bharti AXA Life",
      "patterns": [
        {
          "regex": "(?i)premium of (?:INR|Rs)[\\.,\\s\\+]+([\\d,]*\\.?\\d{0,2}) for policy ([\\d\\-]+) (?:is|will be) due on (\\d{2}\\-\\d{2}\\-\\d{4}|\\d{4}\\-\\d{2}\\-\\d{2})",
          "account_type": "insurance",
          "pattern_UID": "175001",
          "sort_UID": "175001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            },
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)premium of.*?for policy ([\\d\\-]+) of (?:INR|Rs)[\\.,\\s\\+]+([\\d,]*\\.?\\d{0,2}) is due on (\\d{2}\\s\\w{3}\\s\\d{4})",
          "account_type": "insurance",
          "pattern_UID": "175002",
          "sort_UID": "175002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)premium.*?your.*?policy ([\\d\\-]+)[\\s\\,]*due on (\\d{4}\\-\\d{2}\\-\\d{2}|\\d{2}\\w{3}\\d{2}) .*?(?:for|amt payable is) (?:INR|Rs)[\\.,\\s\\+]+([\\d,]*\\.?\\d{0,2})",
          "account_type": "insurance",
          "pattern_UID": "175003",
          "sort_UID": "175003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd"
                },
                {
                  "use_sms_time": false,
                  "format": "ddMMMyy"
                }
              ]
            },
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000175",
      "senders": [
        "BAXALI"
      ]
    },
    {
      "full_name": "Aditya Birla Sun Life Insurance",
      "name": "Aditya Birla Sun Life",
      "patterns": [
        {
          "regex": "(?i)premium of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for.*?policy\\s*(?:number)?[\\s\\#]*(\\d+) (?:will be debited|is due).*?on (\\d{2}\\-\\w{3}\\-\\d{4}|\\d{2}\\-\\d{2}\\-\\d{4})",
          "account_type": "insurance",
          "pattern_UID": "176001",
          "sort_UID": "176001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:aditya birla health insurance policy|active? (?:secure|assure).*?policy no)[\\s\\.]*([\\d\\-]+) .*?(?:with premium|auto\\-debit of) (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is (?:due for renewal on|scheduled on) (\\d{2}\\-\\w{3}\\-\\d{2,4}|\\d{4}\\-\\d{2}\\-\\d{2})",
          "account_type": "insurance",
          "account_name_override": "Aditya Birla Health",
          "pattern_UID": "176002",
          "sort_UID": "176002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000176",
      "senders": [
        "ABCPRO",
        "ABCABS"
      ]
    },
    {
      "full_name": "Unique Central Piped Gas",
      "name": "UCPGPL",
      "patterns": [
        {
          "regex": "(?i)your.*?gas bill .*?(?:is|for) (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?due (?:date|on)\\s*(?:is)?[\\s\\:]*(\\d{2}\\/\\d{2}\\/\\d{4}|\\d{4}\\-\\d{2}\\-\\d{2})",
          "account_type": "gas",
          "pattern_UID": "177001",
          "sort_UID": "177001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000177",
      "senders": [
        "UCPGPL"
      ]
    },
    {
      "full_name": "Connect Broadband",
      "name": "Connect Broadband",
      "patterns": [
        {
          "regex": "(?i)(?:number|no)[\\s\\.]*(\\w+) (?:with bill amount of|of) (?:INR|Rs)[\\.,\\s]*([\\d,]+\\.?\\d{0,2}) (?:is|with due date) (\\d{2}\\-\\w{3}\\-\\d{4}|\\d{2}\\-\\w{3})",
          "account_type": "generic",
          "pattern_UID": "178001",
          "sort_UID": "178001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "internet_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000178",
      "senders": [
        "CONECT"
      ]
    },
    {
      "full_name": "Canara HSBC OBC Life Insurance Company Limited",
      "name": "Canara HSBC OBC Life",
      "patterns": [
        {
          "regex": "(?i)standing instruction of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for your policy no[\\s\\.]*(\\d+) due on (\\d{2}\\-\\w{3}\\-\\d{2})",
          "account_type": "insurance",
          "pattern_UID": "179001",
          "sort_UID": "179001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)renewal premium of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) due on (\\w{3}\\s\\d{2}) under your policy no[\\s\\.]*(\\d+)",
          "account_type": "insurance",
          "pattern_UID": "179002",
          "sort_UID": "179002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "MMM dd"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000179",
      "senders": [
        "CHOINS"
      ]
    },
    {
      "full_name": "DHFL Pramerica Life Insurance",
      "name": "DHFL Pramerica Life",
      "patterns": [
        {
          "regex": "(?i)premium of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) due on policy (\\d+) shall be debited.*?on (\\d{2}\\-\\w{3}\\-\\d{4})",
          "account_type": "insurance",
          "pattern_UID": "181001",
          "sort_UID": "181001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)premium for your policy (\\d+) for (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is due on (\\d{2}\\-\\w{3}\\-\\d{2}|\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "insurance",
          "pattern_UID": "181002",
          "sort_UID": "181002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000181",
      "senders": [
        "PLILTD"
      ]
    },
    {
      "full_name": "HDFC ERGO General Insurance",
      "name": "HDFC ERGO",
      "patterns": [
        {
          "regex": "(?i)your pol ref no[\\s\\.]*(\\w+) is due for renewal on (\\d{2}\\s\\w{3}\\s\\d{4}) for premium (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "insurance",
          "pattern_UID": "182001",
          "sort_UID": "182001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 3
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)premium of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) against.*?hdfc ergo health insurance policy (\\w+) will be debited on (\\d{2}\\-\\w{3}\\-\\d{2})",
          "account_type": "insurance",
          "account_name_override": "HDFC ERGO Health",
          "pattern_UID": "182002",
          "sort_UID": "182002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000182",
      "senders": [
        "HDFCHI",
        "HDFCGI"
      ]
    },
    {
      "full_name": "IDBI Federal Life Insurance",
      "name": "IDBI Federal Life",
      "patterns": [
        {
          "regex": "(?i)premium of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for.*?policy (\\d+) is due on (\\d{2}\\-\\w{3}\\-\\d{2})\\.",
          "account_type": "insurance",
          "pattern_UID": "183001",
          "sort_UID": "183001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000183",
      "senders": [
        "IDBIFL"
      ]
    },
    {
      "full_name": "India First Life Insurance",
      "name": "India First Life",
      "patterns": [
        {
          "regex": "(?i)premium of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is due on (\\d{2}\\/\\d{2}\\/\\d{2,4}|\\d{2}\\-\\w{3}\\-\\d{2}) for.*?policy\\s*(?:no\\.)?\\s*(\\d+)\\.",
          "account_type": "insurance",
          "pattern_UID": "184001",
          "sort_UID": "184001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)policy (\\d+) pay renewal premium amount of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) .*?due on (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "insurance",
          "pattern_UID": "184002",
          "sort_UID": "184002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)renewal premium (?:due)?\\s*of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:for|under) .*?policy (?:no)?[\\s\\.]*(\\d+) (?:due on|on or before) (\\d{2}\\/\\d{2}\\/\\d{2,4})\\.",
          "account_type": "insurance",
          "pattern_UID": "184003",
          "sort_UID": "184003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000184",
      "senders": [
        "INDIAF"
      ]
    },
    {
      "full_name": "APDCL",
      "name": "APDCL",
      "patterns": [
        {
          "regex": "(?i)bill against .*?consumer id (\\d+)[\\s\\,]*.*?is (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\.]*due date is (\\d{2}\\.\\d{2}\\.\\d{4}|\\d{2}\\-\\w{3}\\-\\d{2})",
          "account_type": "electricity",
          "pattern_UID": "185001",
          "sort_UID": "185001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000185",
      "senders": [
        "DAPDCL"
      ]
    },
    {
      "full_name": "Brihanmumbai Electric Supply and Transport",
      "name": "BEST",
      "patterns": [
        {
          "regex": "(?i)bill for (?:con|a\\/c)[\\.\\s]no[\\s\\:\\.]*(\\d+) (?:is|of) (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}).*?(?:due date is|due on) (\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "electricity",
          "pattern_UID": "186001",
          "sort_UID": "186001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000186",
      "senders": [
        "BESTSM"
      ]
    },
    {
      "full_name": "CSEB",
      "name": "CSEB",
      "patterns": [
        {
          "regex": "(?i)bp no[\\s\\.]*(\\d+)[\\s\\,]*bill amt (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for.*?due dt (\\d{2}\\/\\d{2}\\/\\d{2})",
          "account_type": "electricity",
          "pattern_UID": "187001",
          "sort_UID": "187001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000187",
      "senders": [
        "CSPDCL"
      ]
    },
    {
      "full_name": "Edelweiss Tokio Life Insurance",
      "name": "Edelweiss Tokio Life",
      "patterns": [
        {
          "regex": "(?i)premium of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for.*?policy (\\w+) (?:is due on|will be debited on) (\\d{2}[\\-\\s]\\w{3}[\\s\\-]\\d{4})",
          "account_type": "insurance",
          "pattern_UID": "188001",
          "sort_UID": "188001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd MMM yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)pay renewal premium of (?:INR|Rs|)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) before (\\d{2}\\-\\w{3}\\-\\d{4}) .*?your policy (\\w+)",
          "account_type": "insurance",
          "pattern_UID": "188002",
          "sort_UID": "188002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000188",
      "senders": [
        "ETLIFE"
      ]
    },
    {
      "full_name": "Haryana City Gas",
      "name": "Haryana City Gas",
      "patterns": [
        {
          "regex": "(?i)png bill for crn (\\d+) (?:of|is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?(?:is due on|with due date) (\\d{2}\\-\\d{2}\\-\\d{4})",
          "account_type": "gas",
          "pattern_UID": "189001",
          "sort_UID": "189001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)bill\\s.*?\\sof (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for your png bill.*?generated[\\s\\.]*due date is (\\d{2}\\-\\d{2}\\-\\d{2,4})",
          "account_type": "gas",
          "pattern_UID": "189002",
          "sort_UID": "189002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000189",
      "senders": [
        "HCGKCE",
        "HCGPNG"
      ]
    },
    {
      "full_name": "HESCOM",
      "name": "HESCOM",
      "patterns": [
        {
          "regex": "(?i)bill of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) due on (\\d{4}\\-\\d{2}\\-\\d{2}|\\d{2}\\/\\d{2}\\/\\d{4}) for (?:con|ac) id[\\s\\:]*(\\d+)",
          "account_type": "electricity",
          "pattern_UID": "191001",
          "sort_UID": "191001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 3
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000191",
      "senders": [
        "HESCOM"
      ]
    },
    {
      "full_name": "Indraprastha Gas",
      "name": "Indraprastha Gas",
      "patterns": [
        {
          "regex": "(?i)png bill for bp no[\\s\\.]*(\\d+) (?:is|of) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?due (?:date|on) (\\d{2}\\/\\d{2}\\/\\d{2,4})",
          "account_type": "gas",
          "pattern_UID": "192001",
          "sort_UID": "192001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000192",
      "senders": [
        "IGLDEL",
        "IGLGAS"
      ]
    },
    {
      "full_name": "Kanpur Electricity",
      "name": "KESCO",
      "patterns": [
        {
          "regex": "(?i)bill a\\/c\\-(\\d+)\\,.*amt bfr due dt\\-[\\.,\\s]*([\\d,]*\\.?\\d{0,2})(?:INR|Rs).*due date\\-(\\d{2}\\/\\d{2}\\/\\d{2})",
          "account_type": "electricity",
          "pattern_UID": "193001",
          "sort_UID": "193001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000193",
      "senders": [
        "KESCOK"
      ]
    },
    {
      "full_name": "Kota Electricity Distribution Limited",
      "name": "KEDL",
      "patterns": [
        {
          "regex": "(?i)k no[\\s\\-\\.]*(\\d+) (?:bill|is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:pay by)?\\s*(\\d{2}\\-\\d{2}\\-\\d{4})\\s*(?:tak bharen)?",
          "account_type": "electricity",
          "pattern_UID": "194001",
          "sort_UID": "194001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000194",
      "senders": [
        "KEDLLM"
      ]
    },
    {
      "full_name": "Tikona",
      "name": "Tikona",
      "patterns": [
        {
          "regex": "(?i)due for renewal on (\\d{2}\\-\\d{2}\\-\\d{2})\\. kindly pay (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "generic",
          "pattern_UID": "195001",
          "sort_UID": "195001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "internet_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 1,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)(?:bill amt of|\\!) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is due\\s*on\\s*(\\d{2}\\-\\d{2}\\-\\d{4})\\.",
          "account_type": "generic",
          "pattern_UID": "195002",
          "sort_UID": "195002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "internet_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000195",
      "senders": [
        "TIKONA"
      ]
    },
    {
      "full_name": "Mangalore Electricity Supply",
      "name": "MESCOM",
      "patterns": [
        {
          "regex": "(?i)mescom bill of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*?(?:rr number|account id)[\\s\\:]*(\\w+)\\..*?(?:pay by|time by) (\\d{2}\\/\\d{2}\\/\\d{4}|\\d{4}\\-\\d{2}\\-\\d{2})",
          "account_type": "electricity",
          "pattern_UID": "196001",
          "sort_UID": "196001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000196",
      "senders": [
        "MESCOM"
      ]
    },
    {
      "full_name": "Noida Power Co Limited",
      "name": "NPCL",
      "patterns": [
        {
          "regex": "(?i)your bill of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is due on (\\d{2}\\-\\w{3})\\.",
          "account_type": "electricity",
          "pattern_UID": "197001",
          "sort_UID": "197001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000197",
      "senders": [
        "NPCLCC"
      ]
    },
    {
      "full_name": "NBPDCL",
      "name": "NBPDCL",
      "patterns": [
        {
          "regex": "(?i)(?:con id|ca|cano)[\\s\\:]*(\\d+)\\s*(?:of|for|\\,).*?(?:is|due amount) (?:INR|Rs)[\\.,\\s\\:]*([\\d,]*\\.?\\d{0,2})[\\s\\,\\.](?:pay before|due date)[\\s\\:]*(\\d{2}[\\-\\/]\\d{2}[\\-\\/]\\d{4}|\\d{2}\\-\\w{3}\\-\\d{2})",
          "account_type": "electricity",
          "pattern_UID": "198001",
          "sort_UID": "198001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000198",
      "senders": [
        "NBPDCL"
      ]
    },
    {
      "full_name": "PNB Metlife Insurance",
      "name": "PNB Metlife",
      "patterns": [
        {
          "regex": "(?i)premium of (?:INR|Rs)[\\.,\\s\\:]*([\\d,]*\\.?\\d{0,2}) for policy number (\\d+) is due for debit.*?on (\\d{2}\\-\\w{3}\\-\\d{4})",
          "account_type": "insurance",
          "pattern_UID": "199001",
          "sort_UID": "199001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)pnb metlife policy no (\\d+) for (?:INR|Rs)[\\.,\\s\\:]*([\\d,]*\\.?\\d{0,2}) is due on (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "insurance",
          "pattern_UID": "199002",
          "sort_UID": "199002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000199",
      "senders": [
        "PNBMET",
        "METCOM"
      ]
    },
    {
      "full_name": "Reliance Nippon Life Insurance",
      "name": "Reliance Nippon Life",
      "patterns": [
        {
          "regex": "(?i)premium of (?:INR|Rs)[\\.,\\s\\:]*([\\d,]*\\.?\\d{0,2}) .*?policy (?:number|no) (\\d+) .*?(?:by|due on|due date|chosen date|before) (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "insurance",
          "pattern_UID": "201001",
          "sort_UID": "201001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)ensure.*?payment of your rnlic policy (\\d+) of (?:INR|Rs)[\\.,\\s\\:]*([\\d,]*\\.?\\d{0,2}) is done by (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "insurance",
          "pattern_UID": "201002",
          "sort_UID": "201002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000201",
      "senders": [
        "RNLICL"
      ]
    },
    {
      "full_name": "Nextra Broadband",
      "name": "Nextra Broadband",
      "patterns": [
        {
          "regex": "(?i)customer id (\\d+)\\, expires on (\\d{2}\\/\\d{2}\\/\\d{4})\\. top\\-up with (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "generic",
          "pattern_UID": "202001",
          "sort_UID": "202001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "internet_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000202",
      "senders": [
        "NEXTRA"
      ]
    },
    {
      "full_name": "SBPDCL",
      "name": "SBPDCL",
      "patterns": [
        {
          "regex": "(?i)energy bill for (?:ca|con id)[\\s\\:]*(\\d+) (?:for|of) .*?is (?:INR|Rs)[\\.,\\s\\:]*([\\d,]*\\.?\\d{0,2})[\\s\\.]pay before (\\d{2}[\\/\\-]\\d{2}[\\/\\-]\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "203001",
          "sort_UID": "203001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000203",
      "senders": [
        "SBPDCL"
      ]
    },
    {
      "full_name": "Spectra Broadband",
      "name": "Spectra Broadband",
      "patterns": [
        {
          "regex": "(?i)bill for a\\/c no[\\s\\.]*(\\d+) of (?:INR|Rs)[\\.,\\s\\:]*([\\d,]*\\.?\\d{0,2}) (?:has.*?due date is|is due on)[\\s\\-]*(\\d{2}\\-\\w{3}\\-\\d{4})",
          "account_type": "generic",
          "pattern_UID": "204001",
          "sort_UID": "204001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "internet_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000204",
      "senders": [
        "SPCTRA",
        "SPETRA"
      ]
    },
    {
      "full_name": "Tata AIA Life Insurance",
      "name": "Tata AIA Life",
      "patterns": [
        {
          "regex": "(?i)premium of (?:INR|Rs)[\\.,\\s\\:]*([\\d,]*\\.?\\d{0,2}) (?:due on|will be debited on) (\\d{2}\\/\\d{2}\\/\\d{4}) (?:for|towards).*?policy (\\w+)",
          "account_type": "insurance",
          "pattern_UID": "205001",
          "sort_UID": "205001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)premium of (?:INR|Rs)[\\.,\\s\\:]*([\\d,]*\\.?\\d{0,2}) is due for.*? life policy (\\w+) on (\\d{2}\\-\\d{2}\\-\\d{4})",
          "account_type": "insurance",
          "pattern_UID": "205002",
          "sort_UID": "205002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "insurance_premium",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000205",
      "senders": [
        "TATALI",
        "TATAAI"
      ]
    },
    {
      "full_name": "TSECL",
      "name": "TSECL",
      "patterns": [
        {
          "regex": "(?i)electricity bill.*?due for payment on (\\d{2}\\.\\d{2}\\.\\d{4})\\..*?consumer id (\\d+) .*?net payable amount is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "electricity",
          "pattern_UID": "206001",
          "sort_UID": "206001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 1,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)energy bill.*?consumer id (\\d+)\\,\\s*bill.*?due date (\\d{2}\\.\\d{2}\\.\\d{4})\\..*?net payable (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "electricity",
          "pattern_UID": "206002",
          "sort_UID": "206002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 3
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd.MM.yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000206",
      "senders": [
        "TSECLI"
      ]
    },
    {
      "full_name": "Tripura Natural Gas",
      "name": "Tripura Natural Gas",
      "patterns": [
        {
          "regex": "(?i)bill.*?for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) id (\\d+) is generated.*?due date is (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "gas",
          "pattern_UID": "207001",
          "sort_UID": "207001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000207",
      "senders": [
        "TNGCLT"
      ]
    },
    {
      "full_name": "Uttarakhand Power Corporation",
      "name": "UPCL",
      "patterns": [
        {
          "regex": "(?i)electricity bill of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*?(?:sc|a\\/c)\\s*no[\\.\\-\\s]*(\\w+)[\\s\\,]*(?:before|due date) (\\d{0,2}\\-\\d{0,2}\\-\\d{4}|\\d{2}\\-\\w{3}\\-\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "208001",
          "sort_UID": "208001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000208",
      "senders": [
        "UPCLUK"
      ]
    },
    {
      "full_name": "Vadodara Gas",
      "name": "Vadodara Gas",
      "patterns": [
        {
          "regex": "(?i)gas bill for con[\\s\\.]*no[\\s\\:]*(\\d+) .*?of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}).*? due date is (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "gas",
          "pattern_UID": "209001",
          "sort_UID": "209001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "gas_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000209",
      "senders": [
        "VGLBIL"
      ]
    },
    {
      "full_name": "Bharatpur Electricity",
      "name": "BESL",
      "patterns": [
        {
          "regex": "(?i)k\\s*no[\\s\\.\\-]*(\\d+)[\\s\\,].*?(?:bill|is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\,]+(?:pay by)?\\s*(\\d{2}\\-\\d{2}\\-\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "211001",
          "sort_UID": "211001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000211",
      "senders": [
        "BESLLM",
        "BESLSM"
      ]
    },
    {
      "full_name": "Bikaner Electricity Supply",
      "name": "BKESLM",
      "patterns": [
        {
          "regex": "(?i)k\\s*no[\\s\\.\\-]*(\\d+)[\\s\\,].*?(?:bill|is) (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})[\\s\\,]+(?:pay by)?\\s*(\\d{2}\\-\\d{2}\\-\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "212001",
          "sort_UID": "212001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000212",
      "senders": [
        "BKESLM",
        "BKSLSM"
      ]
    },
    {
      "full_name": "Daman & Diu electricity",
      "name": "DDED",
      "patterns": [
        {
          "regex": "(?i)bill.*?consumer id[\\s\\.]*(\\d+) .*?of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is due on (\\d{2}\\/\\d{2}\\/\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "213001",
          "sort_UID": "213001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000213",
      "senders": [
        "DDEDIN"
      ]
    },
    {
      "full_name": "JUSCO",
      "name": "JUSCO",
      "patterns": [
        {
          "regex": "(?i)jusco.*?bill.*?total payable amt (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for bp (\\d+)\\..*?due dt\\:(\\d{2}\\-\\d{2}\\-\\d{4})",
          "account_type": "electricity",
          "pattern_UID": "214001",
          "sort_UID": "214001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000214",
      "senders": [
        "JUSCOL"
      ]
    },
    {
      "full_name": "TTN BroadBand",
      "name": "TTN BroadBand",
      "patterns": [
        {
          "regex": "(?i)ebill on acc no[\\s\\.]*(\\d+) has been generated.*?amt (?:INR|Rs|[a-z]{3})?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) due date is (\\d{4}\\-\\d{2}\\-\\d{2})",
          "account_type": "generic",
          "pattern_UID": "215001",
          "sort_UID": "215001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "internet_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yyyy-MM-dd"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000215",
      "senders": [
        "TTNNET",
        "SHRTCN"
      ]
    },
    {
      "full_name": "M.P. Madhya Kshetra Vidyut Vitaran",
      "name": "MPMKVVCL",
      "patterns": [
        {
          "regex": "(?i)bill (?:for|of) (?:conn[\\s\\.]*no|ivrs)[\\s\\.]*(\\w+) (?:dispatched|for).*?(?:is|bill amt) (?:INR|Rs|[a-z]{3})?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\.]*due date\\s*(?:is)?\\s*(\\d{2}\\/\\d{2}\\/\\d{2}|\\d{2}\\-\\w{3})",
          "account_type": "electricity",
          "pattern_UID": "216001",
          "sort_UID": "216001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000216",
      "senders": [
        "CCMPCZ"
      ]
    },
    {
      "full_name": "M.P. Poorv Kshetra Vidyut Vitaran",
      "name": "MPPKVVCL-EAST",
      "patterns": [
        {
          "regex": "(?i)pay your electricity bill of (?:INR|Rs|[a-z]{3})?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for ivrs (?:no)?\\s*(\\d+) .*?by (\\d{2}\\/\\d{2}\\/\\d{2}|\\d{2}\\-\\w{3})",
          "account_type": "electricity",
          "pattern_UID": "217001",
          "sort_UID": "217001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 2
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)your electricity bill.*? (?:ivrs)?.*?(\\d+) (?:is generated|generated) for (?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})[\\s\\.] .*?by (\\d{2}\\/\\d{2}\\/\\d{2}|\\d{2}\\-\\w{3})",
          "account_type": "electricity",
          "pattern_UID": "217002",
          "sort_UID": "217002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000217",
      "senders": [
        "MPEAST"
      ]
    },
    {
      "full_name": "M.P. Paschim Kshetra Vidyut Vitaran",
      "name": "MPPKVVCL-WEST",
      "patterns": [
        {
          "regex": "(?i)electricity bill for (?:consumer number|a\\/c)\\s*(\\w+) .*?(?:is|of) (?:INR|Rs)?[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:is)?\\s*(?:with due date|due on) (\\d{2}\\/\\d{2}\\/\\d{2}|\\d{2}\\-\\w{3})",
          "account_type": "electricity",
          "pattern_UID": "218001",
          "sort_UID": "218001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "electricity_bill",
            "pan": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000218",
      "senders": [
        "MPSEBW"
      ]
    },
    {
      "full_name": "One Card",
      "name": "One Card",
      "patterns": [
        {
          "regex": "(?i)transaction at\\s*(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) at (.*?) on card ending (\\d{4}) and valid",
          "account_type": "credit_card",
          "pattern_UID": "219001",
          "sort_UID": "219001",
          "sms_type": "transaction",
          "data_fields": {
            "deleted": true,
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "group_id": 3
            },
            "pos": {
              "group_id": 2
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:your payment|paid a bill) of (INR|Rs|[a-z]{3}|\\u20b9)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:at|on) (.*?)\\s*(?:has been processed|& also have earned reward|was processed|$)",
          "account_type": "credit_card",
          "pattern_UID": "219002",
          "sort_UID": "219002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "deleted": false,
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "amount",
                    "child_field": "amount"
                  },
                  {
                    "parent_field": "pan",
                    "child_field": "pan"
                  },
                  {
                    "parent_field": "pos",
                    "child_field": "pos"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                }
              ]
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:received reversal of your transaction|received a refund) of (INR|Rs|\\u20b9|[a-z]{3})[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) (?:on your onecard from|done at) (.*?)(?:\\.|\\son\\s)",
          "account_type": "credit_card",
          "pattern_UID": "219003",
          "sort_UID": "219003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            },
            "currency": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)statement.*?total amount due is (?:INR|Rs|\\u20b9)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})\\..*?payment is due by (\\d{2}\\-\\w{3})\\,",
          "account_type": "credit_card",
          "pattern_UID": "219004",
          "sort_UID": "219004",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "value": "XXXX"
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM"
                }
              ]
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)(?:hand\\-picked groceries|delicious purchase) for (INR|Rs|[a-z]{3}|\\u20b9)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) at (.*?)\\s*(?:\\.\\s*packing some fresh reward|serving you|$)",
          "account_type": "credit_card",
          "pattern_UID": "219005",
          "sort_UID": "219005",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "deleted": false,
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "amount",
                    "child_field": "amount"
                  },
                  {
                    "parent_field": "pan",
                    "child_field": "pan"
                  },
                  {
                    "parent_field": "pos",
                    "child_field": "pos"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                }
              ]
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:made a purchase of|hand\\-picked great stuff for) (INR|Rs|[a-z]{3}|\\u20b9)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) at (.*?)\\.\\s*(?:health[\\s\\=]+|rewarding you with)",
          "account_type": "credit_card",
          "pattern_UID": "219006",
          "sort_UID": "219006",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "deleted": false,
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "amount",
                    "child_field": "amount"
                  },
                  {
                    "parent_field": "pan",
                    "child_field": "pan"
                  },
                  {
                    "parent_field": "pos",
                    "child_field": "pos"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                }
              ]
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:fueled up for|just paid) (INR|Rs|[a-z]{3}|\\u20b9)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) (?:at|for your commute on) (.*?)\\.\\s*we\\'ve (?:pumped up|pooled)",
          "account_type": "credit_card",
          "pattern_UID": "219007",
          "sort_UID": "219007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "deleted": false,
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "amount",
                    "child_field": "amount"
                  },
                  {
                    "parent_field": "pan",
                    "child_field": "pan"
                  },
                  {
                    "parent_field": "pos",
                    "child_field": "pos"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                }
              ]
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:made a booking of|booked a blockbuster entertainment for) (INR|Rs|[a-z]{3}|\\u20b9)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (.*?)\\.\\s*(?:packing some reward|unveil reward)",
          "account_type": "credit_card",
          "pattern_UID": "219008",
          "sort_UID": "219008",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "deleted": false,
            "enable_chaining": true,
            "chaining_rule": {
              "parent_match": {
                "parent_override": [
                  {
                    "deleted": true
                  }
                ],
                "child_override": [
                  {
                    "parent_field": "amount",
                    "child_field": "amount"
                  },
                  {
                    "parent_field": "pan",
                    "child_field": "pan"
                  },
                  {
                    "parent_field": "pos",
                    "child_field": "pos"
                  }
                ]
              },
              "parent_selection": [
                {
                  "parent_field": "amount",
                  "child_field": {
                    "field": "amount"
                  },
                  "match_type": "exact"
                },
                {
                  "parent_field": "date",
                  "match_value": 600000,
                  "child_field": {
                    "field": "date"
                  },
                  "match_type": "delta"
                }
              ]
            },
            "currency": {
              "group_id": 1
            },
            "amount": {
              "group_id": 2
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "group_id": 3
            },
            "date": {
              "use_sms_time": true
            }
          }
        }
      ],
      "sender_UID": "90000219",
      "senders": [
        "ONECRD"
      ]
    },
    {
      "full_name": "Slice",
      "name": "Slice",
      "patterns": [
        {
          "regex": "(?i)slice card transaction of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is successful.*?(?:account|credit) balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "221001",
          "sort_UID": "221001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Slice",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)(?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) has been successfully transferred to your bank account.*?balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "221002",
          "sort_UID": "221002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Bank Transfer",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)paytm recharge of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) is successful.*?account balance is (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "221003",
          "sort_UID": "221003",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Paytm",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            },
            "account_balance": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)slice card transaction for (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) was successful.*?cashback of",
          "account_type": "credit_card",
          "pattern_UID": "221004",
          "sort_UID": "221004",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit_card",
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            },
            "pos": {
              "value": "Slice",
              "set_no_pos": true
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)(?:total due for|total monthly payment due on) (\\d{1,2}\\w{2} \\w+) is (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2})",
          "account_type": "credit_card",
          "pattern_UID": "221005",
          "sort_UID": "221005",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 2
            },
            "date": {
              "group_id": 1,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd'st' MMMMM"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'nd' MMMMM"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'rd' MMMMM"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'th' MMMMM"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)card bill payment of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) is due on (\\d{1,2}\\w{2} \\w{3})[\\s\\.]+",
          "account_type": "credit_card",
          "pattern_UID": "221006",
          "sort_UID": "221006",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "credit_card_bill",
            "pan": {
              "value": "XXXX"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd'st' MMM"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'nd' MMM"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'rd' MMM"
                },
                {
                  "use_sms_time": false,
                  "format": "dd'th' MMM"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)slice cash worth (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) has been credited to your account",
          "account_type": "credit_card",
          "pattern_UID": "221007",
          "sort_UID": "221007",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_rewards",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "value": "Credit",
              "set_no_pos": true
            },
            "amount": {
              "group_id": 1
            },
            "pan": {
              "value": "XXXX"
            }
          }
        }
      ],
      "sender_UID": "90000221",
      "senders": [
        "SLCEIT"
      ]
    },
    {
      "full_name": "Sezzle",
      "name": "Sezzle",
      "patterns": [
        {
          "regex": "(?i)Congratulating you on a successful order of (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) from (.*?)\\.\\s*visit",
          "account_type": "pay_later",
          "pattern_UID": "222001",
          "sort_UID": "222001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            }
          }
        },
        {
          "regex": "(?i)refund received[\\s\\.]*(.*?) has added a refund of (?:INR|Rs)*[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "pay_later",
          "pattern_UID": "222002",
          "sort_UID": "222002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 2
            },
            "pos": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        },
        {
          "regex": "(?i)upcoming payment of (?:INR|Rs)*[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) on (\\d{2}\\-\\w{3}\\-\\d{4}) for your purchase with (.*?)\\.\\s*for",
          "account_type": "pay_later",
          "pattern_UID": "222003",
          "sort_UID": "222003",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "pay_later_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MMM-yy"
                }
              ]
            },
            "pos_info": {
              "group_id": 3
            }
          }
        }
      ],
      "sender_UID": "90000222",
      "senders": [
        "SEZZLE"
      ]
    },
    {
      "full_name": "ZestMoney",
      "name": "ZestMoney",
      "patterns": [
        {
          "regex": "(?i)your ZestMoney loan.*? for (.*?) order worth (?:INR|Rs)[\\.,\\s]*([\\d,]*\\.?\\d{0,2})",
          "account_type": "pay_later",
          "pattern_UID": "223001",
          "sort_UID": "223001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "date": {
              "use_sms_time": true
            },
            "pos": {
              "group_id": 1
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 2
            }
          }
        },
        {
          "regex": "(?i)payment (?:worth|of) (?:INR|Rs)*[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) for your order from (.*?) (?:that)?\\s*is due on (\\d{2}[\\/\\-]\\d{2}[\\-\\/]\\d{4})",
          "account_type": "pay_later",
          "pattern_UID": "223002",
          "sort_UID": "223002",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "pay_later_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "pos_info": {
              "group_id": 2
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy"
                },
                {
                  "use_sms_time": false,
                  "format": "dd/MM/yy"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000223",
      "senders": [
        "ZESTMN",
        "ZESTMO"
      ]
    },
    {
      "full_name": "Bullet",
      "name": "Bullet",
      "patterns": [
        {
          "regex": "(?i)bill of (?:INR|Rs)*[\\.,\\s]*([\\d,]*\\.?\\d{0,2}) .*(?:due on|[\\s\\S]*pay\\-bullet\\-bill by) (\\d{4}\\-\\d{2}\\-\\d{2})",
          "account_type": "pay_later",
          "pattern_UID": "224001",
          "sort_UID": "224001",
          "sms_type": "statement",
          "data_fields": {
            "statement_type": "pay_later_bill",
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 2,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "yy-MM-dd"
                }
              ]
            }
          }
        }
      ],
      "sender_UID": "90000224",
      "senders": [
        "BULAPP"
      ]
    },
    {
      "full_name": "Uni Card",
      "name": "Uni Card",
      "patterns": [
        {
          "regex": "(?i)Paid (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) with Uni Card to (.*) on ([\\d,-]+ [\\d,:]+ (?:AM|PM))",
          "account_type": "pay_later",
          "pattern_UID": "225001",
          "sort_UID": "225001",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "debit_prepaid",
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "group_id": 3,
              "formats": [
                {
                  "use_sms_time": false,
                  "format": "dd-MM-yy hh:mm a"
                }
              ]
            }
          }
        },
        {
          "regex": "(?i)refund of (?:INR|Rs)[\\.:,\\s]*([\\d,]+\\.?\\d{0,2}) for.*? Uni Card transaction at (.*?) (?:is successfully credited|on [\\d\\-]+.*successfully credited)",
          "account_type": "pay_later",
          "pattern_UID": "225002",
          "sort_UID": "225002",
          "sms_type": "transaction",
          "data_fields": {
            "transaction_type": "credit",
            "transaction_category": "walnut_refund",
            "pos": {
              "group_id": 2
            },
            "pan": {
              "value": "Unknown"
            },
            "amount": {
              "group_id": 1
            },
            "date": {
              "use_sms_time": true
            }
          }
        }
      ],
      "sender_UID": "90000225",
      "senders": [
        "UNICRD"
      ]
    }
  ],
  "version": "6964"
}
